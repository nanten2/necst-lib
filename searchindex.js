Search.setIndex({"docnames": ["_source/neclib", "_source/neclib.configuration", "_source/neclib.controllers", "_source/neclib.controllers.antenna_pid", "_source/neclib.coordinates", "_source/neclib.coordinates.convert", "_source/neclib.coordinates.optimize", "_source/neclib.coordinates.path_finder", "_source/neclib.devices", "_source/neclib.devices.encoder", "_source/neclib.devices.encoder.encoder_base", "_source/neclib.devices.encoder.nd287", "_source/neclib.devices.motor", "_source/neclib.devices.motor.cpz7415v", "_source/neclib.devices.motor.pulse_controller_base", "_source/neclib.devices.selector", "_source/neclib.devices.weather_station", "_source/neclib.devices.weather_station.tr73u", "_source/neclib.devices.weather_station.weather_base", "_source/neclib.exceptions", "_source/neclib.interfaces", "_source/neclib.interfaces.console_logger", "_source/neclib.parameters", "_source/neclib.parameters.obsparam", "_source/neclib.parameters.parser", "_source/neclib.parameters.parser.obsparam_data", "_source/neclib.parameters.parser.pointing_error_data", "_source/neclib.parameters.pointing_error", "_source/neclib.recorders", "_source/neclib.recorders.console_log_writer", "_source/neclib.recorders.file_writer", "_source/neclib.recorders.necstdb_writer", "_source/neclib.recorders.recorder", "_source/neclib.recorders.writer_base", "_source/neclib.safety", "_source/neclib.safety.decelerate", "_source/neclib.safety.status", "_source/neclib.simulators", "_source/neclib.simulators.antenna", "_source/neclib.typing", "_source/neclib.units", "_source/neclib.utils", "_source/neclib.utils.data_utils", "_source/neclib.utils.math_utils", "_source/neclib.utils.quantity_utils", "_source/neclib.utils.simulator_utils", "index", "parameters/index", "tutorials/config", "tutorials/devices", "tutorials/index"], "filenames": ["_source/neclib.rst", "_source/neclib.configuration.rst", "_source/neclib.controllers.rst", "_source/neclib.controllers.antenna_pid.rst", "_source/neclib.coordinates.rst", "_source/neclib.coordinates.convert.rst", "_source/neclib.coordinates.optimize.rst", "_source/neclib.coordinates.path_finder.rst", "_source/neclib.devices.rst", "_source/neclib.devices.encoder.rst", "_source/neclib.devices.encoder.encoder_base.rst", "_source/neclib.devices.encoder.nd287.rst", "_source/neclib.devices.motor.rst", "_source/neclib.devices.motor.cpz7415v.rst", "_source/neclib.devices.motor.pulse_controller_base.rst", "_source/neclib.devices.selector.rst", "_source/neclib.devices.weather_station.rst", "_source/neclib.devices.weather_station.tr73u.rst", "_source/neclib.devices.weather_station.weather_base.rst", "_source/neclib.exceptions.rst", "_source/neclib.interfaces.rst", "_source/neclib.interfaces.console_logger.rst", "_source/neclib.parameters.rst", "_source/neclib.parameters.obsparam.rst", "_source/neclib.parameters.parser.rst", "_source/neclib.parameters.parser.obsparam_data.rst", "_source/neclib.parameters.parser.pointing_error_data.rst", "_source/neclib.parameters.pointing_error.rst", "_source/neclib.recorders.rst", "_source/neclib.recorders.console_log_writer.rst", "_source/neclib.recorders.file_writer.rst", "_source/neclib.recorders.necstdb_writer.rst", "_source/neclib.recorders.recorder.rst", "_source/neclib.recorders.writer_base.rst", "_source/neclib.safety.rst", "_source/neclib.safety.decelerate.rst", "_source/neclib.safety.status.rst", "_source/neclib.simulators.rst", "_source/neclib.simulators.antenna.rst", "_source/neclib.typing.rst", "_source/neclib.units.rst", "_source/neclib.utils.rst", "_source/neclib.utils.data_utils.rst", "_source/neclib.utils.math_utils.rst", "_source/neclib.utils.quantity_utils.rst", "_source/neclib.utils.simulator_utils.rst", "index.md", "parameters/index.md", "tutorials/config.md", "tutorials/devices.md", "tutorials/index.md"], "titles": ["neclib", "neclib.configuration", "neclib.controllers", "neclib.controllers.antenna_pid", "neclib.coordinates", "neclib.coordinates.convert", "neclib.coordinates.optimize", "neclib.coordinates.path_finder", "neclib.devices", "neclib.devices.encoder", "neclib.devices.encoder.encoder_base", "neclib.devices.encoder.nd287", "neclib.devices.motor", "neclib.devices.motor.cpz7415v", "neclib.devices.motor.pulse_controller_base", "neclib.devices.selector", "neclib.devices.weather_station", "neclib.devices.weather_station.tr73u", "neclib.devices.weather_station.weather_base", "neclib.exceptions", "neclib.interfaces", "neclib.interfaces.console_logger", "neclib.parameters", "neclib.parameters.obsparam", "neclib.parameters.parser", "neclib.parameters.parser.obsparam_data", "neclib.parameters.parser.pointing_error_data", "neclib.parameters.pointing_error", "neclib.recorders", "neclib.recorders.console_log_writer", "neclib.recorders.file_writer", "neclib.recorders.necstdb_writer", "neclib.recorders.recorder", "neclib.recorders.writer_base", "neclib.safety", "neclib.safety.decelerate", "neclib.safety.status", "neclib.simulators", "neclib.simulators.antenna", "neclib.typing", "neclib.units", "neclib.utils", "neclib.utils.data_utils", "neclib.utils.math_utils", "neclib.utils.quantity_utils", "neclib.utils.simulator_utils", "neclib", "NECST Parameters", "neclib.config", "neclib.devices", "Tutorials for developers"], "terms": {"pure": [0, 46], "python": [0, 23, 36, 41, 42, 44, 46, 47, 48], "tool": [0, 46], "necst": [0, 1, 5, 7, 11, 13, 15, 17, 19, 24, 37, 46, 48, 49], "configurationerror": [0, 13, 15, 19], "error": [0, 3, 5, 7, 13, 15, 19, 21, 22, 24, 26, 27, 43, 47, 48], "relat": [0, 13, 15, 19, 42], "paramet": [0, 3, 5, 6, 7, 10, 11, 13, 14, 15, 19, 21, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 44, 49], "configur": [0, 5, 7, 11, 13, 15, 17, 19, 48, 49], "necstauthorityerror": [0, 19], "control": [0, 8, 12, 13, 19, 38, 47, 48, 49], "prioriti": [0, 19], "config": [0, 1, 5, 7, 11, 13, 15, 17, 49, 50], "creat": [0, 1, 42, 49], "file": [0, 1, 5, 7, 21, 23, 24, 25, 26, 29, 47, 49], "under": [0, 1], "home": [0, 1, 32], "get_logg": [0, 1, 5, 6, 7, 13, 15, 20, 21, 30, 31, 32], "get": [0, 1, 5, 6, 7, 13, 15, 20, 21, 30, 31, 32, 38, 41, 44, 48, 49], "logger": [0, 1, 5, 6, 7, 13, 15, 20, 21, 29, 30, 31, 32, 47], "instanc": [0, 1, 3, 5, 6, 7, 13, 15, 20, 21, 30, 31, 32, 42], "which": [0, 1, 3, 5, 6, 7, 8, 12, 13, 15, 20, 21, 23, 29, 30, 31, 32, 38, 44, 47, 49], "print": [0, 1, 5, 6, 7, 13, 15, 20, 21, 30, 31, 32, 42, 43, 48], "oper": [0, 1, 5, 6, 7, 13, 15, 20, 21, 30, 31, 32, 43], "log": [0, 1, 5, 6, 7, 13, 15, 20, 21, 28, 29, 30, 31, 32], "consol": [0, 1, 5, 6, 7, 13, 15, 20, 21, 28, 29, 30, 31, 32], "class": [0, 3, 5, 6, 7, 10, 11, 13, 14, 17, 18, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 38, 42, 43], "envvarnam": [0, 1], "sourc": [0, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45], "base": [0, 3, 5, 6, 7, 10, 11, 13, 14, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 38, 42, 43, 49], "object": [0, 3, 5, 6, 7, 25, 32, 35, 36, 38, 41, 42, 43, 44, 49], "necst_root": [0, 48], "str": [0, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 36, 39, 42, 44, 47, 48, 49], "ros2_w": 0, "domain_id": 0, "ros_domain_id": 0, "record_root": [0, 32, 47], "necst_record_root": 0, "none": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 21, 23, 27, 28, 29, 30, 31, 32, 33, 38, 41, 42, 43, 44, 48, 49], "valuerang": [1, 6, 35, 41, 42, 47], "util": [1, 35], "type": [1, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 21, 23, 27, 29, 30, 31, 32, 33, 38, 40, 41, 42, 43, 44, 47, 48, 49], "valu": [1, 3, 6, 13, 21, 23, 25, 26, 31, 35, 38, 41, 42, 43, 44, 48, 49], "rang": [1, 6, 34, 35, 41, 42, 43, 47], "check": [1, 30, 33, 41, 42, 43, 47], "return": [1, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 21, 23, 27, 29, 30, 31, 32, 33, 38, 40, 42, 43, 44, 49], "miscellan": [2, 46], "devic": [2, 3, 47, 48, 50], "mai": [2, 3, 38, 43, 44], "refer": [2, 46, 48, 49], "collect": [2, 37, 41], "function": [2, 3, 21, 31, 37, 38, 41, 42, 43, 44, 49], "implement": [2, 3, 23, 30, 33, 37, 38, 44, 48, 50], "some": [2, 3, 21, 23, 30, 33, 50], "algorithm": [2, 35], "someth": [2, 20, 21], "pidcontrol": [2, 3, 38], "pid": [2, 3, 38, 47], "telescop": [2, 3, 7, 27, 34, 35, 38, 47], "antenna": [2, 3, 37, 47, 48], "main": 3, "dish": 3, "optimum": [3, 4, 6], "i": [3, 5, 6, 13, 21, 23, 25, 26, 27, 30, 31, 33, 35, 36, 37, 42, 43, 44, 46, 48], "calcul": [3, 4, 5, 7, 22, 23, 27, 35, 38, 44], "us": [3, 23, 28, 32, 37, 40, 43, 44, 46, 49], "simpl": [3, 39], "consist": [3, 49], "proport": 3, "integr": 3, "deriv": 3, "term": 3, "u": [3, 5, 6, 7, 35, 40, 44], "t": [3, 5, 6, 7, 23, 25, 26, 29, 30, 31, 33, 35, 38, 40, 42, 43, 44, 47, 48, 49], "k_": 3, "mathrm": [3, 27], "p": 3, "e": [3, 23, 27, 48], "int": [3, 5, 6, 7, 13, 14, 21, 23, 31, 32, 35, 40, 42, 43, 44, 47, 48], "tau": 3, "d": [3, 6, 27], "frac": [3, 35], "where": [3, 6, 26, 35], "ar": [3, 5, 6, 7, 13, 21, 25, 26, 29, 35, 36, 38, 42, 44, 47, 48, 49, 50], "non": [3, 13, 21, 37, 48, 49], "neg": [3, 26], "constant": [3, 26, 38, 47], "": [3, 21, 23, 32, 35, 37, 41, 43, 44, 47, 48, 49], "between": [3, 6, 26, 35, 38, 40, 41, 43, 44], "desir": 3, "actual": [3, 49], "explanatori": 3, "thi": [3, 5, 6, 7, 13, 19, 21, 23, 27, 29, 30, 31, 32, 33, 39, 43, 44, 46, 47, 48, 49, 50], "script": [3, 37, 40], "execut": [3, 40], "high": [3, 35], "frequenc": [3, 5, 7, 47], "vector": 3, "mani": 3, "arrai": [3, 6, 7, 47, 48], "updat": [3, 31], "frequent": 3, "These": [3, 48], "mean": [3, 49], "numpi": [3, 43], "best": 3, "choic": [3, 6], "speed": [3, 7, 13, 14, 35, 38, 47, 48], "up": [3, 8, 12, 13, 43], "measur": 3, "time": [3, 5, 6, 23, 38, 44, 47, 48], "first": [3, 26, 43, 48], "parameterlist": [3, 38, 41, 42], "list": [3, 7, 15, 23, 31, 32, 36, 38, 40, 41, 42, 43, 44, 47, 48], "special": [3, 38, 41, 42], "store": [3, 32, 38, 41, 42], "pid_param": 3, "1": [3, 7, 13, 21, 23, 27, 32, 35, 40, 42, 43, 44, 48], "0": [3, 5, 7, 13, 21, 23, 25, 31, 35, 38, 41, 42, 43], "5": [3, 5, 6, 7, 23, 27, 31, 35, 38, 40, 42, 43, 44], "3": [3, 27, 38, 42, 43, 44], "max_spe": [3, 48], "quantiti": [3, 5, 6, 7, 10, 11, 17, 18, 22, 23, 24, 25, 26, 27, 35, 38, 40, 41, 43, 44, 47, 48], "2": [3, 27, 35, 42, 43, 44, 48], "deg": [3, 5, 6, 7, 23, 27, 35, 38, 39, 44, 48], "max_acceler": [3, 35, 48], "s2": [3, 48], "error_integ_count": 3, "50": [3, 21], "threshold": [3, 47], "accel_limit_off": 3, "20": [3, 21, 27, 42], "arcsec": [3, 26, 27, 38, 39, 44], "cmd_coord_chang": 3, "100": [3, 42, 43], "target_accel_ignor": 3, "classic": 3, "sophist": 3, "system": [3, 19, 46, 47], "ha": [3, 21, 23], "delai": 3, "respons": [3, 37, 38], "input": [3, 23, 30, 33], "handl": [3, 8, 12, 13, 22, 30, 31, 33, 40, 42, 44, 49], "onli": [3, 21, 49], "so": [3, 25, 26, 43, 48, 49], "az": [3, 5, 10, 11, 13, 14, 27, 38, 41, 42, 44, 47], "el": [3, 5, 10, 11, 13, 14, 27, 38, 41, 42, 44, 47], "tupl": [3, 5, 7, 13, 23, 27, 31, 38, 40], "float": [3, 5, 6, 7, 13, 14, 17, 18, 23, 26, 27, 31, 38, 40, 41, 43, 44, 47, 48, 49], "coeffici": [3, 26], "formul": 3, "k_p": 3, "k_i": 3, "k_d": 3, "union": [3, 5, 6, 7, 23, 25, 26, 27, 31, 32, 38, 39, 43, 44], "maximum": [3, 35, 38, 41, 43, 47], "motion": [3, 38], "acceler": [3, 35, 38, 47], "number": [3, 23, 31, 32, 40, 43], "data": [3, 28, 29, 30, 31, 32, 33, 42], "dict": [3, 15, 21, 23, 25, 26, 31, 41, 42, 44, 48, 49], "liter": [3, 10, 11, 13, 14, 38, 39, 42, 43, 44], "astropi": [3, 40, 41, 44], "unit": [3, 5, 6, 7, 23, 27, 38, 39, 41, 44], "condit": [3, 43], "interpret": [3, 21], "kei": [3, 25, 26, 31, 42, 48, 49], "angl": [3, 4, 6, 23, 25, 26], "If": [3, 5, 6, 7, 21, 23, 31, 35, 36, 37, 42, 43, 44, 47, 48], "separ": [3, 6], "new": [3, 42, 49], "command": [3, 6, 38, 47], "coordin": [3, 22, 23, 38, 47], "last": [3, 38, 43], "one": [3, 36, 37], "larger": 3, "than": [3, 6, 21, 31, 44, 47], "assum": 3, "target": [3, 5, 6], "been": 3, "chang": [3, 23, 38], "reset": 3, "encod": [3, 8, 26, 35, 38], "read": [3, 26, 31, 35, 38, 48], "smaller": [3, 6], "stop": [3, 41, 43], "appli": [3, 6, 42], "limit": [3, 6, 34, 35, 41, 42, 43, 47, 49], "quick": 3, "converg": [3, 47], "drive": [3, 4, 6, 7, 34, 35, 47], "angular": [3, 5, 6, 7, 38, 39, 41, 44], "exce": [3, 43], "target_spe": 3, "ignor": [3, 5, 7], "most": 3, "like": [3, 48, 49], "caus": [3, 43, 48], "softwar": [3, 47, 48], "bug": 3, "network": 3, "congest": 3, "variabl": [3, 5, 7, 23, 26, 29, 31, 48, 49], "upper": [3, 42, 43], "angle_unit": [3, 38], "cmd_speed": 3, "result": [3, 6, 43, 48], "unix": 3, "timestamp": [3, 31], "done": [3, 5], "cmd_coord": 3, "enc_coord": 3, "deviat": 3, "rate": 3, "add": 3, "gener": [3, 41, 42, 43, 44, 48], "an": 3, "attempt": [3, 47], "follow": [3, 25, 26, 27, 48, 49], "raster": 3, "scan": [3, 23, 40, 47], "sider": 3, "track": 3, "error_integr": 3, "error_deriv": 3, "keep": 3, "default": [3, 13, 36, 48], "optim": 3, "accord": 3, "interv": [3, 22, 23, 38, 47], "depend": [3, 38], "all": [3, 21, 29, 32, 42, 47, 48], "method": [3, 23, 42, 43, 49], "argument": [3, 21, 23], "given": [3, 5, 6, 7, 13, 23, 36, 41, 44], "you": [3, 35, 44, 48, 49], "need": [3, 21, 49], "substitut": 3, "befor": 3, "instanti": 3, "exampl": [3, 5, 6, 7, 19, 21, 23, 25, 26, 27, 31, 32, 35, 36, 38, 40, 42, 43, 44], "1000": [3, 31, 44], "6": [3, 5, 35, 42, 43], "target_coordin": 3, "encoder_read": 3, "30": [3, 5, 13, 21, 27, 38, 44], "10": [3, 13, 21, 23, 27, 42, 43], "get_spe": [3, 13, 14, 38], "430511474609375e": 3, "05": [3, 7], "20356178283691406": 3, "classvar": [3, 23, 38], "arcmin": [3, 38, 39, 44], "rad": [3, 38, 39, 44], "public": [3, 23], "accept": [3, 13, 29, 48], "its": [3, 23, 42, 44, 47, 48, 49], "properti": [3, 32, 38, 42], "dt": [3, 35, 38], "fals": [3, 23, 36, 42, 43], "modul": [3, 15, 23, 27, 37, 38], "instruct": 3, "bool": [3, 23, 29, 31, 42, 43, 47, 48], "true": [3, 21, 23, 36, 42, 43, 47], "won": [3, 6, 23, 25, 26, 30, 33, 44, 47, 48], "move": [3, 23], "regardless": 3, "param": [3, 23, 25, 26, 27, 42], "kwarg": [3, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33], "coordcalcul": [4, 5, 7], "horizont": [4, 5, 7], "drivelimitcheck": [4, 6], "find": [4, 6, 44], "safe": [4, 6], "pathfind": [4, 7], "\u671b\u9060\u93e1\u306e\u8ecc\u9053\u3092\u8a08\u7b97\u3059\u308b": [4, 7], "pointingerror": [5, 7, 22, 27], "observ": [5, 6, 7, 21, 22, 23, 24, 25, 27, 29, 40, 48], "point": [5, 7, 22, 23, 24, 26, 27, 40, 43, 47, 48], "locat": [5, 7, 23, 47], "pointing_param_path": [5, 7], "pressur": [5, 7, 31], "temperatur": [5, 7], "relative_humid": [5, 7], "obswl": [5, 7, 23], "obsfreq": [5, 7], "earthloc": [5, 7, 47], "observatori": [5, 7, 31, 47, 48], "pathlik": [5, 7, 25, 26, 32, 39], "path": [5, 7, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 47, 48], "atmospher": [5, 7], "environ": [5, 7, 48], "ndarrai": [5, 6, 7, 43, 44], "rel": [5, 7, 48], "humid": [5, 7], "wavelength": [5, 7], "comput": [5, 7], "diffract": [5, 7], "correct": [5, 7, 27], "em": [5, 7], "wave": [5, 7], "138": [5, 7], "472153deg": [5, 7], "35": [5, 7], "940874deg": [5, 7], "1386m": [5, 7], "pointing_param": [5, 7], "toml": [5, 7, 25, 26, 27, 47, 48], "850": [5, 7, 31], "hpa": [5, 7], "300": [5, 23], "k": [5, 7], "230": [5, 7], "ghz": [5, 7], "get_altaz_by_nam": 5, "name": [5, 21, 23, 25, 26, 31, 36, 47, 48], "obstim": [5, 23], "\u5929\u4f53\u540d\u304b\u3089\u5730\u5e73\u5ea7\u6a19": 5, "alt": 5, "\u3092\u53d6\u5f97\u3059\u308b": 5, "celesti": 5, "option": [5, 6, 7, 21, 23, 27, 31, 32, 41, 42, 43, 44], "sequenc": [5, 41, 43], "m42": 5, "skycoord": [5, 23], "274": 5, "55435678": 5, "15": [5, 31], "3762009": 5, "get_altaz": 5, "lon": [5, 47], "lat": [5, 47], "frame": [5, 7, 23], "from": [5, 23, 31, 32, 41, 43, 48, 49], "longitud": [5, 7, 23], "latitud": [5, 7, 23], "arbitrari": [5, 28, 32, 43], "basecoordinatefram": [5, 7, 23], "thei": [5, 7, 40], "45": [5, 23], "fk5": [5, 23], "344": 5, "21675916": 5, "43235393": 5, "preferred_limit": 6, "max_observation_s": 6, "The": [6, 13, 23, 25, 26, 27, 30, 33, 35, 36, 49], "includ": [6, 41, 43, 48], "constraint": 6, "avoid": [6, 49], "direct": [6, 26], "unwrap": 6, "360deg": 6, "dure": [6, 38], "over": 6, "180deg": [6, 26], "never": [6, 43], "go": 6, "out": 6, "can": [6, 8, 12, 13, 23, 32, 38, 43, 44, 48, 49], "violat": 6, "continu": [6, 21], "other": [6, 13, 21, 23], "found": [6, 48, 49], "current": [6, 31, 38], "occur": 6, "possibli": 6, "interrupt": 6, "checker": 6, "260": 6, "250": 6, "200": 6, "170": 6, "190": 6, "scalar": 6, "n": [6, 38], "shape": 6, "seri": 6, "length": [6, 42], "290": 7, "finder": 7, "linear": 7, "start": [7, 43], "end": 7, "\u671b\u9060\u93e1\u306e\u76f4\u7dda\u8ecc\u9053\u3092\u8a08\u7b97\u3059\u308b": 7, "altaz": [7, 23], "47920569": 7, "46920569": 7, "45920569": 7, "44920569": 7, "43920569": 7, "42920569": 7, "88176239": 7, "88176188": 7, "88176136": 7, "88176084": 7, "88176032": 7, "8817598": 7, "66685637e": 7, "09": 7, "antennaencod": 8, "readout": [8, 9, 11], "antennamotor": [8, 49], "puls": [8, 12, 13], "4": [8, 12, 13, 42, 43], "motor": [8, 38, 47, 49], "ax": [8, 12, 13, 26, 38], "weatherst": 8, "antenna_encod": 8, "antenna_motor": 8, "weather_st": 8, "nd287": 9, "abc": [10, 14, 18, 33, 42, 49], "manufactur": [10, 11, 13, 14, 17, 18, 49], "model": [10, 11, 13, 14, 17, 18, 27], "abstract": [10, 14, 18, 33], "get_read": [10, 11], "axi": [10, 11, 13, 14, 26, 38, 42, 47], "final": [10, 11, 13, 14, 17, 18, 49], "heidenhain": 11, "cpz7415v": [12, 49], "pulsecontrol": [13, 14], "rsw_id": 13, "board": 13, "identifi": [13, 49], "set": [13, 21, 38, 48, 49], "rotari": 13, "switch": 13, "label": 13, "rsw1": 13, "mount": 13, "side": 13, "ship": 13, "id": 13, "would": [13, 30, 33, 49], "zero": [13, 21, 26], "when": [13, 43, 47, 48, 49], "multipl": [13, 43], "pci": 13, "same": [13, 21, 26, 37, 43, 49], "singl": [13, 48], "fa": 13, "factori": 13, "autom": 13, "16": 13, "9": [13, 43], "A": [13, 25], "f": [13, 21], "see": [13, 21, 46, 48], "http": 13, "www": 13, "interfac": 13, "co": [13, 23, 27], "jp": 13, "download": 13, "tutori": 13, "tut0053_14": 13, "pdf": 13, "commandqueuemaxs": 13, "fatal": 13, "warn": [13, 21, 31, 36], "set_step": [13, 14], "step": [13, 14, 43], "set_spe": [13, 14], "set_do_statu": 13, "statu": [13, 19, 34], "do_num": 13, "get_step": [13, 14], "parse_device_configur": 15, "ani": [15, 29, 31, 33, 38, 41, 42, 44, 47, 48], "list_implement": 15, "tr73u": 16, "weather": [17, 18], "tandd": 17, "get_temp": [17, 18], "get_humid": [17, 18], "get_press": [17, 18], "inform": [19, 20, 21], "regard": 19, "rais": [19, 36], "reason": 19, "advis": 19, "fix": [19, 38], "user": [20, 21, 32], "colorizelevelnameformatt": 21, "fmt": 21, "datefmt": 21, "style": [21, 26], "valid": [21, 25, 26, 48], "formatt": 21, "color": 21, "sever": [21, 29, 36], "level": [21, 36], "doc": 21, "usag": [21, 50], "colorprefix": 21, "x1b": 21, "0m": 21, "35m": 21, "32m": 21, "33m": 21, "40": [21, 27], "31m": 21, "41": [21, 43], "97m": 21, "format": [21, 25, 26, 44], "record": [21, 47, 48], "text": 21, "logrecord": 21, "consolelogg": [21, 29], "arg": [21, 29, 30, 31, 32, 33], "observe_level": 21, "21": [21, 27], "obslog": 21, "msg": 21, "indent_level": 21, "summari": [21, 29], "debug": [21, 29], "messag": [21, 47], "indent": 21, "min_level": 21, "call": [21, 38], "lower": [21, 42, 43, 48], "bound": [21, 42], "displai": 21, "termin": 21, "To": [21, 38, 40, 49], "suppress": 21, "less": 21, "higher": 21, "No": [21, 49], "matter": 21, "contain": [21, 50], "getlogg": 21, "otf_observ": 21, "txt": [21, 26], "diagnos": 21, "problem": 21, "info": 21, "expect": 21, "happen": 21, "should": [21, 23, 30, 33, 36, 37, 44, 48, 49], "care": 21, "notifi": 21, "cannot": [21, 38, 44, 49], "complet": 21, "due": 21, "critic": [21, 27, 36, 44], "program": 21, "finish": 21, "defin": [22, 40, 49], "obsparamdata": [22, 23, 24, 25], "pars": [22, 23, 24, 25, 26, 27, 47, 48, 49], "spec": [22, 23, 24, 25, 48], "obsparam": [22, 25, 26], "pointingerrordata": [22, 24, 26, 27], "off_point_coord": [22, 23], "off": [22, 23], "convert": [23, 31, 41, 42, 43, 44, 49], "flexibli": 23, "specifi": [23, 48], "form": 23, "api": [23, 38, 46, 49], "content": [23, 30, 40, 48], "translate_coordsi": 23, "offset": [23, 26], "subpackag": 23, "parametermap": [23, 25, 26, 41, 42], "attribut": [23, 25, 26, 41, 42, 48], "access": [23, 25, 26, 41, 42, 48], "support": [23, 25, 26, 37, 38, 39, 41, 42, 43], "quantity2builtin": [23, 41, 44], "built": [23, 41, 43, 44], "map": [23, 42], "val": 23, "provid": [23, 46, 49], "parameterunit": 23, "lamdaon": 23, "betaon": 23, "from_fil": [23, 25, 26, 27], "123": 23, "parameternam": 23, "absolute_off_point_coordin": 23, "lamdaoff": 23, "betaoff": 23, "coord_si": 23, "hot_observation_interv": 23, "load_interv": 23, "off_observation_interv": 23, "off_interv": 23, "offset_coslat_appli": 23, "otadel": 23, "offset_from_on_to_off": 23, "deltalamda": 23, "deltabeta": 23, "delta_coord": 23, "on_point_coordin": 23, "hashabl": [23, 44], "points_per_scan": [23, 40], "hot": 23, "per": [23, 40], "line": [23, 40], "5min": 23, "5scan": [23, 40], "25": [23, 40], "on_point": 23, "coslat_appli": 23, "absolut": [23, 35, 38, 43], "give": [23, 44], "output": [23, 47], "ON": 23, "caution": [23, 43], "0h0m1": 23, "equival": [23, 40, 43, 44], "1arcsec": 23, "divid": 23, "keyword": 23, "pass": [23, 32], "etc": 23, "3h25m20": 23, "31d32m33": 23, "51": 23, "3333": 23, "31": [23, 27], "5425": 23, "5h1m1": 23, "30d25m20": 23, "galact": 23, "hour": [23, 44], "20arcsec": 23, "266": 23, "6442444454571": 23, "48": 23, "39027455272732": 23, "storag": [25, 26, 32], "uppercas": 25, "z0": 25, "9_": 25, "lowercas": 25, "mix": 25, "case": [25, 48, 49], "z": 25, "classmethod": [25, 26, 42], "bare": [25, 26], "nest": [25, 26], "tabl": [25, 26, 31, 47, 48], "allow": [25, 26, 42, 47], "those": [25, 26], "declar": [25, 26], "structur": [25, 26, 31, 32, 42], "flatten": [25, 26], "kind": [25, 26, 42], "preserv": [25, 26, 42], "ob": 25, "amigo": 25, "orikl": 25, "daz": 26, "azimuth": [26, 42], "x": [26, 27, 35, 42, 44], "de": 26, "collim": 26, "chi_az": 26, "magnitud": 26, "tilt": 26, "omega_az": 26, "phase": 26, "ep": 26, "skew": 26, "lack": 26, "orthogon": 26, "elev": [26, 42], "chi2_az": 26, "chi": 26, "period": 26, "harmon": 26, "compon": 26, "omega2_az": 26, "omega": 26, "chi_el": 26, "amplitud": 26, "omega_el": 26, "chi2_el": 26, "omega2_el": 26, "g": [26, 48], "order": [26, 36, 48], "gravit": 26, "deflect": 26, "gg": 26, "second": 26, "ggg": 26, "third": 26, "gggg": 26, "fourth": 26, "del": 26, "de_radio": 26, "optic": 26, "radio": [26, 27], "beam": 26, "del_radio": 26, "cor_v": 26, "cor_p": 26, "g_radio": 26, "gg_radio": 26, "ggg_radio": 26, "gggg_radio": 26, "error_param": 26, "5300": 26, "380": 26, "from_text_fil": 26, "legaci": 26, "import": [27, 40, 48, 49], "perform": 27, "accur": 27, "uniform": 27, "emploi": [27, 44], "delta": 27, "chi_": 27, "sin": 27, "omega_": 27, "epsilon": 27, "cor": 27, "_v": 27, "_p": 27, "e_": 27, "y": 27, "g_1": 27, "g_2": 27, "g_": 27, "el_": 27, "refracted2appar": 27, "11": [27, 38], "apparent2refract": 27, "40680": 27, "76680": 27, "112680": 27, "73800": 27, "109800": 27, "145800": 27, "iter": [27, 42], "consolelogwrit": [28, 29], "writer": [28, 29, 30, 31, 32, 33], "filewrit": [28, 30, 32], "necstdbwrit": [28, 31], "dump": [28, 29, 31], "necstdb": [28, 31], "log_file_path": 29, "obslog_file_path": 29, "start_record": [29, 30, 31, 32, 33], "record_dir": [29, 30, 31, 32, 33], "append": [29, 30, 31, 32, 33, 42], "don": [29, 40, 48, 49], "issu": 29, "stop_record": [29, 30, 31, 32, 33], "textlik": [30, 31], "chunk": [30, 31, 33], "whether": [30, 31, 33], "subclass": [30, 33], "essenti": [30, 33], "differ": [30, 33, 43, 48, 49], "extens": [30, 33, 48], "parse_str_s": 31, "str_to_byt": 31, "byte": 31, "db": 31, "databas": 31, "directori": [31, 32, 48], "doubl": 31, "1664195057": 31, "022712": 31, "float32": 31, "livelinessdur": 31, "isn": [31, 38, 48, 49], "durat": [31, 47], "sec": 31, "close": 31, "warningqueues": 31, "wait": [31, 47], "being": 31, "greater": 31, "dtypeconvert": 31, "callabl": [31, 38, 40, 42], "lambda": [31, 38, 42], "char": 31, "float64": 31, "int16": 31, "int32": 31, "int64": 31, "int8": 31, "string": [31, 47, 48], "uint16": 31, "uint32": 31, "uint64": 31, "uint8": 31, "readabl": 31, "c": [31, 44], "topic": [31, 47], "meter_read": 31, "add_tabl": 31, "metadata": 31, "remove_t": 31, "root": 32, "insid": 32, "subdirectori": [32, 49], "attach": 32, "add_writ": 32, "dbwriter": 32, "test": 32, "drop_writ": 32, "drop": 32, "activ": 32, "deactiv": 32, "deceler": 34, "nears": [34, 35], "manag": [34, 36], "addition": 35, "restrict": [35, 48], "understand": 35, "junior": 35, "physic": [35, 44], "know": [35, 49], "v": [35, 38], "qquad": 35, "v_0": 35, "x_0": 35, "sqrt": 35, "2x": 35, "2ax": 35, "distanc": 35, "consid": 35, "355": 35, "354": 35, "89442719": 35, "ascend": 36, "valueerror": [36, 44], "least": 36, "reserv": 36, "topic1": 36, "namespac": [36, 48], "topic2": 36, "necessari": 37, "run": 37, "mode": 37, "here": [37, 40, 49], "correspond": [37, 38, 49], "origin": [37, 44], "much": 37, "possibl": 37, "through": 37, "inherit": [37, 49], "overrid": 37, "ensur": 37, "behavior": 37, "real": 37, "antennaencoderemul": [37, 38], "emul": [37, 38], "azeldata": [38, 41, 42], "initialposit": 38, "device_moment_of_inertia": 38, "3000": 38, "kg": [38, 44], "m2": 38, "motor_torqu": 38, "m": 38, "angular_resolut": 38, "13728814": 38, "moment": 38, "inertia": 38, "torqu": 38, "exert": 38, "resolut": 38, "independ": [38, 49], "driver": 38, "yet": 38, "enc": 38, "pid_az": 38, "abs_acceler": 38, "two": 38, "consecut": [38, 43], "approxim": 38, "12": 38, "intent": 38, "altazimuth": 38, "alias": 39, "hint": 39, "alia": 39, "o": [39, 48], "combin": 39, "angleunit": 39, "express": [39, 44], "packag": [39, 48, 50], "custom": [40, 48], "without": [40, 49], "fail": 40, "pleas": [40, 48], "even": 40, "explicitli": 40, "appear": [40, 43], "your": 40, "posit": 40, "scan_to_point_equival": 40, "eq": 40, "purpos": 41, "conditioncheck": [41, 43], "angle_conversion_factor": [41, 44], "convers": [41, 44, 47], "factor": [41, 44], "clip": [41, 43], "minimum": [41, 43], "counter": [41, 43], "integ": [41, 43, 47, 48], "daz2dx": [41, 44], "discret": [41, 43], "nearest": [41, 43], "element": [41, 42, 43], "arithmet": [41, 43], "dx2daz": [41, 44], "force_data_typ": [41, 44], "frang": [41, 43], "version": [41, 43, 46, 48], "get_quant": [41, 44], "parse_quant": [41, 44], "partially_convert_unit": [41, 44], "replac": [41, 44], "dimens": [41, 44], "skip_on_simul": [41, 45], "tocamelcas": [41, 42], "supportscomparison": [42, 43], "initvalu": 42, "nan": 42, "fill": 42, "initi": 42, "push": 42, "copi": 42, "func": [42, 45], "everi": 42, "both": 42, "syntax": [42, 48], "fulli": 42, "b": 42, "strict": [42, 49], "comparison": 42, "exactli": 42, "equal": 42, "judg": 42, "valid_valu": 42, "valid_str": 42, "aaa": 42, "bbb": 42, "_": 42, "width": 42, "contain_al": 42, "contain_ani": 42, "pascal": 42, "bumpi": 42, "absmax": 43, "inclus": 43, "yield": 43, "success": 43, "becaus": 43, "overflow": 43, "ing": 43, "almost": 43, "arang": 43, "8": 43, "ceil": 43, "floor": 43, "141592": 43, "7": 43, "allow_infti": 43, "count": 43, "infin": 43, "memori": 43, "leak": 43, "sequenti": 43, "reset_on_failur": 43, "more": [44, 49], "realiz": [44, 49], "slower": 44, "thu": 44, "bottleneck": 44, "angle_deg": 44, "3600": 44, "want": [44, 48], "m_sun": 44, "pc": 44, "solmass": 44, "pc2": 44, "96542625e": 44, "For": 44, "new_unit": 44, "product": 44, "construct": 44, "j": 44, "erg": 44, "w": 44, "l_sun": 44, "1484e": 44, "27": 44, "19e": 44, "23": 44, "h": 44, "couldn": 44, "sollum": 44, "dictionari": 44, "either": 44, "parameter_nam": 44, "299792458m": 44, "km": 44, "299792": 44, "458": 44, "librari": 46, "pip": 46, "semant": 46, "descript": 47, "inlin": [47, 48], "height": 47, "simul": 47, "boolean": [47, 48], "make": 47, "commun": 47, "save": [47, 48], "alert_interval_sec": 47, "alert": 47, "publish": 47, "antenna_pid_param_az": 47, "antenna_pid_param_el": 47, "antenna_drive_range_az": 47, "hardwar": 47, "antenna_drive_range_el": 47, "antenna_drive_warning_limit_az": 47, "prefer": [47, 48, 49], "antenna_drive_warning_limit_el": 47, "antenna_drive_critical_limit_az": 47, "antenna_drive_critical_limit_el": 47, "antenna_pointing_accuraci": 47, "antenna_pointing_parameter_path": 47, "antenna_max_acceleration_az": 47, "antenna_max_acceleration_el": 47, "antenna_max_speed_az": 47, "antenna_max_speed_el": 47, "antenna_command_frequ": 47, "antenna_command_offset_sec": 47, "margin": 47, "ros_service_timeout_sec": 47, "ro": 47, "servic": 47, "client": 47, "server": 47, "ros_communication_deadline_sec": 47, "staler": 47, "subscrib": 47, "ros_logging_interval_sec": 47, "throttl": 47, "too": 47, "verbos": 47, "ros_topic_scan_interval_sec": 47, "node": 47, "constantli": 47, "exist": [47, 48], "design": 48, "nonspecif": 48, "specif": 48, "perticular": 48, "automat": 48, "search": [48, 49], "wasn": 48, "src": 48, "caught": 48, "via": 48, "overwrit": 48, "reload": 48, "below": [48, 49, 50], "written": 48, "tomlkit": 48, "pair": 48, "datetim": 48, "strongli": 48, "discourag": 48, "unexpect": 48, "snake": [48, 49], "word": 48, "split": 48, "underscor": 48, "simplic": 48, "prefix": [48, 49], "indic": [48, 49], "section": [48, 49], "detail": [48, 50], "comment": 48, "encourag": 48, "satisfi": 48, "document": 48, "definit": 48, "antenna_max_spe": 48, "2deg": 48, "antenna_max_acceler": 48, "5deg": 48, "max": 48, "maxacceler": 48, "nor": 48, "__get_pars": 48, "py": [48, 49], "just": [48, 49], "have": 48, "ll": 48, "group": 48, "antenna_param": 48, "nonexist": 48, "undefined_parameters_a": 48, "undefin": 48, "date": 48, "featur": 49, "common": 49, "select": 49, "dev_": 49, "link": 49, "selector": 49, "referenc": 49, "camel": 49, "dev_antenna_motor": 49, "abov": 49, "latter": 49, "reveal": 49, "littl": 49, "bit": 49, "concret": 49, "uniqu": 49, "also": 49, "twice": 49, "m2motor": 49, "write": 49, "dev_m2_motor": 49, "distinguish": 49, "each": 49, "insensit": 49, "procedur": 49, "ad": 49, "alreadi": 49, "skip": 49, "throughout": 49, "decor": 49, "abstractmethod": 49, "requir": 49, "convent": 49, "suffix": 49, "_base": 49, "devicetyp": 49, "def": 49, "set_some_paramet": 49, "self": 49, "get_some_paramet": 49, "get_all_data": 49, "some_paramet": 49, "omit": 49, "alphanumer": 49, "charact": 49, "inconsist": 49, "impos": 49, "freeli": 49, "ones": 49, "duplic": 49, "device_type_bas": 49, "devicemodel": 49, "come": 49, "_some_method_to_implement_get_some_paramet": 49, "In": 50, "pursuit": 50, "conveni": 50, "tricki": 50, "explan": 50, "neclib": 50}, "objects": {"": [[0, 0, 0, "-", "neclib"]], "neclib": [[0, 1, 1, "", "EnvVarName"], [1, 0, 0, "-", "configuration"], [2, 0, 0, "-", "controllers"], [4, 0, 0, "-", "coordinates"], [8, 0, 0, "-", "devices"], [19, 0, 0, "-", "exceptions"], [20, 0, 0, "-", "interfaces"], [22, 0, 0, "-", "parameters"], [28, 0, 0, "-", "recorders"], [34, 0, 0, "-", "safety"], [37, 0, 0, "-", "simulators"], [39, 0, 0, "-", "typing"], [40, 0, 0, "-", "units"], [41, 0, 0, "-", "utils"]], "neclib.EnvVarName": [[0, 2, 1, "", "domain_id"], [0, 2, 1, "", "necst_root"], [0, 2, 1, "", "record_root"], [0, 2, 1, "", "ros2_ws"]], "neclib.configuration": [[1, 3, 1, "", "configure"]], "neclib.controllers": [[3, 0, 0, "-", "antenna_pid"]], "neclib.controllers.antenna_pid": [[3, 1, 1, "", "PIDController"]], "neclib.controllers.antenna_pid.PIDController": [[3, 2, 1, "", "ANGLE_UNIT"], [3, 4, 1, "", "dt"], [3, 4, 1, "", "error_derivative"], [3, 4, 1, "", "error_integral"], [3, 5, 1, "", "get_speed"], [3, 5, 1, "", "params"]], "neclib.coordinates": [[5, 0, 0, "-", "convert"], [6, 0, 0, "-", "optimize"], [7, 0, 0, "-", "path_finder"]], "neclib.coordinates.convert": [[5, 1, 1, "", "CoordCalculator"]], "neclib.coordinates.convert.CoordCalculator": [[5, 5, 1, "", "get_altaz"], [5, 5, 1, "", "get_altaz_by_name"]], "neclib.coordinates.optimize": [[6, 1, 1, "", "DriveLimitChecker"]], "neclib.coordinates.optimize.DriveLimitChecker": [[6, 5, 1, "", "optimize"]], "neclib.coordinates.path_finder": [[7, 1, 1, "", "PathFinder"]], "neclib.coordinates.path_finder.PathFinder": [[7, 5, 1, "", "linear"]], "neclib.devices": [[9, 0, 0, "-", "encoder"], [12, 0, 0, "-", "motor"], [15, 0, 0, "-", "selector"], [16, 0, 0, "-", "weather_station"]], "neclib.devices.encoder": [[10, 0, 0, "-", "encoder_base"], [11, 0, 0, "-", "nd287"]], "neclib.devices.encoder.encoder_base": [[10, 1, 1, "", "Encoder"]], "neclib.devices.encoder.encoder_base.Encoder": [[10, 2, 1, "", "Manufacturer"], [10, 2, 1, "", "Model"], [10, 5, 1, "", "finalize"], [10, 5, 1, "", "get_reading"]], "neclib.devices.encoder.nd287": [[11, 1, 1, "", "ND287"]], "neclib.devices.encoder.nd287.ND287": [[11, 2, 1, "", "Manufacturer"], [11, 2, 1, "", "Model"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "get_reading"]], "neclib.devices.motor": [[13, 0, 0, "-", "cpz7415v"], [14, 0, 0, "-", "pulse_controller_base"]], "neclib.devices.motor.cpz7415v": [[13, 1, 1, "", "CPZ7415V"]], "neclib.devices.motor.cpz7415v.CPZ7415V": [[13, 2, 1, "", "CommandQueueMaxSize"], [13, 2, 1, "", "Manufacturer"], [13, 2, 1, "", "Model"], [13, 5, 1, "", "finalize"], [13, 5, 1, "", "get_speed"], [13, 5, 1, "", "get_step"], [13, 5, 1, "", "set_do_status"], [13, 5, 1, "", "set_speed"], [13, 5, 1, "", "set_step"]], "neclib.devices.motor.pulse_controller_base": [[14, 1, 1, "", "PulseController"]], "neclib.devices.motor.pulse_controller_base.PulseController": [[14, 2, 1, "", "Manufacturer"], [14, 2, 1, "", "Model"], [14, 5, 1, "", "finalize"], [14, 5, 1, "", "get_speed"], [14, 5, 1, "", "get_step"], [14, 5, 1, "", "set_speed"], [14, 5, 1, "", "set_step"]], "neclib.devices.selector": [[15, 3, 1, "", "list_implementations"], [15, 3, 1, "", "parse_device_configuration"]], "neclib.devices.weather_station": [[17, 0, 0, "-", "tr73u"], [18, 0, 0, "-", "weather_base"]], "neclib.devices.weather_station.tr73u": [[17, 1, 1, "", "TR73U"]], "neclib.devices.weather_station.tr73u.TR73U": [[17, 2, 1, "", "Manufacturer"], [17, 2, 1, "", "Model"], [17, 5, 1, "", "finalize"], [17, 5, 1, "", "get_humid"], [17, 5, 1, "", "get_press"], [17, 5, 1, "", "get_temp"]], "neclib.devices.weather_station.weather_base": [[18, 1, 1, "", "Weather"]], "neclib.devices.weather_station.weather_base.Weather": [[18, 2, 1, "", "Manufacturer"], [18, 2, 1, "", "Model"], [18, 5, 1, "", "finalize"], [18, 5, 1, "", "get_humid"], [18, 5, 1, "", "get_press"], [18, 5, 1, "", "get_temp"]], "neclib.exceptions": [[19, 6, 1, "", "ConfigurationError"], [19, 6, 1, "", "NECSTAuthorityError"]], "neclib.interfaces": [[21, 0, 0, "-", "console_logger"]], "neclib.interfaces.console_logger": [[21, 1, 1, "", "ColorizeLevelNameFormatter"], [21, 1, 1, "", "ConsoleLogger"], [21, 3, 1, "", "get_logger"]], "neclib.interfaces.console_logger.ColorizeLevelNameFormatter": [[21, 2, 1, "", "ColorPrefix"], [21, 5, 1, "", "format"]], "neclib.interfaces.console_logger.ConsoleLogger": [[21, 2, 1, "", "OBSERVE_level"], [21, 5, 1, "", "obslog"]], "neclib.parameters": [[23, 0, 0, "-", "obsparam"], [24, 0, 0, "-", "parser"], [27, 0, 0, "-", "pointing_error"]], "neclib.parameters.obsparam": [[23, 1, 1, "", "ObsParams"], [23, 3, 1, "", "interval"], [23, 3, 1, "", "off_point_coord"]], "neclib.parameters.obsparam.ObsParams": [[23, 2, 1, "", "ParameterName"], [23, 2, 1, "", "ParameterUnit"], [23, 5, 1, "", "hot_observation_interval"], [23, 5, 1, "", "off_observation_interval"], [23, 5, 1, "", "off_point_coord"]], "neclib.parameters.parser": [[25, 0, 0, "-", "obsparam_data"], [26, 0, 0, "-", "pointing_error_data"]], "neclib.parameters.parser.obsparam_data": [[25, 1, 1, "", "ObsParamData"]], "neclib.parameters.parser.obsparam_data.ObsParamData": [[25, 5, 1, "", "from_file"]], "neclib.parameters.parser.pointing_error_data": [[26, 1, 1, "", "PointingErrorData"]], "neclib.parameters.parser.pointing_error_data.PointingErrorData": [[26, 5, 1, "", "from_file"], [26, 5, 1, "", "from_text_file"]], "neclib.parameters.pointing_error": [[27, 1, 1, "", "PointingError"]], "neclib.parameters.pointing_error.PointingError": [[27, 5, 1, "", "apparent2refracted"], [27, 5, 1, "", "refracted2apparent"]], "neclib.recorders": [[29, 0, 0, "-", "console_log_writer"], [30, 0, 0, "-", "file_writer"], [31, 0, 0, "-", "necstdb_writer"], [32, 0, 0, "-", "recorder"], [33, 0, 0, "-", "writer_base"]], "neclib.recorders.console_log_writer": [[29, 1, 1, "", "ConsoleLogWriter"]], "neclib.recorders.console_log_writer.ConsoleLogWriter": [[29, 5, 1, "", "append"], [29, 5, 1, "", "start_recording"], [29, 5, 1, "", "stop_recording"]], "neclib.recorders.file_writer": [[30, 1, 1, "", "FileWriter"]], "neclib.recorders.file_writer.FileWriter": [[30, 5, 1, "", "append"], [30, 5, 1, "", "start_recording"], [30, 5, 1, "", "stop_recording"]], "neclib.recorders.necstdb_writer": [[31, 1, 1, "", "NECSTDBWriter"], [31, 3, 1, "", "parse_str_size"], [31, 3, 1, "", "str_to_bytes"]], "neclib.recorders.necstdb_writer.NECSTDBWriter": [[31, 2, 1, "", "DTypeConverters"], [31, 2, 1, "", "LivelinessDuration"], [31, 2, 1, "", "WarningQueueSize"], [31, 5, 1, "", "add_table"], [31, 5, 1, "", "append"], [31, 5, 1, "", "remove_table"], [31, 5, 1, "", "start_recording"], [31, 5, 1, "", "stop_recording"]], "neclib.recorders.recorder": [[32, 1, 1, "", "Recorder"]], "neclib.recorders.recorder.Recorder": [[32, 5, 1, "", "add_writer"], [32, 5, 1, "", "append"], [32, 5, 1, "", "drop_writer"], [32, 5, 1, "", "start_recording"], [32, 5, 1, "", "stop_recording"], [32, 4, 1, "", "writers"]], "neclib.recorders.writer_base": [[33, 1, 1, "", "Writer"]], "neclib.recorders.writer_base.Writer": [[33, 5, 1, "", "append"], [33, 5, 1, "", "start_recording"], [33, 5, 1, "", "stop_recording"]], "neclib.safety": [[35, 0, 0, "-", "decelerate"], [36, 0, 0, "-", "status"]], "neclib.safety.decelerate": [[35, 1, 1, "", "Decelerate"]], "neclib.safety.status": [[36, 1, 1, "", "Status"]], "neclib.simulators": [[38, 0, 0, "-", "antenna"]], "neclib.simulators.antenna": [[38, 1, 1, "", "AntennaEncoderEmulator"]], "neclib.simulators.antenna.AntennaEncoderEmulator": [[38, 2, 1, "", "ANGLE_UNIT"], [38, 4, 1, "", "abs_acceleration"], [38, 5, 1, "", "command"], [38, 4, 1, "", "dt"], [38, 5, 1, "", "read"]], "neclib.typing": [[39, 7, 1, "", "AngleUnit"], [39, 7, 1, "", "PathLike"]], "neclib.units": [[40, 7, 1, "", "point"], [40, 7, 1, "", "scan"], [40, 3, 1, "", "scan_to_point_equivalency"]], "neclib.utils": [[42, 0, 0, "-", "data_utils"], [43, 0, 0, "-", "math_utils"], [44, 0, 0, "-", "quantity_utils"], [45, 0, 0, "-", "simulator_utils"]], "neclib.utils.data_utils": [[42, 1, 1, "", "AzElData"], [42, 1, 1, "", "ParameterList"], [42, 1, 1, "", "ParameterMapping"], [42, 1, 1, "", "ValueRange"], [42, 3, 1, "", "toCamelCase"]], "neclib.utils.data_utils.AzElData": [[42, 2, 1, "", "az"], [42, 2, 1, "", "el"]], "neclib.utils.data_utils.ParameterList": [[42, 5, 1, "", "copy"], [42, 5, 1, "", "map"], [42, 5, 1, "", "new"], [42, 5, 1, "", "push"]], "neclib.utils.data_utils.ParameterMapping": [[42, 5, 1, "", "copy"]], "neclib.utils.data_utils.ValueRange": [[42, 5, 1, "", "contain_all"], [42, 5, 1, "", "contain_any"], [42, 5, 1, "", "map"], [42, 4, 1, "", "width"]], "neclib.utils.math_utils": [[43, 1, 1, "", "ConditionChecker"], [43, 3, 1, "", "clip"], [43, 3, 1, "", "counter"], [43, 3, 1, "", "discretize"], [43, 3, 1, "", "frange"]], "neclib.utils.math_utils.ConditionChecker": [[43, 5, 1, "", "check"]], "neclib.utils.quantity_utils": [[44, 3, 1, "", "angle_conversion_factor"], [44, 3, 1, "", "dAz2dx"], [44, 3, 1, "", "dx2dAz"], [44, 3, 1, "", "force_data_type"], [44, 3, 1, "", "get_quantity"], [44, 3, 1, "", "parse_quantity"], [44, 3, 1, "", "partially_convert_unit"], [44, 3, 1, "", "quantity2builtin"]], "neclib.utils.simulator_utils": [[45, 3, 1, "", "skip_on_simulator"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:property", "5": "py:method", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"neclib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49], "alias": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 41, 42, 43], "subpackag": [0, 8, 22], "submodul": [0, 2, 4, 8, 9, 12, 16, 20, 22, 24, 28, 34, 37, 41], "configur": 1, "control": [2, 3], "antenna_pid": 3, "note": [3, 25, 26, 30, 33, 37, 38, 40, 43, 44], "coordin": [4, 5, 6, 7], "convert": 5, "optim": 6, "path_find": 7, "devic": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 49], "encod": [9, 10, 11], "encoder_bas": 10, "nd287": 11, "motor": [12, 13, 14], "cpz7415v": 13, "pulse_controller_bas": 14, "selector": 15, "weather_st": [16, 17, 18], "tr73u": 17, "weather_bas": 18, "except": 19, "interfac": [20, 21], "console_logg": 21, "paramet": [22, 23, 24, 25, 26, 27, 47, 48], "obsparam": 23, "parser": [24, 25, 26, 48], "obsparam_data": 25, "pointing_error_data": 26, "pointing_error": 27, "record": [28, 29, 30, 31, 32, 33], "console_log_writ": 29, "file_writ": 30, "necstdb_writ": 31, "writer_bas": 33, "safeti": [34, 35, 36], "deceler": 35, "statu": 36, "simul": [37, 38], "antenna": 38, "type": 39, "unit": 40, "util": [41, 42, 43, 44, 45], "data_util": 42, "math_util": 43, "quantity_util": 44, "simulator_util": 45, "featur": 46, "instal": 46, "usag": 46, "necst": 47, "config": 48, "The": 48, "file": 48, "locat": 48, "how": [48, 49], "defin": 48, "attach": 48, "us": 48, "specifi": 49, "name": 49, "model": 49, "add": 49, "i": 49, "o": 49, "class": 49, "definit": 49, "abstract": 49, "specif": 49, "implement": 49, "tutori": 50, "develop": 50}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"neclib": [[0, "module-neclib"], [46, "neclib"]], "Aliases": [[0, "aliases"], [1, "aliases"], [2, "aliases"], [3, "aliases"], [4, "aliases"], [5, "aliases"], [6, "aliases"], [7, "aliases"], [8, "aliases"], [9, "aliases"], [11, "aliases"], [12, "aliases"], [13, "aliases"], [15, "aliases"], [16, "aliases"], [17, "aliases"], [20, "aliases"], [22, "aliases"], [23, "aliases"], [24, "aliases"], [25, "aliases"], [26, "aliases"], [27, "aliases"], [28, "aliases"], [29, "aliases"], [30, "aliases"], [31, "aliases"], [32, "aliases"], [34, "aliases"], [37, "aliases"], [38, "aliases"], [41, "aliases"], [42, "aliases"], [43, "aliases"]], "Subpackages": [[0, "subpackages"], [8, "subpackages"], [22, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"], [8, "submodules"], [9, "submodules"], [12, "submodules"], [16, "submodules"], [20, "submodules"], [22, "submodules"], [24, "submodules"], [28, "submodules"], [34, "submodules"], [37, "submodules"], [41, "submodules"]], "neclib.configuration": [[1, "module-neclib.configuration"]], "neclib.controllers": [[2, "module-neclib.controllers"]], "neclib.controllers.antenna_pid": [[3, "module-neclib.controllers.antenna_pid"]], "Notes": [[3, null], [25, null], [26, null], [30, null], [33, null], [37, null], [38, null], [38, null], [40, null], [43, null], [44, null], [44, null], [44, null]], "neclib.coordinates": [[4, "module-neclib.coordinates"]], "neclib.coordinates.convert": [[5, "module-neclib.coordinates.convert"]], "neclib.coordinates.optimize": [[6, "module-neclib.coordinates.optimize"]], "neclib.coordinates.path_finder": [[7, "module-neclib.coordinates.path_finder"]], "neclib.devices": [[8, "module-neclib.devices"], [49, "neclib-devices"]], "neclib.devices.encoder": [[9, "module-neclib.devices.encoder"]], "neclib.devices.encoder.encoder_base": [[10, "module-neclib.devices.encoder.encoder_base"]], "neclib.devices.encoder.nd287": [[11, "module-neclib.devices.encoder.nd287"]], "neclib.devices.motor": [[12, "module-neclib.devices.motor"]], "neclib.devices.motor.cpz7415v": [[13, "module-neclib.devices.motor.cpz7415v"]], "neclib.devices.motor.pulse_controller_base": [[14, "module-neclib.devices.motor.pulse_controller_base"]], "neclib.devices.selector": [[15, "module-neclib.devices.selector"]], "neclib.devices.weather_station": [[16, "module-neclib.devices.weather_station"]], "neclib.devices.weather_station.tr73u": [[17, "module-neclib.devices.weather_station.tr73u"]], "neclib.devices.weather_station.weather_base": [[18, "module-neclib.devices.weather_station.weather_base"]], "neclib.exceptions": [[19, "module-neclib.exceptions"]], "neclib.interfaces": [[20, "module-neclib.interfaces"]], "neclib.interfaces.console_logger": [[21, "module-neclib.interfaces.console_logger"]], "neclib.parameters": [[22, "module-neclib.parameters"]], "neclib.parameters.obsparam": [[23, "module-neclib.parameters.obsparam"]], "neclib.parameters.parser": [[24, "module-neclib.parameters.parser"]], "neclib.parameters.parser.obsparam_data": [[25, "module-neclib.parameters.parser.obsparam_data"]], "neclib.parameters.parser.pointing_error_data": [[26, "module-neclib.parameters.parser.pointing_error_data"]], "neclib.parameters.pointing_error": [[27, "module-neclib.parameters.pointing_error"]], "neclib.recorders": [[28, "module-neclib.recorders"]], "neclib.recorders.console_log_writer": [[29, "module-neclib.recorders.console_log_writer"]], "neclib.recorders.file_writer": [[30, "module-neclib.recorders.file_writer"]], "neclib.recorders.necstdb_writer": [[31, "module-neclib.recorders.necstdb_writer"]], "neclib.recorders.recorder": [[32, "module-neclib.recorders.recorder"]], "neclib.recorders.writer_base": [[33, "module-neclib.recorders.writer_base"]], "neclib.safety": [[34, "module-neclib.safety"]], "neclib.safety.decelerate": [[35, "module-neclib.safety.decelerate"]], "neclib.safety.status": [[36, "module-neclib.safety.status"]], "neclib.simulators": [[37, "module-neclib.simulators"]], "neclib.simulators.antenna": [[38, "module-neclib.simulators.antenna"]], "neclib.typing": [[39, "module-neclib.typing"]], "neclib.units": [[40, "module-neclib.units"]], "neclib.utils": [[41, "module-neclib.utils"]], "neclib.utils.data_utils": [[42, "module-neclib.utils.data_utils"]], "neclib.utils.math_utils": [[43, "module-neclib.utils.math_utils"]], "neclib.utils.quantity_utils": [[44, "module-neclib.utils.quantity_utils"]], "neclib.utils.simulator_utils": [[45, "module-neclib.utils.simulator_utils"]], "Features": [[46, "features"]], "Installation": [[46, "installation"]], "Usage": [[46, "usage"]], "NECST Parameters": [[47, "necst-parameters"]], "neclib.config": [[48, "neclib-config"]], "The config file": [[48, "the-config-file"]], "Location of the file": [[48, "location-of-the-file"]], "How to define parameters": [[48, "how-to-define-parameters"]], "Attach parsers": [[48, "attach-parsers"]], "How to use the parameters": [[48, "how-to-use-the-parameters"]], "How to specify the devices": [[49, "how-to-specify-the-devices"]], "Device name": [[49, "device-name"]], "Device model": [[49, "device-model"]], "How to add device I/O class": [[49, "how-to-add-device-i-o-class"]], "Definition of abstract device": [[49, "definition-of-abstract-device"]], "Device-specific implementation": [[49, "device-specific-implementation"]], "Tutorials for developers": [[50, "tutorials-for-developers"]]}, "indexentries": {"envvarname (class in neclib)": [[0, "neclib.EnvVarName"]], "domain_id (envvarname attribute)": [[0, "neclib.EnvVarName.domain_id"]], "module": [[0, "module-neclib"], [1, "module-neclib.configuration"], [2, "module-neclib.controllers"], [3, "module-neclib.controllers.antenna_pid"], [4, "module-neclib.coordinates"], [5, "module-neclib.coordinates.convert"], [6, "module-neclib.coordinates.optimize"], [7, "module-neclib.coordinates.path_finder"], [8, "module-neclib.devices"], [9, "module-neclib.devices.encoder"], [10, "module-neclib.devices.encoder.encoder_base"], [11, "module-neclib.devices.encoder.nd287"], [12, "module-neclib.devices.motor"], [13, "module-neclib.devices.motor.cpz7415v"], [14, "module-neclib.devices.motor.pulse_controller_base"], [15, "module-neclib.devices.selector"], [16, "module-neclib.devices.weather_station"], [17, "module-neclib.devices.weather_station.tr73u"], [18, "module-neclib.devices.weather_station.weather_base"], [19, "module-neclib.exceptions"], [20, "module-neclib.interfaces"], [21, "module-neclib.interfaces.console_logger"], [22, "module-neclib.parameters"], [23, "module-neclib.parameters.obsparam"], [24, "module-neclib.parameters.parser"], [25, "module-neclib.parameters.parser.obsparam_data"], [26, "module-neclib.parameters.parser.pointing_error_data"], [27, "module-neclib.parameters.pointing_error"], [28, "module-neclib.recorders"], [29, "module-neclib.recorders.console_log_writer"], [30, "module-neclib.recorders.file_writer"], [31, "module-neclib.recorders.necstdb_writer"], [32, "module-neclib.recorders.recorder"], [33, "module-neclib.recorders.writer_base"], [34, "module-neclib.safety"], [35, "module-neclib.safety.decelerate"], [36, "module-neclib.safety.status"], [37, "module-neclib.simulators"], [38, "module-neclib.simulators.antenna"], [39, "module-neclib.typing"], [40, "module-neclib.units"], [41, "module-neclib.utils"], [42, "module-neclib.utils.data_utils"], [43, "module-neclib.utils.math_utils"], [44, "module-neclib.utils.quantity_utils"], [45, "module-neclib.utils.simulator_utils"]], "neclib": [[0, "module-neclib"]], "necst_root (envvarname attribute)": [[0, "neclib.EnvVarName.necst_root"]], "record_root (envvarname attribute)": [[0, "neclib.EnvVarName.record_root"]], "ros2_ws (envvarname attribute)": [[0, "neclib.EnvVarName.ros2_ws"]], "configure() (in module neclib.configuration)": [[1, "neclib.configuration.configure"]], "neclib.configuration": [[1, "module-neclib.configuration"]], "neclib.controllers": [[2, "module-neclib.controllers"]], "angle_unit (pidcontroller attribute)": [[3, "neclib.controllers.antenna_pid.PIDController.ANGLE_UNIT"]], "pidcontroller (class in neclib.controllers.antenna_pid)": [[3, "neclib.controllers.antenna_pid.PIDController"]], "dt (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.dt"]], "error_derivative (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.error_derivative"]], "error_integral (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.error_integral"]], "get_speed() (pidcontroller method)": [[3, "neclib.controllers.antenna_pid.PIDController.get_speed"]], "neclib.controllers.antenna_pid": [[3, "module-neclib.controllers.antenna_pid"]], "params() (pidcontroller method)": [[3, "neclib.controllers.antenna_pid.PIDController.params"]], "neclib.coordinates": [[4, "module-neclib.coordinates"]], "coordcalculator (class in neclib.coordinates.convert)": [[5, "neclib.coordinates.convert.CoordCalculator"]], "get_altaz() (coordcalculator method)": [[5, "neclib.coordinates.convert.CoordCalculator.get_altaz"]], "get_altaz_by_name() (coordcalculator method)": [[5, "neclib.coordinates.convert.CoordCalculator.get_altaz_by_name"]], "neclib.coordinates.convert": [[5, "module-neclib.coordinates.convert"]], "drivelimitchecker (class in neclib.coordinates.optimize)": [[6, "neclib.coordinates.optimize.DriveLimitChecker"]], "neclib.coordinates.optimize": [[6, "module-neclib.coordinates.optimize"]], "optimize() (drivelimitchecker method)": [[6, "neclib.coordinates.optimize.DriveLimitChecker.optimize"]], "pathfinder (class in neclib.coordinates.path_finder)": [[7, "neclib.coordinates.path_finder.PathFinder"]], "linear() (pathfinder method)": [[7, "neclib.coordinates.path_finder.PathFinder.linear"]], "neclib.coordinates.path_finder": [[7, "module-neclib.coordinates.path_finder"]], "neclib.devices": [[8, "module-neclib.devices"]], "neclib.devices.encoder": [[9, "module-neclib.devices.encoder"]], "encoder (class in neclib.devices.encoder.encoder_base)": [[10, "neclib.devices.encoder.encoder_base.Encoder"]], "manufacturer (encoder attribute)": [[10, "neclib.devices.encoder.encoder_base.Encoder.Manufacturer"]], "model (encoder attribute)": [[10, "neclib.devices.encoder.encoder_base.Encoder.Model"]], "finalize() (encoder method)": [[10, "neclib.devices.encoder.encoder_base.Encoder.finalize"]], "get_reading() (encoder method)": [[10, "neclib.devices.encoder.encoder_base.Encoder.get_reading"]], "neclib.devices.encoder.encoder_base": [[10, "module-neclib.devices.encoder.encoder_base"]], "manufacturer (nd287 attribute)": [[11, "neclib.devices.encoder.nd287.ND287.Manufacturer"]], "model (nd287 attribute)": [[11, "neclib.devices.encoder.nd287.ND287.Model"]], "nd287 (class in neclib.devices.encoder.nd287)": [[11, "neclib.devices.encoder.nd287.ND287"]], "finalize() (nd287 method)": [[11, "neclib.devices.encoder.nd287.ND287.finalize"]], "get_reading() (nd287 method)": [[11, "neclib.devices.encoder.nd287.ND287.get_reading"]], "neclib.devices.encoder.nd287": [[11, "module-neclib.devices.encoder.nd287"]], "neclib.devices.motor": [[12, "module-neclib.devices.motor"]], "cpz7415v (class in neclib.devices.motor.cpz7415v)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V"]], "commandqueuemaxsize (cpz7415v attribute)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.CommandQueueMaxSize"]], "manufacturer (cpz7415v attribute)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.Manufacturer"]], "model (cpz7415v attribute)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.Model"]], "finalize() (cpz7415v method)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.finalize"]], "get_speed() (cpz7415v method)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.get_speed"]], "get_step() (cpz7415v method)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.get_step"]], "neclib.devices.motor.cpz7415v": [[13, "module-neclib.devices.motor.cpz7415v"]], "set_do_status() (cpz7415v method)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.set_do_status"]], "set_speed() (cpz7415v method)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.set_speed"]], "set_step() (cpz7415v method)": [[13, "neclib.devices.motor.cpz7415v.CPZ7415V.set_step"]], "manufacturer (pulsecontroller attribute)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.Manufacturer"]], "model (pulsecontroller attribute)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.Model"]], "pulsecontroller (class in neclib.devices.motor.pulse_controller_base)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController"]], "finalize() (pulsecontroller method)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.finalize"]], "get_speed() (pulsecontroller method)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.get_speed"]], "get_step() (pulsecontroller method)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.get_step"]], "neclib.devices.motor.pulse_controller_base": [[14, "module-neclib.devices.motor.pulse_controller_base"]], "set_speed() (pulsecontroller method)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.set_speed"]], "set_step() (pulsecontroller method)": [[14, "neclib.devices.motor.pulse_controller_base.PulseController.set_step"]], "list_implementations() (in module neclib.devices.selector)": [[15, "neclib.devices.selector.list_implementations"]], "neclib.devices.selector": [[15, "module-neclib.devices.selector"]], "parse_device_configuration() (in module neclib.devices.selector)": [[15, "neclib.devices.selector.parse_device_configuration"]], "neclib.devices.weather_station": [[16, "module-neclib.devices.weather_station"]], "manufacturer (tr73u attribute)": [[17, "neclib.devices.weather_station.tr73u.TR73U.Manufacturer"]], "model (tr73u attribute)": [[17, "neclib.devices.weather_station.tr73u.TR73U.Model"]], "tr73u (class in neclib.devices.weather_station.tr73u)": [[17, "neclib.devices.weather_station.tr73u.TR73U"]], "finalize() (tr73u method)": [[17, "neclib.devices.weather_station.tr73u.TR73U.finalize"]], "get_humid() (tr73u method)": [[17, "neclib.devices.weather_station.tr73u.TR73U.get_humid"]], "get_press() (tr73u method)": [[17, "neclib.devices.weather_station.tr73u.TR73U.get_press"]], "get_temp() (tr73u method)": [[17, "neclib.devices.weather_station.tr73u.TR73U.get_temp"]], "neclib.devices.weather_station.tr73u": [[17, "module-neclib.devices.weather_station.tr73u"]], "manufacturer (weather attribute)": [[18, "neclib.devices.weather_station.weather_base.Weather.Manufacturer"]], "model (weather attribute)": [[18, "neclib.devices.weather_station.weather_base.Weather.Model"]], "weather (class in neclib.devices.weather_station.weather_base)": [[18, "neclib.devices.weather_station.weather_base.Weather"]], "finalize() (weather method)": [[18, "neclib.devices.weather_station.weather_base.Weather.finalize"]], "get_humid() (weather method)": [[18, "neclib.devices.weather_station.weather_base.Weather.get_humid"]], "get_press() (weather method)": [[18, "neclib.devices.weather_station.weather_base.Weather.get_press"]], "get_temp() (weather method)": [[18, "neclib.devices.weather_station.weather_base.Weather.get_temp"]], "neclib.devices.weather_station.weather_base": [[18, "module-neclib.devices.weather_station.weather_base"]], "configurationerror": [[19, "neclib.exceptions.ConfigurationError"]], "necstauthorityerror": [[19, "neclib.exceptions.NECSTAuthorityError"]], "neclib.exceptions": [[19, "module-neclib.exceptions"]], "neclib.interfaces": [[20, "module-neclib.interfaces"]], "colorprefix (colorizelevelnameformatter attribute)": [[21, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter.ColorPrefix"]], "colorizelevelnameformatter (class in neclib.interfaces.console_logger)": [[21, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter"]], "consolelogger (class in neclib.interfaces.console_logger)": [[21, "neclib.interfaces.console_logger.ConsoleLogger"]], "observe_level (consolelogger attribute)": [[21, "neclib.interfaces.console_logger.ConsoleLogger.OBSERVE_level"]], "format() (colorizelevelnameformatter method)": [[21, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter.format"]], "get_logger() (in module neclib.interfaces.console_logger)": [[21, "neclib.interfaces.console_logger.get_logger"]], "neclib.interfaces.console_logger": [[21, "module-neclib.interfaces.console_logger"]], "obslog() (consolelogger method)": [[21, "neclib.interfaces.console_logger.ConsoleLogger.obslog"]], "neclib.parameters": [[22, "module-neclib.parameters"]], "obsparams (class in neclib.parameters.obsparam)": [[23, "neclib.parameters.obsparam.ObsParams"]], "parametername (obsparams attribute)": [[23, "neclib.parameters.obsparam.ObsParams.ParameterName"]], "parameterunit (obsparams attribute)": [[23, "neclib.parameters.obsparam.ObsParams.ParameterUnit"]], "hot_observation_interval() (obsparams method)": [[23, "neclib.parameters.obsparam.ObsParams.hot_observation_interval"]], "interval() (in module neclib.parameters.obsparam)": [[23, "neclib.parameters.obsparam.interval"]], "neclib.parameters.obsparam": [[23, "module-neclib.parameters.obsparam"]], "off_observation_interval() (obsparams method)": [[23, "neclib.parameters.obsparam.ObsParams.off_observation_interval"]], "off_point_coord() (obsparams method)": [[23, "neclib.parameters.obsparam.ObsParams.off_point_coord"]], "off_point_coord() (in module neclib.parameters.obsparam)": [[23, "neclib.parameters.obsparam.off_point_coord"]], "neclib.parameters.parser": [[24, "module-neclib.parameters.parser"]], "obsparamdata (class in neclib.parameters.parser.obsparam_data)": [[25, "neclib.parameters.parser.obsparam_data.ObsParamData"]], "from_file() (obsparamdata class method)": [[25, "neclib.parameters.parser.obsparam_data.ObsParamData.from_file"]], "neclib.parameters.parser.obsparam_data": [[25, "module-neclib.parameters.parser.obsparam_data"]], "pointingerrordata (class in neclib.parameters.parser.pointing_error_data)": [[26, "neclib.parameters.parser.pointing_error_data.PointingErrorData"]], "from_file() (pointingerrordata class method)": [[26, "neclib.parameters.parser.pointing_error_data.PointingErrorData.from_file"]], "from_text_file() (pointingerrordata class method)": [[26, "neclib.parameters.parser.pointing_error_data.PointingErrorData.from_text_file"]], "neclib.parameters.parser.pointing_error_data": [[26, "module-neclib.parameters.parser.pointing_error_data"]], "pointingerror (class in neclib.parameters.pointing_error)": [[27, "neclib.parameters.pointing_error.PointingError"]], "apparent2refracted() (pointingerror method)": [[27, "neclib.parameters.pointing_error.PointingError.apparent2refracted"]], "neclib.parameters.pointing_error": [[27, "module-neclib.parameters.pointing_error"]], "refracted2apparent() (pointingerror method)": [[27, "neclib.parameters.pointing_error.PointingError.refracted2apparent"]], "neclib.recorders": [[28, "module-neclib.recorders"]], "consolelogwriter (class in neclib.recorders.console_log_writer)": [[29, "neclib.recorders.console_log_writer.ConsoleLogWriter"]], "append() (consolelogwriter method)": [[29, "neclib.recorders.console_log_writer.ConsoleLogWriter.append"]], "neclib.recorders.console_log_writer": [[29, "module-neclib.recorders.console_log_writer"]], "start_recording() (consolelogwriter method)": [[29, "neclib.recorders.console_log_writer.ConsoleLogWriter.start_recording"]], "stop_recording() (consolelogwriter method)": [[29, "neclib.recorders.console_log_writer.ConsoleLogWriter.stop_recording"]], "filewriter (class in neclib.recorders.file_writer)": [[30, "neclib.recorders.file_writer.FileWriter"]], "append() (filewriter method)": [[30, "neclib.recorders.file_writer.FileWriter.append"]], "neclib.recorders.file_writer": [[30, "module-neclib.recorders.file_writer"]], "start_recording() (filewriter method)": [[30, "neclib.recorders.file_writer.FileWriter.start_recording"]], "stop_recording() (filewriter method)": [[30, "neclib.recorders.file_writer.FileWriter.stop_recording"]], "dtypeconverters (necstdbwriter attribute)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.DTypeConverters"]], "livelinessduration (necstdbwriter attribute)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.LivelinessDuration"]], "necstdbwriter (class in neclib.recorders.necstdb_writer)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter"]], "warningqueuesize (necstdbwriter attribute)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.WarningQueueSize"]], "add_table() (necstdbwriter method)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.add_table"]], "append() (necstdbwriter method)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.append"]], "neclib.recorders.necstdb_writer": [[31, "module-neclib.recorders.necstdb_writer"]], "parse_str_size() (in module neclib.recorders.necstdb_writer)": [[31, "neclib.recorders.necstdb_writer.parse_str_size"]], "remove_table() (necstdbwriter method)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.remove_table"]], "start_recording() (necstdbwriter method)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.start_recording"]], "stop_recording() (necstdbwriter method)": [[31, "neclib.recorders.necstdb_writer.NECSTDBWriter.stop_recording"]], "str_to_bytes() (in module neclib.recorders.necstdb_writer)": [[31, "neclib.recorders.necstdb_writer.str_to_bytes"]], "recorder (class in neclib.recorders.recorder)": [[32, "neclib.recorders.recorder.Recorder"]], "add_writer() (recorder method)": [[32, "neclib.recorders.recorder.Recorder.add_writer"]], "append() (recorder method)": [[32, "neclib.recorders.recorder.Recorder.append"]], "drop_writer() (recorder method)": [[32, "neclib.recorders.recorder.Recorder.drop_writer"]], "neclib.recorders.recorder": [[32, "module-neclib.recorders.recorder"]], "start_recording() (recorder method)": [[32, "neclib.recorders.recorder.Recorder.start_recording"]], "stop_recording() (recorder method)": [[32, "neclib.recorders.recorder.Recorder.stop_recording"]], "writers (recorder property)": [[32, "neclib.recorders.recorder.Recorder.writers"]], "writer (class in neclib.recorders.writer_base)": [[33, "neclib.recorders.writer_base.Writer"]], "append() (writer method)": [[33, "neclib.recorders.writer_base.Writer.append"]], "neclib.recorders.writer_base": [[33, "module-neclib.recorders.writer_base"]], "start_recording() (writer method)": [[33, "neclib.recorders.writer_base.Writer.start_recording"]], "stop_recording() (writer method)": [[33, "neclib.recorders.writer_base.Writer.stop_recording"]], "neclib.safety": [[34, "module-neclib.safety"]], "decelerate (class in neclib.safety.decelerate)": [[35, "neclib.safety.decelerate.Decelerate"]], "neclib.safety.decelerate": [[35, "module-neclib.safety.decelerate"]], "status (class in neclib.safety.status)": [[36, "neclib.safety.status.Status"]], "neclib.safety.status": [[36, "module-neclib.safety.status"]], "neclib.simulators": [[37, "module-neclib.simulators"]], "angle_unit (antennaencoderemulator attribute)": [[38, "neclib.simulators.antenna.AntennaEncoderEmulator.ANGLE_UNIT"]], "antennaencoderemulator (class in neclib.simulators.antenna)": [[38, "neclib.simulators.antenna.AntennaEncoderEmulator"]], "abs_acceleration (antennaencoderemulator property)": [[38, "neclib.simulators.antenna.AntennaEncoderEmulator.abs_acceleration"]], "command() (antennaencoderemulator method)": [[38, "neclib.simulators.antenna.AntennaEncoderEmulator.command"]], "dt (antennaencoderemulator property)": [[38, "neclib.simulators.antenna.AntennaEncoderEmulator.dt"]], "neclib.simulators.antenna": [[38, "module-neclib.simulators.antenna"]], "read() (antennaencoderemulator method)": [[38, "neclib.simulators.antenna.AntennaEncoderEmulator.read"]], "angleunit (in module neclib.typing)": [[39, "neclib.typing.AngleUnit"]], "pathlike (in module neclib.typing)": [[39, "neclib.typing.PathLike"]], "neclib.typing": [[39, "module-neclib.typing"]], "neclib.units": [[40, "module-neclib.units"]], "point (in module neclib.units)": [[40, "neclib.units.point"]], "scan (in module neclib.units)": [[40, "neclib.units.scan"]], "scan_to_point_equivalency() (in module neclib.units)": [[40, "neclib.units.scan_to_point_equivalency"]], "neclib.utils": [[41, "module-neclib.utils"]], "azeldata (class in neclib.utils.data_utils)": [[42, "neclib.utils.data_utils.AzElData"]], "parameterlist (class in neclib.utils.data_utils)": [[42, "neclib.utils.data_utils.ParameterList"]], "parametermapping (class in neclib.utils.data_utils)": [[42, "neclib.utils.data_utils.ParameterMapping"]], "valuerange (class in neclib.utils.data_utils)": [[42, "neclib.utils.data_utils.ValueRange"]], "az (azeldata attribute)": [[42, "neclib.utils.data_utils.AzElData.az"]], "contain_all() (valuerange method)": [[42, "neclib.utils.data_utils.ValueRange.contain_all"]], "contain_any() (valuerange method)": [[42, "neclib.utils.data_utils.ValueRange.contain_any"]], "copy() (parameterlist method)": [[42, "neclib.utils.data_utils.ParameterList.copy"]], "copy() (parametermapping method)": [[42, "neclib.utils.data_utils.ParameterMapping.copy"]], "el (azeldata attribute)": [[42, "neclib.utils.data_utils.AzElData.el"]], "map() (parameterlist method)": [[42, "neclib.utils.data_utils.ParameterList.map"]], "map() (valuerange method)": [[42, "neclib.utils.data_utils.ValueRange.map"]], "neclib.utils.data_utils": [[42, "module-neclib.utils.data_utils"]], "new() (parameterlist class method)": [[42, "neclib.utils.data_utils.ParameterList.new"]], "push() (parameterlist method)": [[42, "neclib.utils.data_utils.ParameterList.push"]], "tocamelcase() (in module neclib.utils.data_utils)": [[42, "neclib.utils.data_utils.toCamelCase"]], "width (valuerange property)": [[42, "neclib.utils.data_utils.ValueRange.width"]], "conditionchecker (class in neclib.utils.math_utils)": [[43, "neclib.utils.math_utils.ConditionChecker"]], "check() (conditionchecker method)": [[43, "neclib.utils.math_utils.ConditionChecker.check"]], "clip() (in module neclib.utils.math_utils)": [[43, "neclib.utils.math_utils.clip"]], "counter() (in module neclib.utils.math_utils)": [[43, "neclib.utils.math_utils.counter"]], "discretize() (in module neclib.utils.math_utils)": [[43, "neclib.utils.math_utils.discretize"]], "frange() (in module neclib.utils.math_utils)": [[43, "neclib.utils.math_utils.frange"]], "neclib.utils.math_utils": [[43, "module-neclib.utils.math_utils"]], "angle_conversion_factor() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.angle_conversion_factor"]], "daz2dx() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.dAz2dx"]], "dx2daz() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.dx2dAz"]], "force_data_type() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.force_data_type"]], "get_quantity() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.get_quantity"]], "neclib.utils.quantity_utils": [[44, "module-neclib.utils.quantity_utils"]], "parse_quantity() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.parse_quantity"]], "partially_convert_unit() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.partially_convert_unit"]], "quantity2builtin() (in module neclib.utils.quantity_utils)": [[44, "neclib.utils.quantity_utils.quantity2builtin"]], "neclib.utils.simulator_utils": [[45, "module-neclib.utils.simulator_utils"]], "skip_on_simulator() (in module neclib.utils.simulator_utils)": [[45, "neclib.utils.simulator_utils.skip_on_simulator"]]}})