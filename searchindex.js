Search.setIndex({"docnames": ["_source/neclib", "_source/neclib.configuration", "_source/neclib.controllers", "_source/neclib.controllers.antenna_pid", "_source/neclib.coordinates", "_source/neclib.coordinates.convert", "_source/neclib.coordinates.frame", "_source/neclib.coordinates.optimize", "_source/neclib.coordinates.path_finder", "_source/neclib.data", "_source/neclib.data.resize", "_source/neclib.devices", "_source/neclib.devices.attenuator", "_source/neclib.devices.attenuator.attenuator_base", "_source/neclib.devices.attenuator.rhio10", "_source/neclib.devices.bias_reader", "_source/neclib.devices.bias_reader.bias_reader_base", "_source/neclib.devices.bias_reader.cpz3177", "_source/neclib.devices.bias_setter", "_source/neclib.devices.bias_setter.bias_setter_base", "_source/neclib.devices.bias_setter.cpz340816", "_source/neclib.devices.device_base", "_source/neclib.devices.encoder", "_source/neclib.devices.encoder.encoder_base", "_source/neclib.devices.encoder.nd287", "_source/neclib.devices.motor", "_source/neclib.devices.motor.cpz7415v", "_source/neclib.devices.motor.motor_base", "_source/neclib.devices.power_meter", "_source/neclib.devices.power_meter.ma24126a", "_source/neclib.devices.power_meter.power_meter_base", "_source/neclib.devices.selector", "_source/neclib.devices.signal_generator", "_source/neclib.devices.signal_generator.fsw0010", "_source/neclib.devices.signal_generator.fsw0020", "_source/neclib.devices.signal_generator.signal_generator_base", "_source/neclib.devices.spectrometer", "_source/neclib.devices.spectrometer.spectrometer_base", "_source/neclib.devices.spectrometer.xffts", "_source/neclib.devices.thermometer", "_source/neclib.devices.thermometer.model_218", "_source/neclib.devices.thermometer.thermometer_base", "_source/neclib.devices.vacuum_gauge", "_source/neclib.devices.vacuum_gauge.tpg261", "_source/neclib.devices.vacuum_gauge.vacuum_gauge_base", "_source/neclib.devices.weather_station", "_source/neclib.devices.weather_station.tr73u", "_source/neclib.devices.weather_station.weather_station_base", "_source/neclib.exceptions", "_source/neclib.interfaces", "_source/neclib.interfaces.console_logger", "_source/neclib.parameters", "_source/neclib.parameters.obsparam", "_source/neclib.parameters.parser", "_source/neclib.parameters.parser.obsparam_data", "_source/neclib.parameters.parser.pointing_error_data", "_source/neclib.parameters.pointing_error", "_source/neclib.recorders", "_source/neclib.recorders.console_log_writer", "_source/neclib.recorders.file_writer", "_source/neclib.recorders.necstdb_writer", "_source/neclib.recorders.recorder", "_source/neclib.recorders.writer_base", "_source/neclib.safety", "_source/neclib.safety.decelerate", "_source/neclib.safety.status", "_source/neclib.simulators", "_source/neclib.simulators.antenna", "_source/neclib.typing", "_source/neclib.units", "_source/neclib.utils", "_source/neclib.utils.array_utils", "_source/neclib.utils.data_utils", "_source/neclib.utils.device_utils", "_source/neclib.utils.math_utils", "_source/neclib.utils.quantity_utils", "_source/neclib.utils.simulator_utils", "index", "parameters/index", "tutorials/config", "tutorials/devices", "tutorials/index"], "filenames": ["_source/neclib.rst", "_source/neclib.configuration.rst", "_source/neclib.controllers.rst", "_source/neclib.controllers.antenna_pid.rst", "_source/neclib.coordinates.rst", "_source/neclib.coordinates.convert.rst", "_source/neclib.coordinates.frame.rst", "_source/neclib.coordinates.optimize.rst", "_source/neclib.coordinates.path_finder.rst", "_source/neclib.data.rst", "_source/neclib.data.resize.rst", "_source/neclib.devices.rst", "_source/neclib.devices.attenuator.rst", "_source/neclib.devices.attenuator.attenuator_base.rst", "_source/neclib.devices.attenuator.rhio10.rst", "_source/neclib.devices.bias_reader.rst", "_source/neclib.devices.bias_reader.bias_reader_base.rst", "_source/neclib.devices.bias_reader.cpz3177.rst", "_source/neclib.devices.bias_setter.rst", "_source/neclib.devices.bias_setter.bias_setter_base.rst", "_source/neclib.devices.bias_setter.cpz340816.rst", "_source/neclib.devices.device_base.rst", "_source/neclib.devices.encoder.rst", "_source/neclib.devices.encoder.encoder_base.rst", "_source/neclib.devices.encoder.nd287.rst", "_source/neclib.devices.motor.rst", "_source/neclib.devices.motor.cpz7415v.rst", "_source/neclib.devices.motor.motor_base.rst", "_source/neclib.devices.power_meter.rst", "_source/neclib.devices.power_meter.ma24126a.rst", "_source/neclib.devices.power_meter.power_meter_base.rst", "_source/neclib.devices.selector.rst", "_source/neclib.devices.signal_generator.rst", "_source/neclib.devices.signal_generator.fsw0010.rst", "_source/neclib.devices.signal_generator.fsw0020.rst", "_source/neclib.devices.signal_generator.signal_generator_base.rst", "_source/neclib.devices.spectrometer.rst", "_source/neclib.devices.spectrometer.spectrometer_base.rst", "_source/neclib.devices.spectrometer.xffts.rst", "_source/neclib.devices.thermometer.rst", "_source/neclib.devices.thermometer.model_218.rst", "_source/neclib.devices.thermometer.thermometer_base.rst", "_source/neclib.devices.vacuum_gauge.rst", "_source/neclib.devices.vacuum_gauge.tpg261.rst", "_source/neclib.devices.vacuum_gauge.vacuum_gauge_base.rst", "_source/neclib.devices.weather_station.rst", "_source/neclib.devices.weather_station.tr73u.rst", "_source/neclib.devices.weather_station.weather_station_base.rst", "_source/neclib.exceptions.rst", "_source/neclib.interfaces.rst", "_source/neclib.interfaces.console_logger.rst", "_source/neclib.parameters.rst", "_source/neclib.parameters.obsparam.rst", "_source/neclib.parameters.parser.rst", "_source/neclib.parameters.parser.obsparam_data.rst", "_source/neclib.parameters.parser.pointing_error_data.rst", "_source/neclib.parameters.pointing_error.rst", "_source/neclib.recorders.rst", "_source/neclib.recorders.console_log_writer.rst", "_source/neclib.recorders.file_writer.rst", "_source/neclib.recorders.necstdb_writer.rst", "_source/neclib.recorders.recorder.rst", "_source/neclib.recorders.writer_base.rst", "_source/neclib.safety.rst", "_source/neclib.safety.decelerate.rst", "_source/neclib.safety.status.rst", "_source/neclib.simulators.rst", "_source/neclib.simulators.antenna.rst", "_source/neclib.typing.rst", "_source/neclib.units.rst", "_source/neclib.utils.rst", "_source/neclib.utils.array_utils.rst", "_source/neclib.utils.data_utils.rst", "_source/neclib.utils.device_utils.rst", "_source/neclib.utils.math_utils.rst", "_source/neclib.utils.quantity_utils.rst", "_source/neclib.utils.simulator_utils.rst", "index.md", "parameters/index.md", "tutorials/config.md", "tutorials/devices.md", "tutorials/index.md"], "titles": ["neclib", "neclib.configuration", "neclib.controllers", "neclib.controllers.antenna_pid", "neclib.coordinates", "neclib.coordinates.convert", "neclib.coordinates.frame", "neclib.coordinates.optimize", "neclib.coordinates.path_finder", "neclib.data", "neclib.data.resize", "neclib.devices", "neclib.devices.attenuator", "neclib.devices.attenuator.attenuator_base", "neclib.devices.attenuator.rhio10", "neclib.devices.bias_reader", "neclib.devices.bias_reader.bias_reader_base", "neclib.devices.bias_reader.cpz3177", "neclib.devices.bias_setter", "neclib.devices.bias_setter.bias_setter_base", "neclib.devices.bias_setter.cpz340816", "neclib.devices.device_base", "neclib.devices.encoder", "neclib.devices.encoder.encoder_base", "neclib.devices.encoder.nd287", "neclib.devices.motor", "neclib.devices.motor.cpz7415v", "neclib.devices.motor.motor_base", "neclib.devices.power_meter", "neclib.devices.power_meter.ma24126a", "neclib.devices.power_meter.power_meter_base", "neclib.devices.selector", "neclib.devices.signal_generator", "neclib.devices.signal_generator.fsw0010", "neclib.devices.signal_generator.fsw0020", "neclib.devices.signal_generator.signal_generator_base", "neclib.devices.spectrometer", "neclib.devices.spectrometer.spectrometer_base", "neclib.devices.spectrometer.xffts", "neclib.devices.thermometer", "neclib.devices.thermometer.model_218", "neclib.devices.thermometer.thermometer_base", "neclib.devices.vacuum_gauge", "neclib.devices.vacuum_gauge.tpg261", "neclib.devices.vacuum_gauge.vacuum_gauge_base", "neclib.devices.weather_station", "neclib.devices.weather_station.tr73u", "neclib.devices.weather_station.weather_station_base", "neclib.exceptions", "neclib.interfaces", "neclib.interfaces.console_logger", "neclib.parameters", "neclib.parameters.obsparam", "neclib.parameters.parser", "neclib.parameters.parser.obsparam_data", "neclib.parameters.parser.pointing_error_data", "neclib.parameters.pointing_error", "neclib.recorders", "neclib.recorders.console_log_writer", "neclib.recorders.file_writer", "neclib.recorders.necstdb_writer", "neclib.recorders.recorder", "neclib.recorders.writer_base", "neclib.safety", "neclib.safety.decelerate", "neclib.safety.status", "neclib.simulators", "neclib.simulators.antenna", "neclib.typing", "neclib.units", "neclib.utils", "neclib.utils.array_utils", "neclib.utils.data_utils", "neclib.utils.device_utils", "neclib.utils.math_utils", "neclib.utils.quantity_utils", "neclib.utils.simulator_utils", "neclib", "NECST Parameters", "neclib.config", "neclib.devices", "Tutorials for developers"], "terms": {"pure": [0, 77], "python": [0, 52, 65, 70, 72, 75, 77, 78, 79], "tool": [0, 77], "necst": [0, 1, 5, 8, 21, 31, 48, 53, 66, 77, 79, 80], "necstauthorityerror": [0, 48], "error": [0, 1, 3, 5, 21, 31, 34, 48, 50, 51, 53, 55, 56, 74, 78, 79], "relat": [0, 1, 21, 31, 48, 72], "control": [0, 25, 26, 48, 67, 73, 78, 79, 80], "prioriti": [0, 48], "necstconfigurationerror": [0, 1, 21, 31, 48], "paramet": [0, 1, 3, 5, 6, 7, 8, 13, 14, 19, 20, 21, 23, 24, 26, 27, 31, 48, 50, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 72, 73, 74, 75, 80], "configur": [0, 5, 8, 13, 17, 20, 21, 23, 24, 26, 29, 30, 31, 34, 37, 38, 43, 44, 48, 79, 80], "necsttimeouterror": [0, 48], "commun": [0, 48, 78], "timeout": [0, 48], "config": [0, 1, 5, 8, 21, 31, 80, 81], "creat": [0, 1, 72, 80], "file": [0, 1, 5, 8, 50, 52, 53, 54, 55, 58, 78, 80], "under": [0, 1], "home": [0, 1, 61], "get_logg": [0, 1, 5, 7, 26, 29, 31, 38, 46, 49, 50, 59, 60, 61], "get": [0, 1, 5, 7, 10, 26, 29, 31, 34, 38, 46, 49, 50, 59, 60, 61, 67, 70, 75, 79, 80], "logger": [0, 1, 5, 7, 26, 29, 31, 38, 46, 49, 50, 58, 59, 60, 61, 78], "instanc": [0, 1, 3, 5, 7, 26, 29, 31, 38, 46, 49, 50, 59, 60, 61, 72], "which": [0, 1, 3, 5, 7, 8, 25, 26, 29, 31, 38, 46, 49, 50, 52, 58, 59, 60, 61, 67, 73, 75, 78, 80], "print": [0, 1, 5, 7, 26, 29, 31, 38, 46, 49, 50, 59, 60, 61, 72, 73, 74, 79], "oper": [0, 1, 5, 7, 26, 29, 31, 38, 46, 49, 50, 59, 60, 61, 73, 74], "log": [0, 1, 5, 7, 26, 29, 31, 38, 46, 49, 50, 57, 58, 59, 60, 61], "consol": [0, 1, 5, 7, 26, 29, 31, 38, 46, 49, 50, 57, 58, 59, 60, 61], "class": [0, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 72, 73, 74, 75], "envvarnam": [0, 1], "sourc": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 69, 71, 72, 73, 74, 75, 76], "base": [0, 3, 5, 7, 8, 10, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 72, 73, 74, 80], "object": [0, 3, 4, 5, 6, 7, 10, 17, 20, 21, 33, 34, 54, 61, 64, 65, 67, 70, 72, 73, 74, 75, 80], "necst_root": [0, 79], "str": [0, 3, 5, 6, 7, 8, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 50, 52, 54, 55, 56, 59, 60, 65, 68, 72, 73, 75, 78, 79, 80], "ros2_w": 0, "domain_id": 0, "ros_domain_id": 0, "record_root": [0, 61, 78], "necst_record_root": 0, "none": [1, 3, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 56, 57, 58, 59, 60, 61, 62, 67, 70, 72, 74, 75, 79, 80], "valuerang": [1, 7, 64, 70, 72, 78], "util": [1, 64], "type": [1, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 35, 37, 38, 40, 41, 43, 44, 46, 47, 50, 52, 56, 58, 59, 60, 61, 62, 67, 69, 70, 72, 74, 75, 78, 79, 80], "valu": [1, 3, 5, 7, 26, 34, 50, 52, 54, 55, 60, 64, 67, 70, 71, 72, 74, 75, 79, 80], "rang": [1, 7, 10, 50, 63, 64, 70, 72, 74, 78], "check": [1, 59, 62, 70, 72, 74, 78], "return": [1, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 50, 52, 56, 58, 59, 60, 61, 62, 67, 69, 72, 74, 75, 80], "miscellan": [2, 77], "devic": [2, 3, 78, 79, 81], "mai": [2, 3, 34, 67, 74, 75], "refer": [2, 77, 79, 80], "collect": [2, 66, 70], "function": [2, 3, 34, 50, 60, 66, 67, 70, 72, 73, 74, 75, 80], "implement": [2, 3, 11, 52, 59, 62, 66, 67, 75, 79, 81], "some": [2, 3, 50, 52, 59, 62, 81], "algorithm": [2, 64], "someth": [2, 49, 50], "pidcontrol": [2, 3, 67], "pid": [2, 3, 67, 78], "telescop": [2, 3, 8, 26, 56, 63, 64, 67, 78], "antenna": [2, 3, 66, 78, 79], "main": 3, "dish": 3, "optimum": [3, 4, 7], "i": [3, 5, 7, 26, 34, 50, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 72, 74, 75, 77, 79], "calcul": [3, 4, 5, 8, 26, 51, 52, 56, 64, 67, 75], "us": [3, 26, 52, 57, 61, 66, 69, 73, 74, 75, 77, 80], "simpl": [3, 68, 75], "consist": [3, 80], "proport": 3, "integr": 3, "deriv": 3, "term": 3, "u": [3, 5, 7, 8, 26, 64, 69, 75], "t": [3, 5, 7, 8, 10, 26, 52, 54, 55, 58, 59, 60, 62, 64, 67, 69, 72, 74, 75, 78, 79, 80], "k_": 3, "mathrm": [3, 56], "p": 3, "e": [3, 52, 56, 79], "int": [3, 5, 7, 8, 10, 13, 14, 19, 20, 26, 27, 37, 38, 50, 52, 60, 61, 64, 69, 71, 72, 74, 75, 78, 79], "tau": 3, "d": [3, 7, 56], "frac": [3, 64], "where": [3, 7, 55, 64], "ar": [3, 5, 7, 8, 26, 50, 54, 55, 58, 64, 65, 67, 72, 75, 78, 79, 80, 81], "non": [3, 26, 50, 66, 79, 80], "neg": [3, 55], "constant": [3, 55, 67, 78], "": [3, 26, 50, 52, 61, 64, 66, 70, 73, 74, 75, 78, 79, 80], "between": [3, 7, 55, 64, 67, 69, 70, 74, 75], "desir": 3, "actual": [3, 80], "explanatori": 3, "thi": [3, 5, 7, 8, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 48, 50, 52, 56, 58, 59, 60, 61, 62, 68, 73, 74, 75, 77, 78, 79, 80, 81], "script": [3, 66, 69], "execut": [3, 69, 73], "high": [3, 26, 64], "frequenc": [3, 5, 8, 26, 78], "vector": 3, "mani": 3, "arrai": [3, 7, 8, 78, 79], "updat": [3, 60], "frequent": 3, "These": [3, 79], "mean": [3, 80], "numpi": [3, 70, 71, 74], "best": 3, "choic": [3, 7], "speed": [3, 8, 26, 27, 64, 67, 78, 79], "up": [3, 25, 26, 74], "measur": 3, "time": [3, 5, 7, 8, 10, 26, 52, 67, 73, 75, 78, 79], "first": [3, 10, 55, 73, 74, 79], "parameterlist": [3, 67, 70, 72], "list": [3, 10, 11, 17, 31, 37, 38, 52, 60, 61, 65, 67, 69, 70, 72, 74, 75, 78, 79], "special": [3, 67, 70, 72], "store": [3, 61, 67, 70, 72, 73], "pid_param": 3, "1": [3, 8, 10, 14, 26, 50, 52, 56, 61, 64, 69, 72, 73, 74, 75, 79], "0": [3, 5, 6, 8, 10, 26, 50, 52, 54, 60, 64, 67, 70, 72, 73, 74], "5": [3, 5, 7, 8, 52, 56, 60, 64, 67, 69, 72, 73, 74, 75], "3": [3, 56, 67, 72, 74, 75], "max_spe": [3, 79], "quantiti": [3, 5, 7, 8, 13, 14, 16, 17, 23, 24, 26, 27, 29, 30, 35, 40, 41, 43, 44, 46, 47, 51, 52, 53, 54, 55, 56, 64, 67, 69, 70, 71, 74, 75, 78, 79], "2": [3, 14, 26, 56, 64, 72, 74, 75, 79], "deg": [3, 5, 6, 7, 8, 52, 56, 64, 67, 68, 75, 79], "max_acceler": [3, 64, 79], "s2": [3, 79], "error_integ_count": 3, "50": [3, 8, 26, 50], "threshold": [3, 78], "accel_limit_off": 3, "20": [3, 6, 50, 56, 72], "arcsec": [3, 55, 56, 67, 68, 75], "cmd_coord_chang": 3, "100": [3, 10, 72, 74], "target_accel_ignor": 3, "classic": 3, "sophist": 3, "system": [3, 48, 77, 78], "ha": [3, 34, 50, 52, 75], "delai": [3, 26], "respons": [3, 66, 67], "input": [3, 38, 52, 59, 62], "handl": [3, 25, 26, 51, 59, 60, 62, 69, 72, 75, 80], "onli": [3, 50, 80], "so": [3, 54, 55, 74, 79, 80], "az": [3, 5, 8, 23, 24, 26, 27, 56, 67, 70, 72, 75, 78], "el": [3, 5, 8, 23, 24, 26, 27, 56, 67, 70, 72, 75, 78], "tupl": [3, 5, 8, 10, 37, 38, 52, 56, 60, 67, 69], "float": [3, 5, 7, 8, 10, 17, 19, 20, 26, 27, 37, 38, 46, 47, 52, 55, 56, 60, 67, 69, 70, 71, 74, 75, 78, 79, 80], "coeffici": [3, 55], "formul": 3, "k_p": 3, "k_i": 3, "k_d": 3, "union": [3, 5, 6, 7, 8, 52, 54, 55, 56, 60, 61, 67, 68, 71, 74, 75], "maximum": [3, 50, 64, 67, 70, 74, 78], "motion": [3, 26, 67], "acceler": [3, 26, 64, 67, 78], "number": [3, 10, 26, 52, 60, 61, 69, 74], "data": [3, 37, 38, 57, 58, 59, 60, 61, 62, 72], "dict": [3, 26, 31, 37, 38, 50, 52, 54, 55, 56, 60, 70, 72, 75, 79, 80], "liter": [3, 14, 23, 24, 27, 67, 68, 72, 74, 75], "astropi": [3, 6, 69, 70, 75], "unit": [3, 5, 7, 8, 52, 56, 67, 68, 70, 75], "condit": [3, 74], "interpret": [3, 50], "kei": [3, 21, 26, 54, 55, 60, 72, 79, 80], "angl": [3, 4, 7, 52, 54, 55], "If": [3, 5, 7, 8, 26, 50, 52, 60, 64, 65, 66, 72, 74, 75, 78, 79], "separ": [3, 7], "new": [3, 72, 80], "command": [3, 7, 8, 67, 78], "coordin": [3, 51, 52, 67, 78], "last": [3, 10, 67, 74], "one": [3, 65, 66, 75], "larger": 3, "than": [3, 7, 50, 60, 75, 78], "assum": [3, 5], "target": [3, 5, 7], "been": 3, "chang": [3, 26, 34, 52, 67], "reset": 3, "encod": [3, 11, 55, 64, 67], "read": [3, 55, 60, 64, 67, 79], "smaller": [3, 7], "stop": [3, 38, 70, 71, 73, 74], "appli": [3, 7, 72], "limit": [3, 7, 50, 63, 64, 70, 72, 74, 78, 80], "quick": 3, "converg": [3, 78], "drive": [3, 4, 7, 8, 26, 27, 63, 64, 78], "angular": [3, 5, 7, 8, 67, 68, 70, 75], "exce": [3, 74], "target_spe": 3, "ignor": [3, 5, 8, 26], "most": 3, "like": [3, 79, 80], "caus": [3, 74, 79], "softwar": [3, 78, 79], "bug": 3, "network": 3, "congest": 3, "variabl": [3, 5, 8, 52, 55, 58, 60, 79, 80], "k_c": 3, "upper": [3, 72, 74], "angle_unit": [3, 67], "cmd_speed": 3, "result": [3, 7, 74, 79], "unix": 3, "timestamp": [3, 10, 37, 38, 60], "done": [3, 5, 73], "cmd_coord": 3, "enc_coord": 3, "deviat": 3, "rate": 3, "add": 3, "gener": [3, 34, 38, 70, 72, 74, 75, 79], "an": 3, "attempt": [3, 73, 78], "follow": [3, 54, 55, 56, 79, 80], "raster": 3, "scan": [3, 4, 8, 52, 69, 78], "sider": 3, "track": 3, "error_integr": 3, "error_deriv": 3, "keep": 3, "default": [3, 26, 65, 75, 79], "optim": 3, "accord": [3, 26], "interv": [3, 51, 52, 67, 78], "depend": [3, 67], "all": [3, 11, 13, 16, 19, 21, 23, 26, 27, 30, 31, 35, 37, 38, 41, 44, 47, 50, 58, 61, 72, 73, 78, 79], "method": [3, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 52, 72, 74, 80], "argument": [3, 50, 52, 73], "given": [3, 5, 7, 8, 52, 65, 70, 75], "you": [3, 10, 64, 75, 79, 80], "need": [3, 26, 50, 80], "substitut": 3, "befor": 3, "instanti": 3, "exampl": [3, 5, 6, 7, 8, 10, 48, 50, 52, 54, 55, 56, 60, 61, 64, 65, 67, 69, 72, 73, 74, 75], "1000": [3, 60, 75], "6": [3, 5, 64, 72, 74], "target_coordin": 3, "encoder_read": 3, "30": [3, 5, 8, 50, 56, 67, 75], "10": [3, 6, 50, 52, 56, 72, 74], "get_spe": [3, 26, 27, 67], "430511474609375e": 3, "05": [3, 8], "20356178283691406": 3, "classvar": [3, 52, 67], "arcmin": [3, 67, 68, 75], "rad": [3, 67, 68, 75], "public": [3, 52], "accept": [3, 58, 79], "its": [3, 52, 72, 73, 75, 78, 79, 80], "properti": [3, 26, 61, 67, 72, 73], "dt": [3, 64, 67], "fals": [3, 52, 65, 72, 74], "modul": [3, 31, 52, 56, 66, 67], "instruct": 3, "bool": [3, 35, 52, 58, 60, 72, 73, 74, 78, 79], "true": [3, 50, 52, 65, 72, 74, 78], "won": [3, 7, 10, 26, 52, 54, 55, 59, 62, 75, 78, 79], "move": [3, 52], "regardless": 3, "param": [3, 52, 54, 55, 56, 72], "kwarg": [3, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62], "coordcalcul": [4, 5, 8], "horizont": [4, 5, 8], "drivelimitcheck": [4, 7], "find": [4, 7, 75], "safe": [4, 7, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47], "pathfind": [4, 8], "\u671b\u9060\u93e1\u306e\u8ecc\u9053\u3092\u8a08\u7b97\u3059\u308b": [4, 8], "describe_fram": [4, 6], "string": [4, 5, 6, 60, 78, 79], "represent": [4, 6], "frame": [4, 5, 8, 52], "parse_fram": [4, 5, 6], "pars": [4, 5, 6, 11, 51, 52, 53, 54, 55, 56, 78, 79, 80], "standby_posit": [4, 8], "standbi": [4, 8], "posit": [4, 8, 26, 27, 69], "take": [4, 8], "account": [4, 8], "margin": [4, 8, 78], "dure": [4, 7, 8, 67], "pointingerror": [5, 51, 56], "observ": [5, 7, 8, 50, 51, 52, 53, 54, 56, 58, 69, 79], "point": [5, 8, 51, 52, 53, 55, 56, 69, 74, 78, 79], "locat": [5, 8, 52, 78], "pointing_param_path": [5, 8], "pressur": [5, 8, 60], "temperatur": [5, 8], "relative_humid": [5, 8], "obswl": [5, 8, 52], "obsfreq": [5, 8], "earthloc": [5, 8, 78], "observatori": [5, 8, 60, 78, 79], "option": [5, 7, 8, 10, 14, 17, 20, 21, 24, 26, 29, 33, 34, 38, 40, 43, 46, 50, 52, 56, 60, 61, 70, 72, 74, 75], "pathlik": [5, 8, 54, 55, 61, 68], "path": [5, 8, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 78, 79], "atmospher": [5, 8], "ndarrai": [5, 7, 8, 52, 71, 74, 75], "rel": [5, 8, 79], "humid": [5, 8], "wavelength": [5, 8], "em": [5, 8], "wave": [5, 8], "comput": [5, 8], "diffract": [5, 8], "correct": [5, 8, 56], "dimensionless": 5, "hpa": [5, 8], "k": [5, 8], "m": [5, 67, 75], "138": [5, 8], "472153deg": [5, 8], "35": [5, 8], "940874deg": [5, 8], "1386m": [5, 8], "pointing_param": [5, 8], "toml": [5, 8, 54, 55, 56, 78, 79], "850": [5, 8, 60], "300": [5, 26, 52], "230": [5, 8], "ghz": [5, 8], "nan": [5, 72], "get_altaz_by_nam": 5, "name": [5, 50, 52, 54, 55, 60, 65, 73, 78, 79], "obstim": [5, 52], "\u5929\u4f53\u540d\u304b\u3089\u5730\u5e73\u5ea7\u6a19": 5, "alt": 5, "\u3092\u53d6\u5f97\u3059\u308b": 5, "celesti": 5, "sequenc": [5, 70, 74], "m42": 5, "skycoord": [5, 52], "274": 5, "55435678": 5, "15": [5, 60], "3762009": 5, "get_altaz": 5, "lon": [5, 78], "lat": [5, 78], "from": [5, 26, 52, 60, 61, 70, 73, 74, 75, 79, 80], "longitud": [5, 8, 52], "latitud": [5, 8, 52], "arbitrari": [5, 10, 57, 61, 74], "basecoordinatefram": [5, 6, 8, 52], "unitbas": [5, 7, 8, 52, 56, 69, 75], "thei": [5, 8, 69], "45": [5, 52], "fk5": [5, 6, 52], "344": 5, "21675916": 5, "43235393": 5, "The": [6, 7, 10, 26, 34, 52, 54, 55, 56, 59, 62, 64, 65, 73, 80], "describ": 6, "repr": 6, "altaz": [6, 8, 52], "skyoffsetfram": 6, "origin": [6, 66, 75], "10deg": 6, "0deg": 6, "rotat": 6, "20deg": 6, "builtin_fram": 6, "skyoffsetfk5": 6, "equinox": 6, "j2000": 6, "000": 6, "ra": 6, "dec": 6, "preferred_limit": 7, "max_observation_s": 7, "includ": [7, 10, 26, 70, 74, 79], "constraint": 7, "avoid": [7, 73, 80], "direct": [7, 26, 55], "unwrap": 7, "360deg": 7, "over": 7, "180deg": [7, 55], "never": [7, 74], "go": 7, "out": [7, 26], "can": [7, 25, 26, 52, 61, 67, 74, 75, 79, 80], "violat": 7, "continu": [7, 50], "other": [7, 26, 50, 52, 73, 75], "found": [7, 79, 80], "current": [7, 60, 67], "occur": 7, "possibli": 7, "interrupt": 7, "checker": 7, "260": 7, "250": 7, "200": 7, "170": 7, "190": 7, "scalar": 7, "n": [7, 67], "shape": 7, "seri": 7, "length": [7, 72], "environ": [8, 79], "290": 8, "finder": 8, "linear": [8, 26], "start": [8, 38, 71, 73, 74], "end": 8, "\u671b\u9060\u93e1\u306e\u76f4\u7dda\u8ecc\u9053\u3092\u8a08\u7b97\u3059\u308b": 8, "azimuth": [8, 55, 72], "elev": [8, 55, 72], "47920569": 8, "46920569": 8, "45920569": 8, "44920569": 8, "43920569": 8, "42920569": 8, "88176239": 8, "88176188": 8, "88176136": 8, "88176084": 8, "88176032": 8, "8817598": 8, "66685637e": 8, "09": 8, "32": 8, "29": 8, "resiz": 9, "keep_duration_sec": 10, "push": [10, 72], "n_sampl": 10, "cut": 10, "spectral": [10, 37, 38], "index": 10, "want": [10, 75, 79], "coars": 10, "sampl": 10, "spectral_data": 10, "repeat": 10, "sever": [10, 50, 58, 65], "8192": 10, "16384": 10, "cpz3177": [11, 15], "bias_read": 11, "cpz340816": [11, 18], "bias_sett": 11, "cpz7415v": [11, 25, 80], "motor": [11, 67, 78, 80], "fsw0010": [11, 32], "signal_gener": 11, "fsw0020": [11, 32], "ma24126a": [11, 28], "power_met": 11, "model218": [11, 39, 40], "thermomet": 11, "model_218": 11, "nd287": [11, 22], "rhio10": [11, 12], "attenu": 11, "tpg261": [11, 42], "vacuum_gaug": 11, "tr73u": [11, 45], "weather_st": 11, "xfft": [11, 36], "spectromet": 11, "avail": 11, "antennaencod": 11, "abc": [11, 21, 62, 72, 80], "antennamotor": [11, 80], "biasread": [11, 16, 17], "biassett": [11, 19, 20], "choppermotor": 11, "powermet": [11, 29, 30], "signalgener": [11, 33, 34, 35], "vacuumgaug": [11, 43, 44], "weatherst": [11, 46, 47], "antenna_encod": 11, "antenna_motor": 11, "chopper_motor": 11, "devicebas": [13, 16, 19, 21, 23, 27, 30, 31, 35, 37, 41, 44, 47], "abstract": [13, 16, 19, 21, 23, 27, 30, 35, 37, 41, 44, 47, 62], "set_level": [13, 14], "level_db": [13, 14], "ch": [13, 14, 16, 17, 19, 20], "get_level": [13, 14], "conf": [13, 17, 20, 21, 23, 24, 29, 30, 37, 43, 44], "model": [13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 56], "manufactur": [14, 16, 17, 19, 20, 21, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 80], "sena": 14, "identifi": [14, 17, 20, 21, 24, 26, 29, 33, 34, 38, 40, 43, 46, 80], "host": [14, 33, 34, 38, 40, 43], "final": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 80], "shut": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47], "down": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47], "should": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 50, 52, 59, 62, 65, 66, 75, 79, 80], "alwai": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47], "call": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 50, 67], "quit": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47], "program": [14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 46, 47, 50], "get_bias_voltag": [16, 17], "get_bias_curr": [16, 17], "busi": [17, 20, 33, 34, 70, 73], "manag": [17, 20, 33, 34, 63, 65, 70, 73], "state": [17, 20, 26, 33, 34, 70, 73], "interfac": [17, 26], "rsw_id": [17, 20, 26], "get_data": 17, "set_voltag": [19, 20], "voltage_mv": [19, 20], "output_voltag": [19, 20], "pyinterfac": 20, "group": [21, 73, 79], "uniqu": [21, 80], "specifi": [21, 52, 79], "singl": [21, 26, 79], "readout": [22, 24], "get_read": [23, 24], "axi": [23, 24, 26, 27, 55, 67, 72, 78], "heidenhain": 24, "port_az": 24, "puls": [25, 26], "4": [25, 26, 72, 74], "ax": [25, 26, 55, 67], "item": 26, "16": 26, "9": [26, 74], "A": [26, 54, 73], "f": [26, 50], "board": [26, 37, 38], "set": [26, 34, 38, 50, 67, 79, 80], "same": [26, 50, 55, 66, 73, 74, 80], "rotari": 26, "switch": 26, "rsw1": 26, "mount": 26, "side": 26, "ship": 26, "id": 26, "would": [26, 59, 62, 73, 80], "zero": [26, 50, 55], "when": [26, 73, 74, 78, 79, 80], "multipl": [26, 73, 74, 75], "pci": 26, "fa": 26, "factori": 26, "autom": 26, "useax": 26, "x": [26, 55, 56, 64, 72, 75], "y": [26, 56], "z": [26, 54], "concaten": 26, "them": 26, "_mode": 26, "jog": 26, "org": 26, "ptp": 26, "timer": 26, "mode": [26, 66], "absolut": [26, 27, 52, 64, 67, 74], "_pulse_conf": 26, "dir": 26, "wait": [26, 60, 73, 78], "duti": 26, "output": [26, 34, 38, 52, 78], "activ": [26, 61], "ccw": 26, "low": 26, "200u": 26, "insert": 26, "cycl": 26, "adapt": 26, "otherwis": 26, "_motion_clock": 26, "scale": 26, "factor": [26, 70, 75], "valid": [26, 50, 54, 55, 75, 79], "through": [26, 66], "4095": 26, "clock": 26, "_motion_acc_mod": 26, "acc_norm": 26, "acc_sin": 26, "curv": 26, "_motion_low_spe": 26, "startup": 26, "65535": 26, "_motion_spe": 26, "steadi": 26, "_motion_acc": 26, "_motion_dec": 26, "deceler": [26, 63], "_motion_step": 26, "134217728": 26, "134217727": 26, "org_search": 26, "axis_": 26, "alia": [26, 68], "map": [26, 52, 72], "speed_to_pulse_factor_": 26, "convers": [26, 70, 75, 78], "gear": 26, "ratio": 26, "For": [26, 34, 75], "defin": [26, 51, 69, 80], "prefix": [26, 79, 80], "_": [26, 72], "each": [26, 73, 80], "see": [26, 50, 75, 77, 79], "http": 26, "www": 26, "co": [26, 52, 56], "jp": 26, "download": 26, "tutori": 26, "tut0053_14": 26, "pdf": 26, "detail": [26, 79, 81], "current_mot": 26, "get_step": [26, 27], "mayb": [26, 27], "specif": [26, 27, 79], "set_spe": [26, 27], "set_step": [26, 27], "step": [26, 27, 74], "anritsu": 29, "port": [29, 46], "get_pow": [29, 30, 33, 34, 35], "zero_set": 29, "parse_device_configur": 31, "list_implement": 31, "skip_on_simul": [33, 34, 70, 76], "phasematrix": [33, 34], "set_freq": [33, 34, 35], "freq_ghz": [33, 34, 35], "set_pow": [33, 34, 35], "power_dbm": [33, 34, 35], "get_freq": [33, 34, 35], "start_output": [33, 34, 35], "stop_output": [33, 34, 35], "get_output_statu": [33, 34, 35], "power": 34, "signal": 34, "abil": 34, "product": [34, 75], "without": [34, 69, 80], "effect": 34, "rais": [34, 48, 65], "meaningless": 34, "get_spectra": [37, 38], "radiomet": 38, "physic": [38, 64, 75], "gmbh": 38, "initi": [38, 72], "data_consum": 38, "udp_client": 38, "mute_stderr": 38, "lakeshor": 40, "get_temp": [40, 41, 46, 47], "pfeiffer": 43, "get_pressur": [43, 44], "tandd": 46, "get_humid": [46, 47], "get_press": [46, 47], "inform": [48, 49, 50], "regard": 48, "statu": [48, 63], "reason": 48, "advis": 48, "fix": [48, 67], "user": [49, 50, 61], "clip": [50, 70, 74], "minimum": [50, 70, 74], "colorizelevelnameformatt": 50, "fmt": 50, "datefmt": 50, "style": [50, 55], "formatt": 50, "color": 50, "level": [50, 65], "doc": 50, "usag": [50, 81], "colorprefix": 50, "x1b": 50, "0m": 50, "35m": 50, "32m": 50, "33m": 50, "40": [50, 56], "31m": 50, "41": [50, 74], "97m": 50, "format": [50, 54, 55, 75], "record": [50, 78, 79], "text": 50, "logrecord": 50, "consolelogg": [50, 58], "arg": [50, 58, 59, 60, 61, 62], "observe_level": 50, "21": [50, 56], "obslog": 50, "msg": 50, "indent_level": 50, "summari": [50, 58], "debug": [50, 58], "messag": [50, 78], "indent": 50, "min_level": 50, "lower": [50, 72, 74, 79], "bound": [50, 72], "displai": 50, "termin": [50, 70, 71], "To": [50, 67, 69, 73, 75, 80], "suppress": 50, "less": 50, "higher": 50, "No": [50, 80], "matter": 50, "contain": [50, 81], "getlogg": 50, "otf_observ": 50, "txt": [50, 55], "diagnos": 50, "problem": 50, "info": 50, "expect": 50, "happen": 50, "warn": [50, 60, 65], "care": 50, "notifi": 50, "cannot": [50, 67, 75, 80], "complet": 50, "due": 50, "critic": [50, 56, 65, 75], "finish": [50, 73], "obsparamdata": [51, 52, 53, 54], "spec": [51, 52, 53, 54, 79], "obsparam": [51, 54, 55], "pointingerrordata": [51, 53, 55, 56], "off_point_coord": [51, 52], "off": [51, 52], "convert": [52, 60, 70, 72, 74, 75, 80], "flexibli": 52, "form": 52, "api": [52, 67, 77, 80], "content": [52, 59, 69, 73, 79], "translate_coordsi": 52, "offset": [52, 55], "subpackag": 52, "parametermap": [52, 54, 55, 70, 72], "attribut": [52, 54, 55, 70, 72, 73, 75, 79], "access": [52, 54, 55, 70, 72, 79], "support": [52, 54, 55, 66, 67, 68, 70, 72, 74], "quantity2builtin": [52, 70, 75], "built": [52, 70, 74, 75], "val": 52, "provid": [52, 77, 80], "parameterunit": 52, "lamdaon": 52, "betaon": 52, "from_fil": [52, 54, 55, 56], "123": 52, "parameternam": 52, "absolute_off_point_coordin": 52, "lamdaoff": 52, "betaoff": 52, "coord_si": 52, "hot_observation_interv": 52, "load_interv": 52, "off_observation_interv": 52, "off_interv": 52, "offset_coslat_appli": 52, "otadel": 52, "offset_from_on_to_off": 52, "deltalamda": 52, "deltabeta": 52, "delta_coord": 52, "on_point_coordin": 52, "hashabl": [52, 75], "points_per_scan": [52, 69], "hot": 52, "per": [52, 69], "line": [52, 69], "5min": 52, "5scan": [52, 69], "25": [52, 69], "on_point": 52, "coslat_appli": 52, "give": [52, 75], "ON": 52, "caution": [52, 74], "0h0m1": 52, "equival": [52, 69, 74, 75], "1arcsec": 52, "divid": 52, "keyword": 52, "pass": [52, 61], "etc": 52, "3h25m20": 52, "31d32m33": 52, "51": 52, "3333": 52, "31": [52, 56], "5425": 52, "5h1m1": 52, "30d25m20": 52, "galact": 52, "hour": [52, 75], "20arcsec": 52, "266": 52, "6442444454571": 52, "48": 52, "39027455272732": 52, "storag": [54, 55, 61], "uppercas": 54, "z0": 54, "9_": 54, "lowercas": 54, "mix": 54, "case": [54, 79, 80], "ani": [54, 55, 56, 58, 60, 62, 67, 70, 72, 75, 78, 79], "classmethod": [54, 55, 72], "bare": [54, 55], "nest": [54, 55], "tabl": [54, 55, 60, 78, 79], "allow": [54, 55, 72, 78], "those": [54, 55], "declar": [54, 55], "structur": [54, 55, 60, 61, 72], "flatten": [54, 55], "kind": [54, 55, 72], "preserv": [54, 55, 72], "ob": 54, "amigo": 54, "orikl": 54, "daz": 55, "de": 55, "collim": 55, "chi_az": 55, "magnitud": 55, "tilt": 55, "omega_az": 55, "phase": 55, "ep": 55, "skew": 55, "lack": 55, "orthogon": 55, "chi2_az": 55, "chi": 55, "period": 55, "harmon": 55, "compon": 55, "omega2_az": 55, "omega": 55, "chi_el": 55, "amplitud": 55, "omega_el": 55, "chi2_el": 55, "omega2_el": 55, "g": [55, 79], "order": [55, 65, 79], "gravit": 55, "deflect": 55, "gg": 55, "second": [55, 73], "ggg": 55, "third": 55, "gggg": 55, "fourth": 55, "del": 55, "de_radio": 55, "optic": 55, "radio": [55, 56], "beam": 55, "del_radio": 55, "cor_v": 55, "cor_p": 55, "g_radio": 55, "gg_radio": 55, "ggg_radio": 55, "gggg_radio": 55, "error_param": 55, "5300": 55, "380": 55, "from_text_fil": 55, "legaci": 55, "import": [56, 69, 79, 80], "perform": 56, "accur": 56, "uniform": 56, "emploi": [56, 75], "delta": 56, "chi_": 56, "sin": 56, "omega_": 56, "epsilon": 56, "cor": 56, "_v": 56, "_p": 56, "e_": 56, "g_1": 56, "g_2": 56, "g_": 56, "el_": 56, "refracted2appar": 56, "11": [56, 67], "apparent2refract": 56, "40680": 56, "76680": 56, "112680": 56, "73800": 56, "109800": 56, "145800": 56, "iter": [56, 72], "consolelogwrit": [57, 58], "writer": [57, 58, 59, 60, 61, 62], "filewrit": [57, 59, 61], "necstdbwrit": [57, 60], "dump": [57, 58, 60], "necstdb": [57, 60], "log_file_path": 58, "obslog_file_path": 58, "start_record": [58, 59, 60, 61, 62], "record_dir": [58, 59, 60, 61, 62], "append": [58, 59, 60, 61, 62, 72], "don": [58, 69, 79, 80], "issu": 58, "stop_record": [58, 59, 60, 61, 62], "textlik": [59, 60], "chunk": [59, 60, 62], "whether": [59, 60, 62], "subclass": [59, 62], "essenti": [59, 62], "differ": [59, 62, 73, 74, 79, 80], "extens": [59, 62, 79], "parse_str_s": 60, "str_to_byt": 60, "byte": 60, "db": 60, "databas": 60, "directori": [60, 61, 79], "doubl": 60, "1664195057": 60, "022712": 60, "float32": 60, "livelinessdur": 60, "isn": [60, 67, 79, 80], "durat": [60, 78], "sec": 60, "close": 60, "warningqueues": 60, "being": 60, "greater": 60, "dtypeconvert": 60, "callabl": [60, 67, 69, 72], "lambda": [60, 67, 72], "char": 60, "float64": 60, "int16": 60, "int32": 60, "int64": 60, "int8": 60, "uint16": 60, "uint32": 60, "uint64": 60, "uint8": 60, "readabl": 60, "c": [60, 75], "topic": [60, 78], "meter_read": 60, "add_tabl": 60, "metadata": 60, "remove_t": 60, "root": 61, "insid": 61, "subdirectori": [61, 80], "attach": 61, "add_writ": 61, "dbwriter": 61, "test": [61, 75], "drop_writ": 61, "drop": 61, "deactiv": 61, "nears": [63, 64], "addition": 64, "restrict": [64, 79], "understand": 64, "junior": 64, "know": [64, 80], "v": [64, 67], "qquad": 64, "v_0": 64, "x_0": 64, "sqrt": 64, "2x": 64, "2ax": 64, "distanc": 64, "consid": 64, "355": 64, "354": 64, "89442719": 64, "ascend": 65, "valueerror": [65, 75], "least": 65, "reserv": 65, "topic1": 65, "namespac": [65, 79], "topic2": 65, "necessari": 66, "run": 66, "here": [66, 69, 80], "correspond": [66, 67, 80], "much": 66, "possibl": 66, "inherit": [66, 80], "overrid": 66, "ensur": 66, "behavior": 66, "real": [66, 73], "antennaencoderemul": [66, 67], "emul": [66, 67], "azeldata": [67, 70, 72], "initialposit": 67, "device_moment_of_inertia": 67, "3000": 67, "kg": [67, 75], "m2": 67, "motor_torqu": 67, "angular_resolut": 67, "13728814": 67, "moment": 67, "inertia": 67, "torqu": 67, "exert": 67, "resolut": 67, "independ": [67, 80], "driver": 67, "yet": 67, "enc": 67, "pid_az": 67, "abs_acceler": 67, "two": [67, 73], "consecut": [67, 74], "approxim": 67, "12": 67, "intent": 67, "altazimuth": 67, "alias": 68, "hint": 68, "o": [68, 79], "combin": 68, "angleunit": 68, "express": [68, 75], "packag": [68, 79, 81], "custom": [69, 79], "fail": 69, "pleas": [69, 79], "even": 69, "explicitli": 69, "appear": [69, 74], "your": 69, "scan_to_point_equival": 69, "eq": 69, "purpos": 70, "conditioncheck": [70, 74], "angle_conversion_factor": [70, 75], "counter": [70, 74], "integ": [70, 74, 78, 79], "daz2dx": [70, 75], "discret": [70, 74], "nearest": [70, 74], "element": [70, 72, 74], "arithmet": [70, 74], "dx2daz": [70, 75], "force_data_typ": [70, 75], "frang": [70, 74], "version": [70, 74, 77, 79], "get_quant": [70, 75], "linear_sequ": [70, 71], "similar": [70, 71], "linspac": [70, 71], "unknown": [70, 71], "parse_quant": [70, 75], "partially_convert_unit": [70, 75], "replac": [70, 75], "dimens": [70, 75], "tocamelcas": [70, 72], "to_snake_cas": [70, 72], "num": 71, "supportscomparison": [72, 74], "initvalu": 72, "fill": 72, "copi": 72, "func": [72, 76], "everi": 72, "both": 72, "syntax": [72, 79], "fulli": 72, "b": [72, 73, 75], "strict": [72, 80], "comparison": 72, "exactli": 72, "equal": 72, "judg": 72, "valid_valu": 72, "valid_str": 72, "aaa": 72, "bbb": 72, "width": 72, "contain_al": 72, "contain_ani": 72, "pascal": 72, "bumpi": 72, "logic": 73, "obj": 73, "flagnam": 73, "context": 73, "block": 73, "until": 73, "confirm": 73, "exit": 73, "free": 73, "flag": 73, "conflict": 73, "foo": 73, "def": [73, 80], "task_a": 73, "self": [73, 80], "task": 73, "sleep": 73, "task_b": 73, "concurr": 73, "futur": 73, "threadpoolexecutor": 73, "executor": 73, "future1": 73, "submit": 73, "future2": 73, "abov": [73, 80], "howev": 73, "prevent": 73, "must": 73, "across": 73, "distinguish": [73, 80], "absmax": 74, "inclus": 74, "yield": 74, "success": 74, "becaus": 74, "overflow": 74, "ing": 74, "almost": 74, "arang": 74, "8": 74, "ceil": 74, "floor": 74, "141592": 74, "7": 74, "allow_infti": 74, "count": 74, "infin": 74, "memori": 74, "leak": 74, "sequenti": 74, "reset_on_failur": 74, "more": [75, 80], "realiz": [75, 80], "slower": 75, "thu": 75, "bottleneck": 75, "angle_deg": 75, "3600": 75, "m_sun": 75, "pc": 75, "solmass": 75, "pc2": 75, "96542625e": 75, "new_unit": 75, "construct": 75, "j": 75, "erg": 75, "w": 75, "l_sun": 75, "1484e": 75, "27": 75, "19e": 75, "23": 75, "h": 75, "couldn": 75, "sollum": 75, "dictionari": 75, "either": 75, "parameter_nam": 75, "299792458m": 75, "km": 75, "299792": 75, "458": 75, "default_unit": 75, "_getquant": 75, "signatur": 75, "1m": 75, "2m": 75, "3m": 75, "librari": 77, "pip": 77, "semant": 77, "descript": 78, "inlin": [78, 79], "height": 78, "simul": 78, "boolean": [78, 79], "make": 78, "save": [78, 79], "alert_interval_sec": 78, "alert": 78, "publish": 78, "antenna_pid_param_az": 78, "antenna_pid_param_el": 78, "antenna_drive_range_az": 78, "hardwar": 78, "antenna_drive_range_el": 78, "antenna_drive_warning_limit_az": 78, "prefer": [78, 79, 80], "antenna_drive_warning_limit_el": 78, "antenna_drive_critical_limit_az": 78, "antenna_drive_critical_limit_el": 78, "antenna_pointing_accuraci": 78, "antenna_pointing_parameter_path": 78, "antenna_max_acceleration_az": 78, "antenna_max_acceleration_el": 78, "antenna_max_speed_az": 78, "antenna_max_speed_el": 78, "antenna_command_frequ": 78, "antenna_command_offset_sec": 78, "ros_service_timeout_sec": 78, "ro": 78, "servic": 78, "client": 78, "server": 78, "ros_communication_deadline_sec": 78, "staler": 78, "subscrib": 78, "ros_logging_interval_sec": 78, "throttl": 78, "too": 78, "verbos": 78, "ros_topic_scan_interval_sec": 78, "node": 78, "constantli": 78, "exist": [78, 79], "design": 79, "nonspecif": 79, "perticular": 79, "automat": 79, "search": [79, 80], "wasn": 79, "src": 79, "caught": 79, "via": 79, "overwrit": 79, "reload": 79, "below": [79, 80, 81], "written": 79, "tomlkit": 79, "pair": 79, "datetim": 79, "strongli": 79, "discourag": 79, "unexpect": 79, "snake": [79, 80], "word": 79, "split": 79, "underscor": 79, "simplic": 79, "indic": [79, 80], "section": [79, 80], "comment": 79, "encourag": 79, "satisfi": 79, "document": 79, "definit": 79, "antenna_max_spe": 79, "2deg": 79, "antenna_max_acceler": 79, "5deg": 79, "max": 79, "maxacceler": 79, "nor": 79, "__get_pars": 79, "py": [79, 80], "just": [79, 80], "have": 79, "ll": 79, "antenna_param": 79, "nonexist": 79, "undefined_parameters_a": 79, "undefin": 79, "date": 79, "featur": 80, "common": 80, "select": 80, "dev_": 80, "link": 80, "selector": 80, "referenc": 80, "camel": 80, "dev_antenna_motor": 80, "latter": 80, "reveal": 80, "littl": 80, "bit": 80, "concret": 80, "also": 80, "twice": 80, "m2motor": 80, "write": 80, "dev_m2_motor": 80, "insensit": 80, "procedur": 80, "ad": 80, "alreadi": 80, "skip": 80, "throughout": 80, "decor": 80, "abstractmethod": 80, "requir": 80, "convent": 80, "suffix": 80, "_base": 80, "devicetyp": 80, "set_some_paramet": 80, "get_some_paramet": 80, "get_all_data": 80, "some_paramet": 80, "omit": 80, "alphanumer": 80, "charact": 80, "inconsist": 80, "impos": 80, "freeli": 80, "ones": 80, "duplic": 80, "device_type_bas": 80, "devicemodel": 80, "come": 80, "_some_method_to_implement_get_some_paramet": 80, "In": 81, "pursuit": 81, "conveni": 81, "tricki": 81, "explan": 81, "neclib": 81}, "objects": {"": [[0, 0, 0, "-", "neclib"]], "neclib": [[0, 1, 1, "", "EnvVarName"], [1, 0, 0, "-", "configuration"], [2, 0, 0, "-", "controllers"], [4, 0, 0, "-", "coordinates"], [9, 0, 0, "-", "data"], [11, 0, 0, "-", "devices"], [48, 0, 0, "-", "exceptions"], [49, 0, 0, "-", "interfaces"], [51, 0, 0, "-", "parameters"], [57, 0, 0, "-", "recorders"], [63, 0, 0, "-", "safety"], [66, 0, 0, "-", "simulators"], [68, 0, 0, "-", "typing"], [69, 0, 0, "-", "units"], [70, 0, 0, "-", "utils"]], "neclib.EnvVarName": [[0, 2, 1, "", "domain_id"], [0, 2, 1, "", "necst_root"], [0, 2, 1, "", "record_root"], [0, 2, 1, "", "ros2_ws"]], "neclib.configuration": [[1, 3, 1, "", "configure"]], "neclib.controllers": [[3, 0, 0, "-", "antenna_pid"]], "neclib.controllers.antenna_pid": [[3, 1, 1, "", "PIDController"]], "neclib.controllers.antenna_pid.PIDController": [[3, 2, 1, "", "ANGLE_UNIT"], [3, 4, 1, "", "dt"], [3, 4, 1, "", "error_derivative"], [3, 4, 1, "", "error_integral"], [3, 5, 1, "", "get_speed"], [3, 5, 1, "", "params"]], "neclib.coordinates": [[5, 0, 0, "-", "convert"], [6, 0, 0, "-", "frame"], [7, 0, 0, "-", "optimize"], [8, 0, 0, "-", "path_finder"]], "neclib.coordinates.convert": [[5, 1, 1, "", "CoordCalculator"]], "neclib.coordinates.convert.CoordCalculator": [[5, 5, 1, "", "get_altaz"], [5, 5, 1, "", "get_altaz_by_name"], [5, 2, 1, "", "obswl"], [5, 2, 1, "", "pressure"], [5, 2, 1, "", "relative_humidity"], [5, 2, 1, "", "temperature"]], "neclib.coordinates.frame": [[6, 3, 1, "", "describe_frame"], [6, 3, 1, "", "parse_frame"]], "neclib.coordinates.optimize": [[7, 1, 1, "", "DriveLimitChecker"]], "neclib.coordinates.optimize.DriveLimitChecker": [[7, 5, 1, "", "optimize"]], "neclib.coordinates.path_finder": [[8, 1, 1, "", "PathFinder"], [8, 3, 1, "", "standby_position"]], "neclib.coordinates.path_finder.PathFinder": [[8, 5, 1, "", "linear"]], "neclib.data": [[10, 0, 0, "-", "resize"]], "neclib.data.resize": [[10, 1, 1, "", "Resize"]], "neclib.data.resize.Resize": [[10, 5, 1, "", "get"], [10, 5, 1, "", "push"]], "neclib.devices": [[12, 0, 0, "-", "attenuator"], [15, 0, 0, "-", "bias_reader"], [18, 0, 0, "-", "bias_setter"], [21, 0, 0, "-", "device_base"], [22, 0, 0, "-", "encoder"], [11, 6, 1, "", "implementations"], [25, 0, 0, "-", "motor"], [11, 6, 1, "", "parsed"], [28, 0, 0, "-", "power_meter"], [31, 0, 0, "-", "selector"], [32, 0, 0, "-", "signal_generator"], [36, 0, 0, "-", "spectrometer"], [39, 0, 0, "-", "thermometer"], [42, 0, 0, "-", "vacuum_gauge"], [45, 0, 0, "-", "weather_station"]], "neclib.devices.attenuator": [[13, 0, 0, "-", "attenuator_base"], [14, 0, 0, "-", "rhio10"]], "neclib.devices.attenuator.attenuator_base": [[13, 1, 1, "", "Attenuator"]], "neclib.devices.attenuator.attenuator_base.Attenuator": [[13, 2, 1, "", "Model"], [13, 2, 1, "", "conf"], [13, 5, 1, "", "get_level"], [13, 5, 1, "", "set_level"]], "neclib.devices.attenuator.rhio10": [[14, 1, 1, "", "RHIO10"]], "neclib.devices.attenuator.rhio10.RHIO10": [[14, 2, 1, "", "Identifier"], [14, 2, 1, "", "Manufacturer"], [14, 2, 1, "", "Model"], [14, 5, 1, "", "finalize"], [14, 5, 1, "", "get_level"], [14, 5, 1, "", "set_level"]], "neclib.devices.bias_reader": [[16, 0, 0, "-", "bias_reader_base"], [17, 0, 0, "-", "cpz3177"]], "neclib.devices.bias_reader.bias_reader_base": [[16, 1, 1, "", "BiasReader"]], "neclib.devices.bias_reader.bias_reader_base.BiasReader": [[16, 2, 1, "", "Manufacturer"], [16, 2, 1, "", "Model"], [16, 5, 1, "", "finalize"], [16, 5, 1, "", "get_bias_current"], [16, 5, 1, "", "get_bias_voltage"]], "neclib.devices.bias_reader.cpz3177": [[17, 1, 1, "", "CPZ3177"]], "neclib.devices.bias_reader.cpz3177.CPZ3177": [[17, 2, 1, "", "Identifier"], [17, 2, 1, "", "Manufacturer"], [17, 2, 1, "", "Model"], [17, 2, 1, "", "conf"], [17, 5, 1, "", "finalize"], [17, 5, 1, "", "get_bias_current"], [17, 5, 1, "", "get_bias_voltage"], [17, 5, 1, "", "get_data"]], "neclib.devices.bias_setter": [[19, 0, 0, "-", "bias_setter_base"], [20, 0, 0, "-", "cpz340816"]], "neclib.devices.bias_setter.bias_setter_base": [[19, 1, 1, "", "BiasSetter"]], "neclib.devices.bias_setter.bias_setter_base.BiasSetter": [[19, 2, 1, "", "Manufacturer"], [19, 2, 1, "", "Model"], [19, 5, 1, "", "finalize"], [19, 5, 1, "", "output_voltage"], [19, 5, 1, "", "set_voltage"]], "neclib.devices.bias_setter.cpz340816": [[20, 1, 1, "", "CPZ340816"]], "neclib.devices.bias_setter.cpz340816.CPZ340816": [[20, 2, 1, "", "Identifier"], [20, 2, 1, "", "Manufacturer"], [20, 2, 1, "", "Model"], [20, 2, 1, "", "conf"], [20, 5, 1, "", "finalize"], [20, 5, 1, "", "output_voltage"], [20, 5, 1, "", "set_voltage"]], "neclib.devices.device_base": [[21, 1, 1, "", "DeviceBase"]], "neclib.devices.device_base.DeviceBase": [[21, 2, 1, "", "Config"], [21, 2, 1, "", "Identifier"], [21, 2, 1, "", "Manufacturer"], [21, 2, 1, "", "Model"], [21, 2, 1, "", "conf"], [21, 5, 1, "", "finalize"]], "neclib.devices.encoder": [[23, 0, 0, "-", "encoder_base"], [24, 0, 0, "-", "nd287"]], "neclib.devices.encoder.encoder_base": [[23, 1, 1, "", "Encoder"]], "neclib.devices.encoder.encoder_base.Encoder": [[23, 2, 1, "", "Model"], [23, 2, 1, "", "conf"], [23, 5, 1, "", "finalize"], [23, 5, 1, "", "get_reading"]], "neclib.devices.encoder.nd287": [[24, 1, 1, "", "ND287"]], "neclib.devices.encoder.nd287.ND287": [[24, 2, 1, "", "Identifier"], [24, 2, 1, "", "Manufacturer"], [24, 2, 1, "", "Model"], [24, 2, 1, "", "conf"], [24, 5, 1, "", "finalize"], [24, 5, 1, "", "get_reading"]], "neclib.devices.motor": [[26, 0, 0, "-", "cpz7415v"], [27, 0, 0, "-", "motor_base"]], "neclib.devices.motor.cpz7415v": [[26, 1, 1, "", "CPZ7415V"]], "neclib.devices.motor.cpz7415v.CPZ7415V": [[26, 2, 1, "", "Identifier"], [26, 2, 1, "", "Manufacturer"], [26, 2, 1, "", "Model"], [26, 4, 1, "", "current_motion"], [26, 5, 1, "", "finalize"], [26, 5, 1, "", "get_speed"], [26, 5, 1, "", "get_step"], [26, 5, 1, "", "set_speed"], [26, 5, 1, "", "set_step"]], "neclib.devices.motor.motor_base": [[27, 1, 1, "", "Motor"]], "neclib.devices.motor.motor_base.Motor": [[27, 2, 1, "", "Manufacturer"], [27, 2, 1, "", "Model"], [27, 5, 1, "", "finalize"], [27, 5, 1, "", "get_speed"], [27, 5, 1, "", "get_step"], [27, 5, 1, "", "set_speed"], [27, 5, 1, "", "set_step"]], "neclib.devices.power_meter": [[29, 0, 0, "-", "ma24126a"], [30, 0, 0, "-", "power_meter_base"]], "neclib.devices.power_meter.ma24126a": [[29, 1, 1, "", "MA24126A"]], "neclib.devices.power_meter.ma24126a.MA24126A": [[29, 2, 1, "", "Identifier"], [29, 2, 1, "", "Manufacturer"], [29, 2, 1, "", "Model"], [29, 2, 1, "", "conf"], [29, 5, 1, "", "finalize"], [29, 5, 1, "", "get_power"], [29, 5, 1, "", "zero_set"]], "neclib.devices.power_meter.power_meter_base": [[30, 1, 1, "", "PowerMeter"]], "neclib.devices.power_meter.power_meter_base.PowerMeter": [[30, 2, 1, "", "Model"], [30, 2, 1, "", "conf"], [30, 5, 1, "", "get_power"]], "neclib.devices.selector": [[31, 3, 1, "", "list_implementations"], [31, 3, 1, "", "parse_device_configuration"]], "neclib.devices.signal_generator": [[33, 0, 0, "-", "fsw0010"], [34, 0, 0, "-", "fsw0020"], [35, 0, 0, "-", "signal_generator_base"]], "neclib.devices.signal_generator.fsw0010": [[33, 1, 1, "", "FSW0010"]], "neclib.devices.signal_generator.fsw0010.FSW0010": [[33, 2, 1, "", "Identifier"], [33, 2, 1, "", "Manufacturer"], [33, 2, 1, "", "Model"], [33, 5, 1, "", "finalize"], [33, 5, 1, "", "get_freq"], [33, 5, 1, "", "get_output_status"], [33, 5, 1, "", "get_power"], [33, 5, 1, "", "set_freq"], [33, 5, 1, "", "set_power"], [33, 5, 1, "", "start_output"], [33, 5, 1, "", "stop_output"]], "neclib.devices.signal_generator.fsw0020": [[34, 1, 1, "", "FSW0020"]], "neclib.devices.signal_generator.fsw0020.FSW0020": [[34, 2, 1, "", "Identifier"], [34, 2, 1, "", "Manufacturer"], [34, 2, 1, "", "Model"], [34, 5, 1, "", "finalize"], [34, 5, 1, "", "get_freq"], [34, 5, 1, "", "get_output_status"], [34, 5, 1, "", "get_power"], [34, 5, 1, "", "set_freq"], [34, 5, 1, "", "set_power"], [34, 5, 1, "", "start_output"], [34, 5, 1, "", "stop_output"]], "neclib.devices.signal_generator.signal_generator_base": [[35, 1, 1, "", "SignalGenerator"]], "neclib.devices.signal_generator.signal_generator_base.SignalGenerator": [[35, 2, 1, "", "Manufacturer"], [35, 2, 1, "", "Model"], [35, 5, 1, "", "finalize"], [35, 5, 1, "", "get_freq"], [35, 5, 1, "", "get_output_status"], [35, 5, 1, "", "get_power"], [35, 5, 1, "", "set_freq"], [35, 5, 1, "", "set_power"], [35, 5, 1, "", "start_output"], [35, 5, 1, "", "stop_output"]], "neclib.devices.spectrometer": [[37, 0, 0, "-", "spectrometer_base"], [38, 0, 0, "-", "xffts"]], "neclib.devices.spectrometer.spectrometer_base": [[37, 1, 1, "", "Spectrometer"]], "neclib.devices.spectrometer.spectrometer_base.Spectrometer": [[37, 2, 1, "", "Model"], [37, 2, 1, "", "conf"], [37, 5, 1, "", "get_spectra"]], "neclib.devices.spectrometer.xffts": [[38, 1, 1, "", "XFFTS"], [38, 3, 1, "", "mute_stderr"]], "neclib.devices.spectrometer.xffts.XFFTS": [[38, 2, 1, "", "Identifier"], [38, 2, 1, "", "Manufacturer"], [38, 2, 1, "", "Model"], [38, 5, 1, "", "finalize"], [38, 5, 1, "", "get_spectra"], [38, 5, 1, "", "initialize"], [38, 5, 1, "", "start"], [38, 5, 1, "", "stop"]], "neclib.devices.thermometer": [[40, 0, 0, "-", "model_218"], [41, 0, 0, "-", "thermometer_base"]], "neclib.devices.thermometer.model_218": [[40, 1, 1, "", "Model218"]], "neclib.devices.thermometer.model_218.Model218": [[40, 2, 1, "", "Identifier"], [40, 2, 1, "", "Manufacturer"], [40, 2, 1, "", "Model"], [40, 5, 1, "", "finalize"], [40, 5, 1, "", "get_temp"]], "neclib.devices.thermometer.thermometer_base": [[41, 1, 1, "", "Thermometer"]], "neclib.devices.thermometer.thermometer_base.Thermometer": [[41, 2, 1, "", "Manufacturer"], [41, 2, 1, "", "Model"], [41, 5, 1, "", "finalize"], [41, 5, 1, "", "get_temp"]], "neclib.devices.vacuum_gauge": [[43, 0, 0, "-", "tpg261"], [44, 0, 0, "-", "vacuum_gauge_base"]], "neclib.devices.vacuum_gauge.tpg261": [[43, 1, 1, "", "TPG261"]], "neclib.devices.vacuum_gauge.tpg261.TPG261": [[43, 2, 1, "", "Identifier"], [43, 2, 1, "", "Manufacturer"], [43, 2, 1, "", "Model"], [43, 2, 1, "", "conf"], [43, 5, 1, "", "finalize"], [43, 5, 1, "", "get_pressure"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base": [[44, 1, 1, "", "VacuumGauge"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge": [[44, 2, 1, "", "Model"], [44, 2, 1, "", "conf"], [44, 5, 1, "", "get_pressure"]], "neclib.devices.weather_station": [[46, 0, 0, "-", "tr73u"], [47, 0, 0, "-", "weather_station_base"]], "neclib.devices.weather_station.tr73u": [[46, 1, 1, "", "TR73U"]], "neclib.devices.weather_station.tr73u.TR73U": [[46, 2, 1, "", "Identifier"], [46, 2, 1, "", "Manufacturer"], [46, 2, 1, "", "Model"], [46, 5, 1, "", "finalize"], [46, 5, 1, "", "get_humid"], [46, 5, 1, "", "get_press"], [46, 5, 1, "", "get_temp"]], "neclib.devices.weather_station.weather_station_base": [[47, 1, 1, "", "WeatherStation"]], "neclib.devices.weather_station.weather_station_base.WeatherStation": [[47, 2, 1, "", "Manufacturer"], [47, 2, 1, "", "Model"], [47, 5, 1, "", "finalize"], [47, 5, 1, "", "get_humid"], [47, 5, 1, "", "get_press"], [47, 5, 1, "", "get_temp"]], "neclib.exceptions": [[48, 7, 1, "", "NECSTAuthorityError"], [48, 7, 1, "", "NECSTConfigurationError"], [48, 7, 1, "", "NECSTTimeoutError"]], "neclib.interfaces": [[50, 0, 0, "-", "console_logger"]], "neclib.interfaces.console_logger": [[50, 1, 1, "", "ColorizeLevelNameFormatter"], [50, 1, 1, "", "ConsoleLogger"], [50, 3, 1, "", "get_logger"]], "neclib.interfaces.console_logger.ColorizeLevelNameFormatter": [[50, 2, 1, "", "ColorPrefix"], [50, 5, 1, "", "format"]], "neclib.interfaces.console_logger.ConsoleLogger": [[50, 2, 1, "", "OBSERVE_level"], [50, 5, 1, "", "obslog"]], "neclib.parameters": [[52, 0, 0, "-", "obsparam"], [53, 0, 0, "-", "parser"], [56, 0, 0, "-", "pointing_error"]], "neclib.parameters.obsparam": [[52, 1, 1, "", "ObsParams"], [52, 3, 1, "", "interval"], [52, 3, 1, "", "off_point_coord"]], "neclib.parameters.obsparam.ObsParams": [[52, 2, 1, "", "ParameterName"], [52, 2, 1, "", "ParameterUnit"], [52, 5, 1, "", "hot_observation_interval"], [52, 5, 1, "", "off_observation_interval"], [52, 5, 1, "", "off_point_coord"]], "neclib.parameters.parser": [[54, 0, 0, "-", "obsparam_data"], [55, 0, 0, "-", "pointing_error_data"]], "neclib.parameters.parser.obsparam_data": [[54, 1, 1, "", "ObsParamData"]], "neclib.parameters.parser.obsparam_data.ObsParamData": [[54, 5, 1, "", "from_file"]], "neclib.parameters.parser.pointing_error_data": [[55, 1, 1, "", "PointingErrorData"]], "neclib.parameters.parser.pointing_error_data.PointingErrorData": [[55, 5, 1, "", "from_file"], [55, 5, 1, "", "from_text_file"]], "neclib.parameters.pointing_error": [[56, 1, 1, "", "PointingError"]], "neclib.parameters.pointing_error.PointingError": [[56, 5, 1, "", "apparent2refracted"], [56, 5, 1, "", "refracted2apparent"]], "neclib.recorders": [[58, 0, 0, "-", "console_log_writer"], [59, 0, 0, "-", "file_writer"], [60, 0, 0, "-", "necstdb_writer"], [61, 0, 0, "-", "recorder"], [62, 0, 0, "-", "writer_base"]], "neclib.recorders.console_log_writer": [[58, 1, 1, "", "ConsoleLogWriter"]], "neclib.recorders.console_log_writer.ConsoleLogWriter": [[58, 5, 1, "", "append"], [58, 5, 1, "", "start_recording"], [58, 5, 1, "", "stop_recording"]], "neclib.recorders.file_writer": [[59, 1, 1, "", "FileWriter"]], "neclib.recorders.file_writer.FileWriter": [[59, 5, 1, "", "append"], [59, 5, 1, "", "start_recording"], [59, 5, 1, "", "stop_recording"]], "neclib.recorders.necstdb_writer": [[60, 1, 1, "", "NECSTDBWriter"], [60, 3, 1, "", "parse_str_size"], [60, 3, 1, "", "str_to_bytes"]], "neclib.recorders.necstdb_writer.NECSTDBWriter": [[60, 2, 1, "", "DTypeConverters"], [60, 2, 1, "", "LivelinessDuration"], [60, 2, 1, "", "WarningQueueSize"], [60, 5, 1, "", "add_table"], [60, 5, 1, "", "append"], [60, 5, 1, "", "remove_table"], [60, 5, 1, "", "start_recording"], [60, 5, 1, "", "stop_recording"]], "neclib.recorders.recorder": [[61, 1, 1, "", "Recorder"]], "neclib.recorders.recorder.Recorder": [[61, 5, 1, "", "add_writer"], [61, 5, 1, "", "append"], [61, 5, 1, "", "drop_writer"], [61, 5, 1, "", "start_recording"], [61, 5, 1, "", "stop_recording"], [61, 4, 1, "", "writers"]], "neclib.recorders.writer_base": [[62, 1, 1, "", "Writer"]], "neclib.recorders.writer_base.Writer": [[62, 5, 1, "", "append"], [62, 5, 1, "", "start_recording"], [62, 5, 1, "", "stop_recording"]], "neclib.safety": [[64, 0, 0, "-", "decelerate"], [65, 0, 0, "-", "status"]], "neclib.safety.decelerate": [[64, 1, 1, "", "Decelerate"]], "neclib.safety.status": [[65, 1, 1, "", "Status"]], "neclib.simulators": [[67, 0, 0, "-", "antenna"]], "neclib.simulators.antenna": [[67, 1, 1, "", "AntennaEncoderEmulator"]], "neclib.simulators.antenna.AntennaEncoderEmulator": [[67, 2, 1, "", "ANGLE_UNIT"], [67, 4, 1, "", "abs_acceleration"], [67, 5, 1, "", "command"], [67, 4, 1, "", "dt"], [67, 5, 1, "", "read"]], "neclib.typing": [[68, 6, 1, "", "AngleUnit"], [68, 6, 1, "", "PathLike"]], "neclib.units": [[69, 6, 1, "", "point"], [69, 6, 1, "", "scan"], [69, 3, 1, "", "scan_to_point_equivalency"]], "neclib.utils": [[71, 0, 0, "-", "array_utils"], [72, 0, 0, "-", "data_utils"], [73, 0, 0, "-", "device_utils"], [74, 0, 0, "-", "math_utils"], [75, 0, 0, "-", "quantity_utils"], [76, 0, 0, "-", "simulator_utils"]], "neclib.utils.array_utils": [[71, 3, 1, "", "linear_sequence"]], "neclib.utils.data_utils": [[72, 1, 1, "", "AzElData"], [72, 1, 1, "", "ParameterList"], [72, 1, 1, "", "ParameterMapping"], [72, 1, 1, "", "ValueRange"], [72, 3, 1, "", "toCamelCase"], [72, 3, 1, "", "to_snake_case"]], "neclib.utils.data_utils.AzElData": [[72, 2, 1, "", "az"], [72, 2, 1, "", "el"]], "neclib.utils.data_utils.ParameterList": [[72, 5, 1, "", "copy"], [72, 5, 1, "", "map"], [72, 5, 1, "", "new"], [72, 5, 1, "", "push"]], "neclib.utils.data_utils.ParameterMapping": [[72, 5, 1, "", "copy"]], "neclib.utils.data_utils.ValueRange": [[72, 5, 1, "", "contain_all"], [72, 5, 1, "", "contain_any"], [72, 5, 1, "", "map"], [72, 4, 1, "", "width"]], "neclib.utils.device_utils": [[73, 1, 1, "", "busy"]], "neclib.utils.device_utils.busy": [[73, 4, 1, "", "busy"]], "neclib.utils.math_utils": [[74, 1, 1, "", "ConditionChecker"], [74, 3, 1, "", "clip"], [74, 3, 1, "", "counter"], [74, 3, 1, "", "discretize"], [74, 3, 1, "", "frange"]], "neclib.utils.math_utils.ConditionChecker": [[74, 5, 1, "", "check"]], "neclib.utils.quantity_utils": [[75, 3, 1, "", "angle_conversion_factor"], [75, 3, 1, "", "dAz2dx"], [75, 3, 1, "", "dx2dAz"], [75, 3, 1, "", "force_data_type"], [75, 3, 1, "", "get_quantity"], [75, 3, 1, "", "parse_quantity"], [75, 3, 1, "", "partially_convert_unit"], [75, 3, 1, "", "quantity2builtin"]], "neclib.utils.simulator_utils": [[76, 3, 1, "", "skip_on_simulator"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:property", "5": "py:method", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"neclib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80], "alias": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 70, 72, 74], "subpackag": [0, 11, 51], "submodul": [0, 2, 4, 9, 11, 12, 15, 18, 22, 25, 28, 32, 36, 39, 42, 45, 49, 51, 53, 57, 63, 66, 70], "configur": 1, "control": [2, 3], "antenna_pid": 3, "note": [3, 26, 54, 55, 59, 62, 66, 67, 69, 74, 75], "coordin": [4, 5, 6, 7, 8], "convert": 5, "frame": 6, "optim": 7, "path_find": 8, "data": [9, 10], "resiz": 10, "paramet": [10, 51, 52, 53, 54, 55, 56, 78, 79], "devic": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 80], "attenu": [12, 13, 14], "attenuator_bas": 13, "rhio10": 14, "bias_read": [15, 16, 17], "bias_reader_bas": 16, "cpz3177": 17, "bias_sett": [18, 19, 20], "bias_setter_bas": 19, "cpz340816": 20, "device_bas": 21, "encod": [22, 23, 24], "encoder_bas": 23, "nd287": 24, "motor": [25, 26, 27], "cpz7415v": 26, "motor_bas": 27, "power_met": [28, 29, 30], "ma24126a": 29, "power_meter_bas": 30, "selector": 31, "signal_gener": [32, 33, 34, 35], "fsw0010": 33, "fsw0020": 34, "signal_generator_bas": 35, "spectromet": [36, 37, 38], "spectrometer_bas": 37, "xfft": 38, "thermomet": [39, 40, 41], "model_218": 40, "thermometer_bas": 41, "vacuum_gaug": [42, 43, 44], "tpg261": 43, "vacuum_gauge_bas": 44, "weather_st": [45, 46, 47], "tr73u": 46, "weather_station_bas": 47, "except": 48, "interfac": [49, 50], "console_logg": 50, "obsparam": 52, "parser": [53, 54, 55, 79], "obsparam_data": 54, "pointing_error_data": 55, "pointing_error": 56, "record": [57, 58, 59, 60, 61, 62], "console_log_writ": 58, "file_writ": 59, "necstdb_writ": 60, "writer_bas": 62, "safeti": [63, 64, 65], "deceler": 64, "statu": 65, "simul": [66, 67], "antenna": 67, "type": 68, "unit": 69, "util": [70, 71, 72, 73, 74, 75, 76], "array_util": 71, "data_util": 72, "device_util": 73, "math_util": 74, "quantity_util": 75, "simulator_util": 76, "featur": 77, "instal": 77, "usag": 77, "necst": 78, "config": 79, "The": 79, "file": 79, "locat": 79, "how": [79, 80], "defin": 79, "attach": 79, "us": 79, "specifi": 80, "name": 80, "model": 80, "add": 80, "i": 80, "o": 80, "class": 80, "definit": 80, "abstract": 80, "specif": 80, "implement": 80, "tutori": 81, "develop": 81}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"neclib": [[0, "module-neclib"], [77, "neclib"]], "Aliases": [[0, "aliases"], [1, "aliases"], [2, "aliases"], [3, "aliases"], [4, "aliases"], [5, "aliases"], [7, "aliases"], [8, "aliases"], [9, "aliases"], [12, "aliases"], [13, "aliases"], [14, "aliases"], [15, "aliases"], [16, "aliases"], [17, "aliases"], [18, "aliases"], [19, "aliases"], [20, "aliases"], [21, "aliases"], [22, "aliases"], [23, "aliases"], [24, "aliases"], [25, "aliases"], [26, "aliases"], [27, "aliases"], [28, "aliases"], [29, "aliases"], [30, "aliases"], [31, "aliases"], [32, "aliases"], [33, "aliases"], [34, "aliases"], [35, "aliases"], [36, "aliases"], [37, "aliases"], [38, "aliases"], [39, "aliases"], [40, "aliases"], [41, "aliases"], [42, "aliases"], [43, "aliases"], [44, "aliases"], [45, "aliases"], [46, "aliases"], [47, "aliases"], [49, "aliases"], [50, "aliases"], [51, "aliases"], [52, "aliases"], [53, "aliases"], [54, "aliases"], [55, "aliases"], [56, "aliases"], [57, "aliases"], [58, "aliases"], [59, "aliases"], [60, "aliases"], [61, "aliases"], [63, "aliases"], [66, "aliases"], [67, "aliases"], [70, "aliases"], [72, "aliases"], [74, "aliases"]], "Subpackages": [[0, "subpackages"], [11, "subpackages"], [51, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [15, "submodules"], [18, "submodules"], [22, "submodules"], [25, "submodules"], [28, "submodules"], [32, "submodules"], [36, "submodules"], [39, "submodules"], [42, "submodules"], [45, "submodules"], [49, "submodules"], [51, "submodules"], [53, "submodules"], [57, "submodules"], [63, "submodules"], [66, "submodules"], [70, "submodules"]], "neclib.configuration": [[1, "module-neclib.configuration"]], "neclib.controllers": [[2, "module-neclib.controllers"]], "neclib.controllers.antenna_pid": [[3, "module-neclib.controllers.antenna_pid"]], "Notes": [[3, null], [26, null], [54, null], [55, null], [59, null], [62, null], [66, null], [67, null], [67, null], [69, null], [74, null], [75, null], [75, null], [75, null]], "neclib.coordinates": [[4, "module-neclib.coordinates"]], "neclib.coordinates.convert": [[5, "module-neclib.coordinates.convert"]], "neclib.coordinates.frame": [[6, "module-neclib.coordinates.frame"]], "neclib.coordinates.optimize": [[7, "module-neclib.coordinates.optimize"]], "neclib.coordinates.path_finder": [[8, "module-neclib.coordinates.path_finder"]], "neclib.data": [[9, "module-neclib.data"]], "neclib.data.resize": [[10, "module-neclib.data.resize"]], "Parameter": [[10, "parameter"]], "neclib.devices": [[11, "module-neclib.devices"], [80, "neclib-devices"]], "neclib.devices.attenuator": [[12, "module-neclib.devices.attenuator"]], "neclib.devices.attenuator.attenuator_base": [[13, "module-neclib.devices.attenuator.attenuator_base"]], "neclib.devices.attenuator.rhio10": [[14, "module-neclib.devices.attenuator.rhio10"]], "neclib.devices.bias_reader": [[15, "module-neclib.devices.bias_reader"]], "neclib.devices.bias_reader.bias_reader_base": [[16, "module-neclib.devices.bias_reader.bias_reader_base"]], "neclib.devices.bias_reader.cpz3177": [[17, "module-neclib.devices.bias_reader.cpz3177"]], "neclib.devices.bias_setter": [[18, "module-neclib.devices.bias_setter"]], "neclib.devices.bias_setter.bias_setter_base": [[19, "module-neclib.devices.bias_setter.bias_setter_base"]], "neclib.devices.bias_setter.cpz340816": [[20, "module-neclib.devices.bias_setter.cpz340816"]], "neclib.devices.device_base": [[21, "module-neclib.devices.device_base"]], "neclib.devices.encoder": [[22, "module-neclib.devices.encoder"]], "neclib.devices.encoder.encoder_base": [[23, "module-neclib.devices.encoder.encoder_base"]], "neclib.devices.encoder.nd287": [[24, "module-neclib.devices.encoder.nd287"]], "neclib.devices.motor": [[25, "module-neclib.devices.motor"]], "neclib.devices.motor.cpz7415v": [[26, "module-neclib.devices.motor.cpz7415v"]], "neclib.devices.motor.motor_base": [[27, "module-neclib.devices.motor.motor_base"]], "neclib.devices.power_meter": [[28, "module-neclib.devices.power_meter"]], "neclib.devices.power_meter.ma24126a": [[29, "module-neclib.devices.power_meter.ma24126a"]], "neclib.devices.power_meter.power_meter_base": [[30, "module-neclib.devices.power_meter.power_meter_base"]], "neclib.devices.selector": [[31, "module-neclib.devices.selector"]], "neclib.devices.signal_generator": [[32, "module-neclib.devices.signal_generator"]], "neclib.devices.signal_generator.fsw0010": [[33, "module-neclib.devices.signal_generator.fsw0010"]], "neclib.devices.signal_generator.fsw0020": [[34, "module-neclib.devices.signal_generator.fsw0020"]], "neclib.devices.signal_generator.signal_generator_base": [[35, "module-neclib.devices.signal_generator.signal_generator_base"]], "neclib.devices.spectrometer": [[36, "module-neclib.devices.spectrometer"]], "neclib.devices.spectrometer.spectrometer_base": [[37, "module-neclib.devices.spectrometer.spectrometer_base"]], "neclib.devices.spectrometer.xffts": [[38, "module-neclib.devices.spectrometer.xffts"]], "neclib.devices.thermometer": [[39, "module-neclib.devices.thermometer"]], "neclib.devices.thermometer.model_218": [[40, "module-neclib.devices.thermometer.model_218"]], "neclib.devices.thermometer.thermometer_base": [[41, "module-neclib.devices.thermometer.thermometer_base"]], "neclib.devices.vacuum_gauge": [[42, "module-neclib.devices.vacuum_gauge"]], "neclib.devices.vacuum_gauge.tpg261": [[43, "module-neclib.devices.vacuum_gauge.tpg261"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base": [[44, "module-neclib.devices.vacuum_gauge.vacuum_gauge_base"]], "neclib.devices.weather_station": [[45, "module-neclib.devices.weather_station"]], "neclib.devices.weather_station.tr73u": [[46, "module-neclib.devices.weather_station.tr73u"]], "neclib.devices.weather_station.weather_station_base": [[47, "module-neclib.devices.weather_station.weather_station_base"]], "neclib.exceptions": [[48, "module-neclib.exceptions"]], "neclib.interfaces": [[49, "module-neclib.interfaces"]], "neclib.interfaces.console_logger": [[50, "module-neclib.interfaces.console_logger"]], "neclib.parameters": [[51, "module-neclib.parameters"]], "neclib.parameters.obsparam": [[52, "module-neclib.parameters.obsparam"]], "neclib.parameters.parser": [[53, "module-neclib.parameters.parser"]], "neclib.parameters.parser.obsparam_data": [[54, "module-neclib.parameters.parser.obsparam_data"]], "neclib.parameters.parser.pointing_error_data": [[55, "module-neclib.parameters.parser.pointing_error_data"]], "neclib.parameters.pointing_error": [[56, "module-neclib.parameters.pointing_error"]], "neclib.recorders": [[57, "module-neclib.recorders"]], "neclib.recorders.console_log_writer": [[58, "module-neclib.recorders.console_log_writer"]], "neclib.recorders.file_writer": [[59, "module-neclib.recorders.file_writer"]], "neclib.recorders.necstdb_writer": [[60, "module-neclib.recorders.necstdb_writer"]], "neclib.recorders.recorder": [[61, "module-neclib.recorders.recorder"]], "neclib.recorders.writer_base": [[62, "module-neclib.recorders.writer_base"]], "neclib.safety": [[63, "module-neclib.safety"]], "neclib.safety.decelerate": [[64, "module-neclib.safety.decelerate"]], "neclib.safety.status": [[65, "module-neclib.safety.status"]], "neclib.simulators": [[66, "module-neclib.simulators"]], "neclib.simulators.antenna": [[67, "module-neclib.simulators.antenna"]], "neclib.typing": [[68, "module-neclib.typing"]], "neclib.units": [[69, "module-neclib.units"]], "neclib.utils": [[70, "module-neclib.utils"]], "neclib.utils.array_utils": [[71, "module-neclib.utils.array_utils"]], "neclib.utils.data_utils": [[72, "module-neclib.utils.data_utils"]], "neclib.utils.device_utils": [[73, "module-neclib.utils.device_utils"]], "neclib.utils.math_utils": [[74, "module-neclib.utils.math_utils"]], "neclib.utils.quantity_utils": [[75, "module-neclib.utils.quantity_utils"]], "neclib.utils.simulator_utils": [[76, "module-neclib.utils.simulator_utils"]], "Features": [[77, "features"]], "Installation": [[77, "installation"]], "Usage": [[77, "usage"]], "NECST Parameters": [[78, "necst-parameters"]], "neclib.config": [[79, "neclib-config"]], "The config file": [[79, "the-config-file"]], "Location of the file": [[79, "location-of-the-file"]], "How to define parameters": [[79, "how-to-define-parameters"]], "Attach parsers": [[79, "attach-parsers"]], "How to use the parameters": [[79, "how-to-use-the-parameters"]], "How to specify the devices": [[80, "how-to-specify-the-devices"]], "Device name": [[80, "device-name"]], "Device model": [[80, "device-model"]], "How to add device I/O class": [[80, "how-to-add-device-i-o-class"]], "Definition of abstract device": [[80, "definition-of-abstract-device"]], "Device-specific implementation": [[80, "device-specific-implementation"]], "Tutorials for developers": [[81, "tutorials-for-developers"]]}, "indexentries": {"envvarname (class in neclib)": [[0, "neclib.EnvVarName"]], "domain_id (envvarname attribute)": [[0, "neclib.EnvVarName.domain_id"]], "module": [[0, "module-neclib"], [1, "module-neclib.configuration"], [2, "module-neclib.controllers"], [3, "module-neclib.controllers.antenna_pid"], [4, "module-neclib.coordinates"], [5, "module-neclib.coordinates.convert"], [6, "module-neclib.coordinates.frame"], [7, "module-neclib.coordinates.optimize"], [8, "module-neclib.coordinates.path_finder"], [9, "module-neclib.data"], [10, "module-neclib.data.resize"], [11, "module-neclib.devices"], [12, "module-neclib.devices.attenuator"], [13, "module-neclib.devices.attenuator.attenuator_base"], [14, "module-neclib.devices.attenuator.rhio10"], [15, "module-neclib.devices.bias_reader"], [16, "module-neclib.devices.bias_reader.bias_reader_base"], [17, "module-neclib.devices.bias_reader.cpz3177"], [18, "module-neclib.devices.bias_setter"], [19, "module-neclib.devices.bias_setter.bias_setter_base"], [20, "module-neclib.devices.bias_setter.cpz340816"], [21, "module-neclib.devices.device_base"], [22, "module-neclib.devices.encoder"], [23, "module-neclib.devices.encoder.encoder_base"], [24, "module-neclib.devices.encoder.nd287"], [25, "module-neclib.devices.motor"], [26, "module-neclib.devices.motor.cpz7415v"], [27, "module-neclib.devices.motor.motor_base"], [28, "module-neclib.devices.power_meter"], [29, "module-neclib.devices.power_meter.ma24126a"], [30, "module-neclib.devices.power_meter.power_meter_base"], [31, "module-neclib.devices.selector"], [32, "module-neclib.devices.signal_generator"], [33, "module-neclib.devices.signal_generator.fsw0010"], [34, "module-neclib.devices.signal_generator.fsw0020"], [35, "module-neclib.devices.signal_generator.signal_generator_base"], [36, "module-neclib.devices.spectrometer"], [37, "module-neclib.devices.spectrometer.spectrometer_base"], [38, "module-neclib.devices.spectrometer.xffts"], [39, "module-neclib.devices.thermometer"], [40, "module-neclib.devices.thermometer.model_218"], [41, "module-neclib.devices.thermometer.thermometer_base"], [42, "module-neclib.devices.vacuum_gauge"], [43, "module-neclib.devices.vacuum_gauge.tpg261"], [44, "module-neclib.devices.vacuum_gauge.vacuum_gauge_base"], [45, "module-neclib.devices.weather_station"], [46, "module-neclib.devices.weather_station.tr73u"], [47, "module-neclib.devices.weather_station.weather_station_base"], [48, "module-neclib.exceptions"], [49, "module-neclib.interfaces"], [50, "module-neclib.interfaces.console_logger"], [51, "module-neclib.parameters"], [52, "module-neclib.parameters.obsparam"], [53, "module-neclib.parameters.parser"], [54, "module-neclib.parameters.parser.obsparam_data"], [55, "module-neclib.parameters.parser.pointing_error_data"], [56, "module-neclib.parameters.pointing_error"], [57, "module-neclib.recorders"], [58, "module-neclib.recorders.console_log_writer"], [59, "module-neclib.recorders.file_writer"], [60, "module-neclib.recorders.necstdb_writer"], [61, "module-neclib.recorders.recorder"], [62, "module-neclib.recorders.writer_base"], [63, "module-neclib.safety"], [64, "module-neclib.safety.decelerate"], [65, "module-neclib.safety.status"], [66, "module-neclib.simulators"], [67, "module-neclib.simulators.antenna"], [68, "module-neclib.typing"], [69, "module-neclib.units"], [70, "module-neclib.utils"], [71, "module-neclib.utils.array_utils"], [72, "module-neclib.utils.data_utils"], [73, "module-neclib.utils.device_utils"], [74, "module-neclib.utils.math_utils"], [75, "module-neclib.utils.quantity_utils"], [76, "module-neclib.utils.simulator_utils"]], "neclib": [[0, "module-neclib"]], "necst_root (envvarname attribute)": [[0, "neclib.EnvVarName.necst_root"]], "record_root (envvarname attribute)": [[0, "neclib.EnvVarName.record_root"]], "ros2_ws (envvarname attribute)": [[0, "neclib.EnvVarName.ros2_ws"]], "configure() (in module neclib.configuration)": [[1, "neclib.configuration.configure"]], "neclib.configuration": [[1, "module-neclib.configuration"]], "neclib.controllers": [[2, "module-neclib.controllers"]], "angle_unit (pidcontroller attribute)": [[3, "neclib.controllers.antenna_pid.PIDController.ANGLE_UNIT"]], "pidcontroller (class in neclib.controllers.antenna_pid)": [[3, "neclib.controllers.antenna_pid.PIDController"]], "dt (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.dt"]], "error_derivative (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.error_derivative"]], "error_integral (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.error_integral"]], "get_speed() (pidcontroller method)": [[3, "neclib.controllers.antenna_pid.PIDController.get_speed"]], "neclib.controllers.antenna_pid": [[3, "module-neclib.controllers.antenna_pid"]], "params() (pidcontroller method)": [[3, "neclib.controllers.antenna_pid.PIDController.params"]], "neclib.coordinates": [[4, "module-neclib.coordinates"]], "coordcalculator (class in neclib.coordinates.convert)": [[5, "neclib.coordinates.convert.CoordCalculator"]], "get_altaz() (coordcalculator method)": [[5, "neclib.coordinates.convert.CoordCalculator.get_altaz"]], "get_altaz_by_name() (coordcalculator method)": [[5, "neclib.coordinates.convert.CoordCalculator.get_altaz_by_name"]], "neclib.coordinates.convert": [[5, "module-neclib.coordinates.convert"]], "obswl (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.obswl"]], "pressure (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.pressure"]], "relative_humidity (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.relative_humidity"]], "temperature (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.temperature"]], "describe_frame() (in module neclib.coordinates.frame)": [[6, "neclib.coordinates.frame.describe_frame"]], "neclib.coordinates.frame": [[6, "module-neclib.coordinates.frame"]], "parse_frame() (in module neclib.coordinates.frame)": [[6, "neclib.coordinates.frame.parse_frame"]], "drivelimitchecker (class in neclib.coordinates.optimize)": [[7, "neclib.coordinates.optimize.DriveLimitChecker"]], "neclib.coordinates.optimize": [[7, "module-neclib.coordinates.optimize"]], "optimize() (drivelimitchecker method)": [[7, "neclib.coordinates.optimize.DriveLimitChecker.optimize"]], "pathfinder (class in neclib.coordinates.path_finder)": [[8, "neclib.coordinates.path_finder.PathFinder"]], "linear() (pathfinder method)": [[8, "neclib.coordinates.path_finder.PathFinder.linear"]], "neclib.coordinates.path_finder": [[8, "module-neclib.coordinates.path_finder"]], "standby_position() (in module neclib.coordinates.path_finder)": [[8, "neclib.coordinates.path_finder.standby_position"]], "neclib.data": [[9, "module-neclib.data"]], "resize (class in neclib.data.resize)": [[10, "neclib.data.resize.Resize"]], "get() (resize method)": [[10, "neclib.data.resize.Resize.get"]], "neclib.data.resize": [[10, "module-neclib.data.resize"]], "push() (resize method)": [[10, "neclib.data.resize.Resize.push"]], "implementations (in module neclib.devices)": [[11, "neclib.devices.implementations"]], "neclib.devices": [[11, "module-neclib.devices"]], "parsed (in module neclib.devices)": [[11, "neclib.devices.parsed"]], "neclib.devices.attenuator": [[12, "module-neclib.devices.attenuator"]], "attenuator (class in neclib.devices.attenuator.attenuator_base)": [[13, "neclib.devices.attenuator.attenuator_base.Attenuator"]], "model (attenuator attribute)": [[13, "neclib.devices.attenuator.attenuator_base.Attenuator.Model"]], "conf (attenuator attribute)": [[13, "neclib.devices.attenuator.attenuator_base.Attenuator.conf"]], "get_level() (attenuator method)": [[13, "neclib.devices.attenuator.attenuator_base.Attenuator.get_level"]], "neclib.devices.attenuator.attenuator_base": [[13, "module-neclib.devices.attenuator.attenuator_base"]], "set_level() (attenuator method)": [[13, "neclib.devices.attenuator.attenuator_base.Attenuator.set_level"]], "identifier (rhio10 attribute)": [[14, "neclib.devices.attenuator.rhio10.RHIO10.Identifier"]], "manufacturer (rhio10 attribute)": [[14, "neclib.devices.attenuator.rhio10.RHIO10.Manufacturer"]], "model (rhio10 attribute)": [[14, "neclib.devices.attenuator.rhio10.RHIO10.Model"]], "rhio10 (class in neclib.devices.attenuator.rhio10)": [[14, "neclib.devices.attenuator.rhio10.RHIO10"]], "finalize() (rhio10 method)": [[14, "neclib.devices.attenuator.rhio10.RHIO10.finalize"]], "get_level() (rhio10 method)": [[14, "neclib.devices.attenuator.rhio10.RHIO10.get_level"]], "neclib.devices.attenuator.rhio10": [[14, "module-neclib.devices.attenuator.rhio10"]], "set_level() (rhio10 method)": [[14, "neclib.devices.attenuator.rhio10.RHIO10.set_level"]], "neclib.devices.bias_reader": [[15, "module-neclib.devices.bias_reader"]], "biasreader (class in neclib.devices.bias_reader.bias_reader_base)": [[16, "neclib.devices.bias_reader.bias_reader_base.BiasReader"]], "manufacturer (biasreader attribute)": [[16, "neclib.devices.bias_reader.bias_reader_base.BiasReader.Manufacturer"]], "model (biasreader attribute)": [[16, "neclib.devices.bias_reader.bias_reader_base.BiasReader.Model"]], "finalize() (biasreader method)": [[16, "neclib.devices.bias_reader.bias_reader_base.BiasReader.finalize"]], "get_bias_current() (biasreader method)": [[16, "neclib.devices.bias_reader.bias_reader_base.BiasReader.get_bias_current"]], "get_bias_voltage() (biasreader method)": [[16, "neclib.devices.bias_reader.bias_reader_base.BiasReader.get_bias_voltage"]], "neclib.devices.bias_reader.bias_reader_base": [[16, "module-neclib.devices.bias_reader.bias_reader_base"]], "cpz3177 (class in neclib.devices.bias_reader.cpz3177)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177"]], "identifier (cpz3177 attribute)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.Identifier"]], "manufacturer (cpz3177 attribute)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.Manufacturer"]], "model (cpz3177 attribute)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.Model"]], "conf (cpz3177 attribute)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.conf"]], "finalize() (cpz3177 method)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.finalize"]], "get_bias_current() (cpz3177 method)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.get_bias_current"]], "get_bias_voltage() (cpz3177 method)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.get_bias_voltage"]], "get_data() (cpz3177 method)": [[17, "neclib.devices.bias_reader.cpz3177.CPZ3177.get_data"]], "neclib.devices.bias_reader.cpz3177": [[17, "module-neclib.devices.bias_reader.cpz3177"]], "neclib.devices.bias_setter": [[18, "module-neclib.devices.bias_setter"]], "biassetter (class in neclib.devices.bias_setter.bias_setter_base)": [[19, "neclib.devices.bias_setter.bias_setter_base.BiasSetter"]], "manufacturer (biassetter attribute)": [[19, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.Manufacturer"]], "model (biassetter attribute)": [[19, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.Model"]], "finalize() (biassetter method)": [[19, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.finalize"]], "neclib.devices.bias_setter.bias_setter_base": [[19, "module-neclib.devices.bias_setter.bias_setter_base"]], "output_voltage() (biassetter method)": [[19, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.output_voltage"]], "set_voltage() (biassetter method)": [[19, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.set_voltage"]], "cpz340816 (class in neclib.devices.bias_setter.cpz340816)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816"]], "identifier (cpz340816 attribute)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.Identifier"]], "manufacturer (cpz340816 attribute)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.Manufacturer"]], "model (cpz340816 attribute)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.Model"]], "conf (cpz340816 attribute)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.conf"]], "finalize() (cpz340816 method)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.finalize"]], "neclib.devices.bias_setter.cpz340816": [[20, "module-neclib.devices.bias_setter.cpz340816"]], "output_voltage() (cpz340816 method)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.output_voltage"]], "set_voltage() (cpz340816 method)": [[20, "neclib.devices.bias_setter.cpz340816.CPZ340816.set_voltage"]], "config (devicebase attribute)": [[21, "neclib.devices.device_base.DeviceBase.Config"]], "devicebase (class in neclib.devices.device_base)": [[21, "neclib.devices.device_base.DeviceBase"]], "identifier (devicebase attribute)": [[21, "neclib.devices.device_base.DeviceBase.Identifier"]], "manufacturer (devicebase attribute)": [[21, "neclib.devices.device_base.DeviceBase.Manufacturer"]], "model (devicebase attribute)": [[21, "neclib.devices.device_base.DeviceBase.Model"]], "conf (devicebase attribute)": [[21, "neclib.devices.device_base.DeviceBase.conf"]], "finalize() (devicebase method)": [[21, "neclib.devices.device_base.DeviceBase.finalize"]], "neclib.devices.device_base": [[21, "module-neclib.devices.device_base"]], "neclib.devices.encoder": [[22, "module-neclib.devices.encoder"]], "encoder (class in neclib.devices.encoder.encoder_base)": [[23, "neclib.devices.encoder.encoder_base.Encoder"]], "model (encoder attribute)": [[23, "neclib.devices.encoder.encoder_base.Encoder.Model"]], "conf (encoder attribute)": [[23, "neclib.devices.encoder.encoder_base.Encoder.conf"]], "finalize() (encoder method)": [[23, "neclib.devices.encoder.encoder_base.Encoder.finalize"]], "get_reading() (encoder method)": [[23, "neclib.devices.encoder.encoder_base.Encoder.get_reading"]], "neclib.devices.encoder.encoder_base": [[23, "module-neclib.devices.encoder.encoder_base"]], "identifier (nd287 attribute)": [[24, "neclib.devices.encoder.nd287.ND287.Identifier"]], "manufacturer (nd287 attribute)": [[24, "neclib.devices.encoder.nd287.ND287.Manufacturer"]], "model (nd287 attribute)": [[24, "neclib.devices.encoder.nd287.ND287.Model"]], "nd287 (class in neclib.devices.encoder.nd287)": [[24, "neclib.devices.encoder.nd287.ND287"]], "conf (nd287 attribute)": [[24, "neclib.devices.encoder.nd287.ND287.conf"]], "finalize() (nd287 method)": [[24, "neclib.devices.encoder.nd287.ND287.finalize"]], "get_reading() (nd287 method)": [[24, "neclib.devices.encoder.nd287.ND287.get_reading"]], "neclib.devices.encoder.nd287": [[24, "module-neclib.devices.encoder.nd287"]], "neclib.devices.motor": [[25, "module-neclib.devices.motor"]], "cpz7415v (class in neclib.devices.motor.cpz7415v)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V"]], "identifier (cpz7415v attribute)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.Identifier"]], "manufacturer (cpz7415v attribute)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.Manufacturer"]], "model (cpz7415v attribute)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.Model"]], "current_motion (cpz7415v property)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.current_motion"]], "finalize() (cpz7415v method)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.finalize"]], "get_speed() (cpz7415v method)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.get_speed"]], "get_step() (cpz7415v method)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.get_step"]], "neclib.devices.motor.cpz7415v": [[26, "module-neclib.devices.motor.cpz7415v"]], "set_speed() (cpz7415v method)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.set_speed"]], "set_step() (cpz7415v method)": [[26, "neclib.devices.motor.cpz7415v.CPZ7415V.set_step"]], "manufacturer (motor attribute)": [[27, "neclib.devices.motor.motor_base.Motor.Manufacturer"]], "model (motor attribute)": [[27, "neclib.devices.motor.motor_base.Motor.Model"]], "motor (class in neclib.devices.motor.motor_base)": [[27, "neclib.devices.motor.motor_base.Motor"]], "finalize() (motor method)": [[27, "neclib.devices.motor.motor_base.Motor.finalize"]], "get_speed() (motor method)": [[27, "neclib.devices.motor.motor_base.Motor.get_speed"]], "get_step() (motor method)": [[27, "neclib.devices.motor.motor_base.Motor.get_step"]], "neclib.devices.motor.motor_base": [[27, "module-neclib.devices.motor.motor_base"]], "set_speed() (motor method)": [[27, "neclib.devices.motor.motor_base.Motor.set_speed"]], "set_step() (motor method)": [[27, "neclib.devices.motor.motor_base.Motor.set_step"]], "neclib.devices.power_meter": [[28, "module-neclib.devices.power_meter"]], "identifier (ma24126a attribute)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.Identifier"]], "ma24126a (class in neclib.devices.power_meter.ma24126a)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A"]], "manufacturer (ma24126a attribute)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.Manufacturer"]], "model (ma24126a attribute)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.Model"]], "conf (ma24126a attribute)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.conf"]], "finalize() (ma24126a method)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.finalize"]], "get_power() (ma24126a method)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.get_power"]], "neclib.devices.power_meter.ma24126a": [[29, "module-neclib.devices.power_meter.ma24126a"]], "zero_set() (ma24126a method)": [[29, "neclib.devices.power_meter.ma24126a.MA24126A.zero_set"]], "model (powermeter attribute)": [[30, "neclib.devices.power_meter.power_meter_base.PowerMeter.Model"]], "powermeter (class in neclib.devices.power_meter.power_meter_base)": [[30, "neclib.devices.power_meter.power_meter_base.PowerMeter"]], "conf (powermeter attribute)": [[30, "neclib.devices.power_meter.power_meter_base.PowerMeter.conf"]], "get_power() (powermeter method)": [[30, "neclib.devices.power_meter.power_meter_base.PowerMeter.get_power"]], "neclib.devices.power_meter.power_meter_base": [[30, "module-neclib.devices.power_meter.power_meter_base"]], "list_implementations() (in module neclib.devices.selector)": [[31, "neclib.devices.selector.list_implementations"]], "neclib.devices.selector": [[31, "module-neclib.devices.selector"]], "parse_device_configuration() (in module neclib.devices.selector)": [[31, "neclib.devices.selector.parse_device_configuration"]], "neclib.devices.signal_generator": [[32, "module-neclib.devices.signal_generator"]], "fsw0010 (class in neclib.devices.signal_generator.fsw0010)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010"]], "identifier (fsw0010 attribute)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.Identifier"]], "manufacturer (fsw0010 attribute)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.Manufacturer"]], "model (fsw0010 attribute)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.Model"]], "finalize() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.finalize"]], "get_freq() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.get_freq"]], "get_output_status() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.get_output_status"]], "get_power() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.get_power"]], "neclib.devices.signal_generator.fsw0010": [[33, "module-neclib.devices.signal_generator.fsw0010"]], "set_freq() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.set_freq"]], "set_power() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.set_power"]], "start_output() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.start_output"]], "stop_output() (fsw0010 method)": [[33, "neclib.devices.signal_generator.fsw0010.FSW0010.stop_output"]], "fsw0020 (class in neclib.devices.signal_generator.fsw0020)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020"]], "identifier (fsw0020 attribute)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.Identifier"]], "manufacturer (fsw0020 attribute)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.Manufacturer"]], "model (fsw0020 attribute)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.Model"]], "finalize() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.finalize"]], "get_freq() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.get_freq"]], "get_output_status() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.get_output_status"]], "get_power() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.get_power"]], "neclib.devices.signal_generator.fsw0020": [[34, "module-neclib.devices.signal_generator.fsw0020"]], "set_freq() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.set_freq"]], "set_power() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.set_power"]], "start_output() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.start_output"]], "stop_output() (fsw0020 method)": [[34, "neclib.devices.signal_generator.fsw0020.FSW0020.stop_output"]], "manufacturer (signalgenerator attribute)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.Manufacturer"]], "model (signalgenerator attribute)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.Model"]], "signalgenerator (class in neclib.devices.signal_generator.signal_generator_base)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator"]], "finalize() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.finalize"]], "get_freq() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_freq"]], "get_output_status() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_output_status"]], "get_power() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_power"]], "neclib.devices.signal_generator.signal_generator_base": [[35, "module-neclib.devices.signal_generator.signal_generator_base"]], "set_freq() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.set_freq"]], "set_power() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.set_power"]], "start_output() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.start_output"]], "stop_output() (signalgenerator method)": [[35, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.stop_output"]], "neclib.devices.spectrometer": [[36, "module-neclib.devices.spectrometer"]], "model (spectrometer attribute)": [[37, "neclib.devices.spectrometer.spectrometer_base.Spectrometer.Model"]], "spectrometer (class in neclib.devices.spectrometer.spectrometer_base)": [[37, "neclib.devices.spectrometer.spectrometer_base.Spectrometer"]], "conf (spectrometer attribute)": [[37, "neclib.devices.spectrometer.spectrometer_base.Spectrometer.conf"]], "get_spectra() (spectrometer method)": [[37, "neclib.devices.spectrometer.spectrometer_base.Spectrometer.get_spectra"]], "neclib.devices.spectrometer.spectrometer_base": [[37, "module-neclib.devices.spectrometer.spectrometer_base"]], "identifier (xffts attribute)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.Identifier"]], "manufacturer (xffts attribute)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.Manufacturer"]], "model (xffts attribute)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.Model"]], "xffts (class in neclib.devices.spectrometer.xffts)": [[38, "neclib.devices.spectrometer.xffts.XFFTS"]], "finalize() (xffts method)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.finalize"]], "get_spectra() (xffts method)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.get_spectra"]], "initialize() (xffts method)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.initialize"]], "mute_stderr() (in module neclib.devices.spectrometer.xffts)": [[38, "neclib.devices.spectrometer.xffts.mute_stderr"]], "neclib.devices.spectrometer.xffts": [[38, "module-neclib.devices.spectrometer.xffts"]], "start() (xffts method)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.start"]], "stop() (xffts method)": [[38, "neclib.devices.spectrometer.xffts.XFFTS.stop"]], "neclib.devices.thermometer": [[39, "module-neclib.devices.thermometer"]], "identifier (model218 attribute)": [[40, "neclib.devices.thermometer.model_218.Model218.Identifier"]], "manufacturer (model218 attribute)": [[40, "neclib.devices.thermometer.model_218.Model218.Manufacturer"]], "model (model218 attribute)": [[40, "neclib.devices.thermometer.model_218.Model218.Model"]], "model218 (class in neclib.devices.thermometer.model_218)": [[40, "neclib.devices.thermometer.model_218.Model218"]], "finalize() (model218 method)": [[40, "neclib.devices.thermometer.model_218.Model218.finalize"]], "get_temp() (model218 method)": [[40, "neclib.devices.thermometer.model_218.Model218.get_temp"]], "neclib.devices.thermometer.model_218": [[40, "module-neclib.devices.thermometer.model_218"]], "manufacturer (thermometer attribute)": [[41, "neclib.devices.thermometer.thermometer_base.Thermometer.Manufacturer"]], "model (thermometer attribute)": [[41, "neclib.devices.thermometer.thermometer_base.Thermometer.Model"]], "thermometer (class in neclib.devices.thermometer.thermometer_base)": [[41, "neclib.devices.thermometer.thermometer_base.Thermometer"]], "finalize() (thermometer method)": [[41, "neclib.devices.thermometer.thermometer_base.Thermometer.finalize"]], "get_temp() (thermometer method)": [[41, "neclib.devices.thermometer.thermometer_base.Thermometer.get_temp"]], "neclib.devices.thermometer.thermometer_base": [[41, "module-neclib.devices.thermometer.thermometer_base"]], "neclib.devices.vacuum_gauge": [[42, "module-neclib.devices.vacuum_gauge"]], "identifier (tpg261 attribute)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261.Identifier"]], "manufacturer (tpg261 attribute)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261.Manufacturer"]], "model (tpg261 attribute)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261.Model"]], "tpg261 (class in neclib.devices.vacuum_gauge.tpg261)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261"]], "conf (tpg261 attribute)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261.conf"]], "finalize() (tpg261 method)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261.finalize"]], "get_pressure() (tpg261 method)": [[43, "neclib.devices.vacuum_gauge.tpg261.TPG261.get_pressure"]], "neclib.devices.vacuum_gauge.tpg261": [[43, "module-neclib.devices.vacuum_gauge.tpg261"]], "model (vacuumgauge attribute)": [[44, "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge.Model"]], "vacuumgauge (class in neclib.devices.vacuum_gauge.vacuum_gauge_base)": [[44, "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge"]], "conf (vacuumgauge attribute)": [[44, "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge.conf"]], "get_pressure() (vacuumgauge method)": [[44, "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge.get_pressure"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base": [[44, "module-neclib.devices.vacuum_gauge.vacuum_gauge_base"]], "neclib.devices.weather_station": [[45, "module-neclib.devices.weather_station"]], "identifier (tr73u attribute)": [[46, "neclib.devices.weather_station.tr73u.TR73U.Identifier"]], "manufacturer (tr73u attribute)": [[46, "neclib.devices.weather_station.tr73u.TR73U.Manufacturer"]], "model (tr73u attribute)": [[46, "neclib.devices.weather_station.tr73u.TR73U.Model"]], "tr73u (class in neclib.devices.weather_station.tr73u)": [[46, "neclib.devices.weather_station.tr73u.TR73U"]], "finalize() (tr73u method)": [[46, "neclib.devices.weather_station.tr73u.TR73U.finalize"]], "get_humid() (tr73u method)": [[46, "neclib.devices.weather_station.tr73u.TR73U.get_humid"]], "get_press() (tr73u method)": [[46, "neclib.devices.weather_station.tr73u.TR73U.get_press"]], "get_temp() (tr73u method)": [[46, "neclib.devices.weather_station.tr73u.TR73U.get_temp"]], "neclib.devices.weather_station.tr73u": [[46, "module-neclib.devices.weather_station.tr73u"]], "manufacturer (weatherstation attribute)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation.Manufacturer"]], "model (weatherstation attribute)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation.Model"]], "weatherstation (class in neclib.devices.weather_station.weather_station_base)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation"]], "finalize() (weatherstation method)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation.finalize"]], "get_humid() (weatherstation method)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_humid"]], "get_press() (weatherstation method)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_press"]], "get_temp() (weatherstation method)": [[47, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_temp"]], "neclib.devices.weather_station.weather_station_base": [[47, "module-neclib.devices.weather_station.weather_station_base"]], "necstauthorityerror": [[48, "neclib.exceptions.NECSTAuthorityError"]], "necstconfigurationerror": [[48, "neclib.exceptions.NECSTConfigurationError"]], "necsttimeouterror": [[48, "neclib.exceptions.NECSTTimeoutError"]], "neclib.exceptions": [[48, "module-neclib.exceptions"]], "neclib.interfaces": [[49, "module-neclib.interfaces"]], "colorprefix (colorizelevelnameformatter attribute)": [[50, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter.ColorPrefix"]], "colorizelevelnameformatter (class in neclib.interfaces.console_logger)": [[50, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter"]], "consolelogger (class in neclib.interfaces.console_logger)": [[50, "neclib.interfaces.console_logger.ConsoleLogger"]], "observe_level (consolelogger attribute)": [[50, "neclib.interfaces.console_logger.ConsoleLogger.OBSERVE_level"]], "format() (colorizelevelnameformatter method)": [[50, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter.format"]], "get_logger() (in module neclib.interfaces.console_logger)": [[50, "neclib.interfaces.console_logger.get_logger"]], "neclib.interfaces.console_logger": [[50, "module-neclib.interfaces.console_logger"]], "obslog() (consolelogger method)": [[50, "neclib.interfaces.console_logger.ConsoleLogger.obslog"]], "neclib.parameters": [[51, "module-neclib.parameters"]], "obsparams (class in neclib.parameters.obsparam)": [[52, "neclib.parameters.obsparam.ObsParams"]], "parametername (obsparams attribute)": [[52, "neclib.parameters.obsparam.ObsParams.ParameterName"]], "parameterunit (obsparams attribute)": [[52, "neclib.parameters.obsparam.ObsParams.ParameterUnit"]], "hot_observation_interval() (obsparams method)": [[52, "neclib.parameters.obsparam.ObsParams.hot_observation_interval"]], "interval() (in module neclib.parameters.obsparam)": [[52, "neclib.parameters.obsparam.interval"]], "neclib.parameters.obsparam": [[52, "module-neclib.parameters.obsparam"]], "off_observation_interval() (obsparams method)": [[52, "neclib.parameters.obsparam.ObsParams.off_observation_interval"]], "off_point_coord() (obsparams method)": [[52, "neclib.parameters.obsparam.ObsParams.off_point_coord"]], "off_point_coord() (in module neclib.parameters.obsparam)": [[52, "neclib.parameters.obsparam.off_point_coord"]], "neclib.parameters.parser": [[53, "module-neclib.parameters.parser"]], "obsparamdata (class in neclib.parameters.parser.obsparam_data)": [[54, "neclib.parameters.parser.obsparam_data.ObsParamData"]], "from_file() (obsparamdata class method)": [[54, "neclib.parameters.parser.obsparam_data.ObsParamData.from_file"]], "neclib.parameters.parser.obsparam_data": [[54, "module-neclib.parameters.parser.obsparam_data"]], "pointingerrordata (class in neclib.parameters.parser.pointing_error_data)": [[55, "neclib.parameters.parser.pointing_error_data.PointingErrorData"]], "from_file() (pointingerrordata class method)": [[55, "neclib.parameters.parser.pointing_error_data.PointingErrorData.from_file"]], "from_text_file() (pointingerrordata class method)": [[55, "neclib.parameters.parser.pointing_error_data.PointingErrorData.from_text_file"]], "neclib.parameters.parser.pointing_error_data": [[55, "module-neclib.parameters.parser.pointing_error_data"]], "pointingerror (class in neclib.parameters.pointing_error)": [[56, "neclib.parameters.pointing_error.PointingError"]], "apparent2refracted() (pointingerror method)": [[56, "neclib.parameters.pointing_error.PointingError.apparent2refracted"]], "neclib.parameters.pointing_error": [[56, "module-neclib.parameters.pointing_error"]], "refracted2apparent() (pointingerror method)": [[56, "neclib.parameters.pointing_error.PointingError.refracted2apparent"]], "neclib.recorders": [[57, "module-neclib.recorders"]], "consolelogwriter (class in neclib.recorders.console_log_writer)": [[58, "neclib.recorders.console_log_writer.ConsoleLogWriter"]], "append() (consolelogwriter method)": [[58, "neclib.recorders.console_log_writer.ConsoleLogWriter.append"]], "neclib.recorders.console_log_writer": [[58, "module-neclib.recorders.console_log_writer"]], "start_recording() (consolelogwriter method)": [[58, "neclib.recorders.console_log_writer.ConsoleLogWriter.start_recording"]], "stop_recording() (consolelogwriter method)": [[58, "neclib.recorders.console_log_writer.ConsoleLogWriter.stop_recording"]], "filewriter (class in neclib.recorders.file_writer)": [[59, "neclib.recorders.file_writer.FileWriter"]], "append() (filewriter method)": [[59, "neclib.recorders.file_writer.FileWriter.append"]], "neclib.recorders.file_writer": [[59, "module-neclib.recorders.file_writer"]], "start_recording() (filewriter method)": [[59, "neclib.recorders.file_writer.FileWriter.start_recording"]], "stop_recording() (filewriter method)": [[59, "neclib.recorders.file_writer.FileWriter.stop_recording"]], "dtypeconverters (necstdbwriter attribute)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.DTypeConverters"]], "livelinessduration (necstdbwriter attribute)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.LivelinessDuration"]], "necstdbwriter (class in neclib.recorders.necstdb_writer)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter"]], "warningqueuesize (necstdbwriter attribute)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.WarningQueueSize"]], "add_table() (necstdbwriter method)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.add_table"]], "append() (necstdbwriter method)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.append"]], "neclib.recorders.necstdb_writer": [[60, "module-neclib.recorders.necstdb_writer"]], "parse_str_size() (in module neclib.recorders.necstdb_writer)": [[60, "neclib.recorders.necstdb_writer.parse_str_size"]], "remove_table() (necstdbwriter method)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.remove_table"]], "start_recording() (necstdbwriter method)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.start_recording"]], "stop_recording() (necstdbwriter method)": [[60, "neclib.recorders.necstdb_writer.NECSTDBWriter.stop_recording"]], "str_to_bytes() (in module neclib.recorders.necstdb_writer)": [[60, "neclib.recorders.necstdb_writer.str_to_bytes"]], "recorder (class in neclib.recorders.recorder)": [[61, "neclib.recorders.recorder.Recorder"]], "add_writer() (recorder method)": [[61, "neclib.recorders.recorder.Recorder.add_writer"]], "append() (recorder method)": [[61, "neclib.recorders.recorder.Recorder.append"]], "drop_writer() (recorder method)": [[61, "neclib.recorders.recorder.Recorder.drop_writer"]], "neclib.recorders.recorder": [[61, "module-neclib.recorders.recorder"]], "start_recording() (recorder method)": [[61, "neclib.recorders.recorder.Recorder.start_recording"]], "stop_recording() (recorder method)": [[61, "neclib.recorders.recorder.Recorder.stop_recording"]], "writers (recorder property)": [[61, "neclib.recorders.recorder.Recorder.writers"]], "writer (class in neclib.recorders.writer_base)": [[62, "neclib.recorders.writer_base.Writer"]], "append() (writer method)": [[62, "neclib.recorders.writer_base.Writer.append"]], "neclib.recorders.writer_base": [[62, "module-neclib.recorders.writer_base"]], "start_recording() (writer method)": [[62, "neclib.recorders.writer_base.Writer.start_recording"]], "stop_recording() (writer method)": [[62, "neclib.recorders.writer_base.Writer.stop_recording"]], "neclib.safety": [[63, "module-neclib.safety"]], "decelerate (class in neclib.safety.decelerate)": [[64, "neclib.safety.decelerate.Decelerate"]], "neclib.safety.decelerate": [[64, "module-neclib.safety.decelerate"]], "status (class in neclib.safety.status)": [[65, "neclib.safety.status.Status"]], "neclib.safety.status": [[65, "module-neclib.safety.status"]], "neclib.simulators": [[66, "module-neclib.simulators"]], "angle_unit (antennaencoderemulator attribute)": [[67, "neclib.simulators.antenna.AntennaEncoderEmulator.ANGLE_UNIT"]], "antennaencoderemulator (class in neclib.simulators.antenna)": [[67, "neclib.simulators.antenna.AntennaEncoderEmulator"]], "abs_acceleration (antennaencoderemulator property)": [[67, "neclib.simulators.antenna.AntennaEncoderEmulator.abs_acceleration"]], "command() (antennaencoderemulator method)": [[67, "neclib.simulators.antenna.AntennaEncoderEmulator.command"]], "dt (antennaencoderemulator property)": [[67, "neclib.simulators.antenna.AntennaEncoderEmulator.dt"]], "neclib.simulators.antenna": [[67, "module-neclib.simulators.antenna"]], "read() (antennaencoderemulator method)": [[67, "neclib.simulators.antenna.AntennaEncoderEmulator.read"]], "angleunit (in module neclib.typing)": [[68, "neclib.typing.AngleUnit"]], "pathlike (in module neclib.typing)": [[68, "neclib.typing.PathLike"]], "neclib.typing": [[68, "module-neclib.typing"]], "neclib.units": [[69, "module-neclib.units"]], "point (in module neclib.units)": [[69, "neclib.units.point"]], "scan (in module neclib.units)": [[69, "neclib.units.scan"]], "scan_to_point_equivalency() (in module neclib.units)": [[69, "neclib.units.scan_to_point_equivalency"]], "neclib.utils": [[70, "module-neclib.utils"]], "linear_sequence() (in module neclib.utils.array_utils)": [[71, "neclib.utils.array_utils.linear_sequence"]], "neclib.utils.array_utils": [[71, "module-neclib.utils.array_utils"]], "azeldata (class in neclib.utils.data_utils)": [[72, "neclib.utils.data_utils.AzElData"]], "parameterlist (class in neclib.utils.data_utils)": [[72, "neclib.utils.data_utils.ParameterList"]], "parametermapping (class in neclib.utils.data_utils)": [[72, "neclib.utils.data_utils.ParameterMapping"]], "valuerange (class in neclib.utils.data_utils)": [[72, "neclib.utils.data_utils.ValueRange"]], "az (azeldata attribute)": [[72, "neclib.utils.data_utils.AzElData.az"]], "contain_all() (valuerange method)": [[72, "neclib.utils.data_utils.ValueRange.contain_all"]], "contain_any() (valuerange method)": [[72, "neclib.utils.data_utils.ValueRange.contain_any"]], "copy() (parameterlist method)": [[72, "neclib.utils.data_utils.ParameterList.copy"]], "copy() (parametermapping method)": [[72, "neclib.utils.data_utils.ParameterMapping.copy"]], "el (azeldata attribute)": [[72, "neclib.utils.data_utils.AzElData.el"]], "map() (parameterlist method)": [[72, "neclib.utils.data_utils.ParameterList.map"]], "map() (valuerange method)": [[72, "neclib.utils.data_utils.ValueRange.map"]], "neclib.utils.data_utils": [[72, "module-neclib.utils.data_utils"]], "new() (parameterlist class method)": [[72, "neclib.utils.data_utils.ParameterList.new"]], "push() (parameterlist method)": [[72, "neclib.utils.data_utils.ParameterList.push"]], "tocamelcase() (in module neclib.utils.data_utils)": [[72, "neclib.utils.data_utils.toCamelCase"]], "to_snake_case() (in module neclib.utils.data_utils)": [[72, "neclib.utils.data_utils.to_snake_case"]], "width (valuerange property)": [[72, "neclib.utils.data_utils.ValueRange.width"]], "busy (busy property)": [[73, "neclib.utils.device_utils.busy.busy"]], "busy (class in neclib.utils.device_utils)": [[73, "neclib.utils.device_utils.busy"]], "neclib.utils.device_utils": [[73, "module-neclib.utils.device_utils"]], "conditionchecker (class in neclib.utils.math_utils)": [[74, "neclib.utils.math_utils.ConditionChecker"]], "check() (conditionchecker method)": [[74, "neclib.utils.math_utils.ConditionChecker.check"]], "clip() (in module neclib.utils.math_utils)": [[74, "neclib.utils.math_utils.clip"]], "counter() (in module neclib.utils.math_utils)": [[74, "neclib.utils.math_utils.counter"]], "discretize() (in module neclib.utils.math_utils)": [[74, "neclib.utils.math_utils.discretize"]], "frange() (in module neclib.utils.math_utils)": [[74, "neclib.utils.math_utils.frange"]], "neclib.utils.math_utils": [[74, "module-neclib.utils.math_utils"]], "angle_conversion_factor() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.angle_conversion_factor"]], "daz2dx() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.dAz2dx"]], "dx2daz() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.dx2dAz"]], "force_data_type() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.force_data_type"]], "get_quantity() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.get_quantity"]], "neclib.utils.quantity_utils": [[75, "module-neclib.utils.quantity_utils"]], "parse_quantity() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.parse_quantity"]], "partially_convert_unit() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.partially_convert_unit"]], "quantity2builtin() (in module neclib.utils.quantity_utils)": [[75, "neclib.utils.quantity_utils.quantity2builtin"]], "neclib.utils.simulator_utils": [[76, "module-neclib.utils.simulator_utils"]], "skip_on_simulator() (in module neclib.utils.simulator_utils)": [[76, "neclib.utils.simulator_utils.skip_on_simulator"]]}})