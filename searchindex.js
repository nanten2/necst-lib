Search.setIndex({"docnames": ["_source/neclib", "_source/neclib.configuration", "_source/neclib.controllers", "_source/neclib.controllers.antenna_pid", "_source/neclib.coordinates", "_source/neclib.coordinates.convert", "_source/neclib.coordinates.frame", "_source/neclib.coordinates.optimize", "_source/neclib.coordinates.path_finder", "_source/neclib.data", "_source/neclib.data.resize", "_source/neclib.devices", "_source/neclib.devices.bias_reader", "_source/neclib.devices.bias_reader.bias_reader_base", "_source/neclib.devices.bias_reader.cpz3177", "_source/neclib.devices.bias_setter", "_source/neclib.devices.bias_setter.bias_setter_base", "_source/neclib.devices.bias_setter.cpz340816", "_source/neclib.devices.device_base", "_source/neclib.devices.encoder", "_source/neclib.devices.encoder.encoder_base", "_source/neclib.devices.encoder.nd287", "_source/neclib.devices.motor", "_source/neclib.devices.motor.cpz7415v", "_source/neclib.devices.motor.motor_base", "_source/neclib.devices.selector", "_source/neclib.devices.signal_generator", "_source/neclib.devices.signal_generator.fsw0010", "_source/neclib.devices.signal_generator.fsw0020", "_source/neclib.devices.signal_generator.signal_generator_base", "_source/neclib.devices.thermometer", "_source/neclib.devices.thermometer.model_218", "_source/neclib.devices.thermometer.thermometer_base", "_source/neclib.devices.weather_station", "_source/neclib.devices.weather_station.tr73u", "_source/neclib.devices.weather_station.weather_station_base", "_source/neclib.exceptions", "_source/neclib.interfaces", "_source/neclib.interfaces.console_logger", "_source/neclib.parameters", "_source/neclib.parameters.obsparam", "_source/neclib.parameters.parser", "_source/neclib.parameters.parser.obsparam_data", "_source/neclib.parameters.parser.pointing_error_data", "_source/neclib.parameters.pointing_error", "_source/neclib.recorders", "_source/neclib.recorders.console_log_writer", "_source/neclib.recorders.file_writer", "_source/neclib.recorders.necstdb_writer", "_source/neclib.recorders.recorder", "_source/neclib.recorders.writer_base", "_source/neclib.safety", "_source/neclib.safety.decelerate", "_source/neclib.safety.status", "_source/neclib.simulators", "_source/neclib.simulators.antenna", "_source/neclib.typing", "_source/neclib.units", "_source/neclib.utils", "_source/neclib.utils.array_utils", "_source/neclib.utils.data_utils", "_source/neclib.utils.device_utils", "_source/neclib.utils.math_utils", "_source/neclib.utils.quantity_utils", "_source/neclib.utils.simulator_utils", "index", "parameters/index", "tutorials/config", "tutorials/devices", "tutorials/index"], "filenames": ["_source/neclib.rst", "_source/neclib.configuration.rst", "_source/neclib.controllers.rst", "_source/neclib.controllers.antenna_pid.rst", "_source/neclib.coordinates.rst", "_source/neclib.coordinates.convert.rst", "_source/neclib.coordinates.frame.rst", "_source/neclib.coordinates.optimize.rst", "_source/neclib.coordinates.path_finder.rst", "_source/neclib.data.rst", "_source/neclib.data.resize.rst", "_source/neclib.devices.rst", "_source/neclib.devices.bias_reader.rst", "_source/neclib.devices.bias_reader.bias_reader_base.rst", "_source/neclib.devices.bias_reader.cpz3177.rst", "_source/neclib.devices.bias_setter.rst", "_source/neclib.devices.bias_setter.bias_setter_base.rst", "_source/neclib.devices.bias_setter.cpz340816.rst", "_source/neclib.devices.device_base.rst", "_source/neclib.devices.encoder.rst", "_source/neclib.devices.encoder.encoder_base.rst", "_source/neclib.devices.encoder.nd287.rst", "_source/neclib.devices.motor.rst", "_source/neclib.devices.motor.cpz7415v.rst", "_source/neclib.devices.motor.motor_base.rst", "_source/neclib.devices.selector.rst", "_source/neclib.devices.signal_generator.rst", "_source/neclib.devices.signal_generator.fsw0010.rst", "_source/neclib.devices.signal_generator.fsw0020.rst", "_source/neclib.devices.signal_generator.signal_generator_base.rst", "_source/neclib.devices.thermometer.rst", "_source/neclib.devices.thermometer.model_218.rst", "_source/neclib.devices.thermometer.thermometer_base.rst", "_source/neclib.devices.weather_station.rst", "_source/neclib.devices.weather_station.tr73u.rst", "_source/neclib.devices.weather_station.weather_station_base.rst", "_source/neclib.exceptions.rst", "_source/neclib.interfaces.rst", "_source/neclib.interfaces.console_logger.rst", "_source/neclib.parameters.rst", "_source/neclib.parameters.obsparam.rst", "_source/neclib.parameters.parser.rst", "_source/neclib.parameters.parser.obsparam_data.rst", "_source/neclib.parameters.parser.pointing_error_data.rst", "_source/neclib.parameters.pointing_error.rst", "_source/neclib.recorders.rst", "_source/neclib.recorders.console_log_writer.rst", "_source/neclib.recorders.file_writer.rst", "_source/neclib.recorders.necstdb_writer.rst", "_source/neclib.recorders.recorder.rst", "_source/neclib.recorders.writer_base.rst", "_source/neclib.safety.rst", "_source/neclib.safety.decelerate.rst", "_source/neclib.safety.status.rst", "_source/neclib.simulators.rst", "_source/neclib.simulators.antenna.rst", "_source/neclib.typing.rst", "_source/neclib.units.rst", "_source/neclib.utils.rst", "_source/neclib.utils.array_utils.rst", "_source/neclib.utils.data_utils.rst", "_source/neclib.utils.device_utils.rst", "_source/neclib.utils.math_utils.rst", "_source/neclib.utils.quantity_utils.rst", "_source/neclib.utils.simulator_utils.rst", "index.md", "parameters/index.md", "tutorials/config.md", "tutorials/devices.md", "tutorials/index.md"], "titles": ["neclib", "neclib.configuration", "neclib.controllers", "neclib.controllers.antenna_pid", "neclib.coordinates", "neclib.coordinates.convert", "neclib.coordinates.frame", "neclib.coordinates.optimize", "neclib.coordinates.path_finder", "neclib.data", "neclib.data.resize", "neclib.devices", "neclib.devices.bias_reader", "neclib.devices.bias_reader.bias_reader_base", "neclib.devices.bias_reader.cpz3177", "neclib.devices.bias_setter", "neclib.devices.bias_setter.bias_setter_base", "neclib.devices.bias_setter.cpz340816", "neclib.devices.device_base", "neclib.devices.encoder", "neclib.devices.encoder.encoder_base", "neclib.devices.encoder.nd287", "neclib.devices.motor", "neclib.devices.motor.cpz7415v", "neclib.devices.motor.motor_base", "neclib.devices.selector", "neclib.devices.signal_generator", "neclib.devices.signal_generator.fsw0010", "neclib.devices.signal_generator.fsw0020", "neclib.devices.signal_generator.signal_generator_base", "neclib.devices.thermometer", "neclib.devices.thermometer.model_218", "neclib.devices.thermometer.thermometer_base", "neclib.devices.weather_station", "neclib.devices.weather_station.tr73u", "neclib.devices.weather_station.weather_station_base", "neclib.exceptions", "neclib.interfaces", "neclib.interfaces.console_logger", "neclib.parameters", "neclib.parameters.obsparam", "neclib.parameters.parser", "neclib.parameters.parser.obsparam_data", "neclib.parameters.parser.pointing_error_data", "neclib.parameters.pointing_error", "neclib.recorders", "neclib.recorders.console_log_writer", "neclib.recorders.file_writer", "neclib.recorders.necstdb_writer", "neclib.recorders.recorder", "neclib.recorders.writer_base", "neclib.safety", "neclib.safety.decelerate", "neclib.safety.status", "neclib.simulators", "neclib.simulators.antenna", "neclib.typing", "neclib.units", "neclib.utils", "neclib.utils.array_utils", "neclib.utils.data_utils", "neclib.utils.device_utils", "neclib.utils.math_utils", "neclib.utils.quantity_utils", "neclib.utils.simulator_utils", "neclib", "NECST Parameters", "neclib.config", "neclib.devices", "Tutorials for developers"], "terms": {"pure": [0, 65], "python": [0, 40, 53, 58, 60, 63, 65, 66, 67], "tool": [0, 65], "necst": [0, 1, 5, 8, 18, 25, 36, 41, 54, 65, 67, 68], "necstauthorityerror": [0, 36], "error": [0, 1, 3, 5, 18, 25, 28, 36, 38, 39, 41, 43, 44, 62, 66, 67], "relat": [0, 1, 18, 25, 36, 60], "control": [0, 22, 23, 36, 55, 61, 66, 67, 68], "prioriti": [0, 36], "necstconfigurationerror": [0, 1, 18, 25, 36], "paramet": [0, 1, 3, 5, 6, 7, 8, 16, 17, 18, 20, 21, 23, 24, 25, 36, 38, 46, 47, 48, 49, 50, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68], "configur": [0, 5, 8, 14, 17, 18, 20, 21, 23, 25, 28, 36, 67, 68], "necsttimeouterror": [0, 36], "commun": [0, 36, 66], "timeout": [0, 36], "config": [0, 1, 5, 8, 18, 25, 68, 69], "creat": [0, 1, 60, 68], "file": [0, 1, 5, 8, 38, 40, 41, 42, 43, 46, 66, 68], "under": [0, 1], "home": [0, 1, 49], "get_logg": [0, 1, 5, 7, 23, 25, 37, 38, 47, 48, 49], "get": [0, 1, 5, 7, 10, 23, 25, 28, 37, 38, 47, 48, 49, 55, 58, 63, 67, 68], "logger": [0, 1, 5, 7, 23, 25, 37, 38, 46, 47, 48, 49, 66], "instanc": [0, 1, 3, 5, 7, 23, 25, 37, 38, 47, 48, 49, 60], "which": [0, 1, 3, 5, 7, 8, 22, 23, 25, 37, 38, 40, 46, 47, 48, 49, 55, 61, 63, 66, 68], "print": [0, 1, 5, 7, 23, 25, 37, 38, 47, 48, 49, 60, 61, 62, 67], "oper": [0, 1, 5, 7, 23, 25, 37, 38, 47, 48, 49, 61, 62], "log": [0, 1, 5, 7, 23, 25, 37, 38, 45, 46, 47, 48, 49], "consol": [0, 1, 5, 7, 23, 25, 37, 38, 45, 46, 47, 48, 49], "class": [0, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 60, 61, 62, 63], "envvarnam": [0, 1], "sourc": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64], "base": [0, 3, 5, 7, 8, 10, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 60, 61, 62, 68], "object": [0, 3, 4, 5, 6, 7, 10, 14, 17, 18, 27, 28, 42, 49, 52, 53, 55, 58, 60, 61, 62, 63, 68], "necst_root": [0, 67], "str": [0, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 38, 40, 42, 43, 44, 47, 48, 53, 56, 60, 61, 63, 66, 67, 68], "ros2_w": 0, "domain_id": 0, "ros_domain_id": 0, "record_root": [0, 49, 66], "necst_record_root": 0, "none": [1, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 44, 45, 46, 47, 48, 49, 50, 55, 58, 60, 62, 63, 67, 68], "valuerang": [1, 7, 52, 58, 60, 66], "util": [1, 52], "type": [1, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 29, 31, 32, 34, 35, 38, 40, 44, 46, 47, 48, 49, 50, 55, 57, 58, 60, 62, 63, 66, 67, 68], "valu": [1, 3, 5, 7, 23, 28, 38, 40, 42, 43, 48, 52, 55, 58, 59, 60, 62, 63, 67, 68], "rang": [1, 7, 10, 38, 51, 52, 58, 60, 62, 66], "check": [1, 47, 50, 58, 60, 62, 66], "return": [1, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 28, 29, 31, 32, 34, 35, 38, 40, 44, 46, 47, 48, 49, 50, 55, 57, 60, 62, 63, 68], "miscellan": [2, 65], "devic": [2, 3, 66, 67, 69], "mai": [2, 3, 28, 55, 62, 63], "refer": [2, 65, 67, 68], "collect": [2, 54, 58], "function": [2, 3, 28, 38, 48, 54, 55, 58, 60, 61, 62, 63, 68], "implement": [2, 3, 11, 40, 47, 50, 54, 55, 63, 67, 69], "some": [2, 3, 38, 40, 47, 50, 69], "algorithm": [2, 52], "someth": [2, 37, 38], "pidcontrol": [2, 3, 55], "pid": [2, 3, 55, 66], "telescop": [2, 3, 8, 23, 44, 51, 52, 55, 66], "antenna": [2, 3, 54, 66, 67], "main": 3, "dish": 3, "optimum": [3, 4, 7], "i": [3, 5, 7, 23, 28, 38, 40, 42, 43, 44, 47, 48, 50, 52, 53, 54, 60, 62, 63, 65, 67], "calcul": [3, 4, 5, 8, 23, 39, 40, 44, 52, 55, 63], "us": [3, 23, 40, 45, 49, 54, 57, 61, 62, 63, 65, 68], "simpl": [3, 56, 63], "consist": [3, 68], "proport": 3, "integr": 3, "deriv": 3, "term": 3, "u": [3, 5, 7, 8, 23, 52, 57, 63], "t": [3, 5, 7, 8, 10, 40, 42, 43, 46, 47, 48, 50, 52, 55, 57, 60, 62, 63, 66, 67, 68], "k_": 3, "mathrm": [3, 44], "p": 3, "e": [3, 40, 44, 67], "int": [3, 5, 7, 8, 10, 16, 17, 23, 24, 38, 40, 48, 49, 52, 57, 59, 60, 62, 63, 66, 67], "tau": 3, "d": [3, 7, 44], "frac": [3, 52], "where": [3, 7, 43, 52], "ar": [3, 5, 7, 8, 23, 38, 42, 43, 46, 52, 53, 55, 60, 63, 66, 67, 68, 69], "non": [3, 23, 38, 54, 67, 68], "neg": [3, 43], "constant": [3, 43, 55, 66], "": [3, 23, 38, 40, 49, 52, 54, 58, 61, 62, 63, 66, 67, 68], "between": [3, 7, 43, 52, 55, 57, 58, 62, 63], "desir": 3, "actual": [3, 68], "explanatori": 3, "thi": [3, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 36, 38, 40, 44, 46, 47, 48, 49, 50, 56, 61, 62, 63, 65, 66, 67, 68, 69], "script": [3, 54, 57], "execut": [3, 57, 61], "high": [3, 23, 52], "frequenc": [3, 5, 8, 23, 66], "vector": 3, "mani": 3, "arrai": [3, 7, 8, 66, 67], "updat": [3, 48], "frequent": 3, "These": [3, 67], "mean": [3, 68], "numpi": [3, 58, 59, 62], "best": 3, "choic": [3, 7], "speed": [3, 8, 23, 24, 52, 55, 66, 67], "up": [3, 22, 23, 62], "measur": 3, "time": [3, 5, 7, 8, 10, 23, 40, 55, 61, 63, 66, 67], "first": [3, 10, 43, 61, 62, 67], "parameterlist": [3, 55, 58, 60], "list": [3, 10, 11, 14, 25, 40, 48, 49, 53, 55, 57, 58, 60, 62, 63, 66, 67], "special": [3, 55, 58, 60], "store": [3, 49, 55, 58, 60, 61], "pid_param": 3, "1": [3, 8, 10, 23, 38, 40, 44, 49, 52, 57, 60, 61, 62, 63, 67], "0": [3, 5, 6, 8, 10, 23, 38, 40, 42, 48, 52, 55, 58, 60, 61, 62], "5": [3, 5, 7, 8, 40, 44, 48, 52, 55, 57, 60, 61, 62, 63], "3": [3, 44, 55, 60, 62, 63], "max_spe": [3, 67], "quantiti": [3, 5, 7, 8, 13, 14, 20, 21, 23, 24, 29, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 52, 55, 57, 58, 59, 62, 63, 66, 67], "2": [3, 23, 44, 52, 60, 62, 63, 67], "deg": [3, 5, 6, 7, 8, 40, 44, 52, 55, 56, 63, 67], "max_acceler": [3, 52, 67], "s2": [3, 67], "error_integ_count": 3, "50": [3, 8, 23, 38], "threshold": [3, 66], "accel_limit_off": 3, "20": [3, 6, 38, 44, 60], "arcsec": [3, 43, 44, 55, 56, 63], "cmd_coord_chang": 3, "100": [3, 10, 60, 62], "target_accel_ignor": 3, "classic": 3, "sophist": 3, "system": [3, 36, 65, 66], "ha": [3, 28, 38, 40, 63], "delai": [3, 23], "respons": [3, 54, 55], "input": [3, 40, 47, 50], "handl": [3, 22, 23, 39, 47, 48, 50, 57, 60, 63, 68], "onli": [3, 38, 68], "so": [3, 42, 43, 62, 67, 68], "az": [3, 5, 8, 20, 21, 23, 24, 44, 55, 58, 60, 63, 66], "el": [3, 5, 8, 20, 21, 23, 24, 44, 55, 58, 60, 63, 66], "tupl": [3, 5, 8, 10, 40, 44, 48, 55, 57], "float": [3, 5, 7, 8, 10, 14, 16, 17, 23, 24, 34, 35, 40, 43, 44, 48, 55, 57, 58, 59, 62, 63, 66, 67, 68], "coeffici": [3, 43], "formul": 3, "k_p": 3, "k_i": 3, "k_d": 3, "union": [3, 5, 6, 7, 8, 40, 42, 43, 44, 48, 49, 55, 56, 59, 62, 63], "maximum": [3, 38, 52, 55, 58, 62, 66], "motion": [3, 23, 55], "acceler": [3, 23, 52, 55, 66], "number": [3, 10, 23, 40, 48, 49, 57, 62], "data": [3, 45, 46, 47, 48, 49, 50, 60], "dict": [3, 23, 25, 38, 40, 42, 43, 44, 48, 58, 60, 63, 67, 68], "liter": [3, 20, 21, 24, 55, 56, 60, 62, 63], "astropi": [3, 6, 57, 58, 63], "unit": [3, 5, 7, 8, 40, 44, 55, 56, 58, 63], "condit": [3, 62], "interpret": [3, 38], "kei": [3, 18, 23, 42, 43, 48, 60, 67, 68], "angl": [3, 4, 7, 40, 42, 43], "If": [3, 5, 7, 8, 23, 38, 40, 48, 52, 53, 54, 60, 62, 63, 66, 67], "separ": [3, 7], "new": [3, 60, 68], "command": [3, 7, 8, 55, 66], "coordin": [3, 39, 40, 55, 66], "last": [3, 10, 55, 62], "one": [3, 53, 54, 63], "larger": 3, "than": [3, 7, 38, 48, 63, 66], "assum": [3, 5], "target": [3, 5, 7], "been": 3, "chang": [3, 23, 28, 40, 55], "reset": 3, "encod": [3, 11, 43, 52, 55], "read": [3, 43, 48, 52, 55, 67], "smaller": [3, 7], "stop": [3, 58, 59, 61, 62], "appli": [3, 7, 60], "limit": [3, 7, 38, 51, 52, 58, 60, 62, 66, 68], "quick": 3, "converg": [3, 66], "drive": [3, 4, 7, 8, 23, 24, 51, 52, 66], "angular": [3, 5, 7, 8, 55, 56, 58, 63], "exce": [3, 62], "target_spe": 3, "ignor": [3, 5, 8, 23], "most": 3, "like": [3, 67, 68], "caus": [3, 62, 67], "softwar": [3, 66, 67], "bug": 3, "network": 3, "congest": 3, "variabl": [3, 5, 8, 40, 43, 46, 48, 67, 68], "upper": [3, 60, 62], "angle_unit": [3, 55], "cmd_speed": 3, "result": [3, 7, 62, 67], "unix": 3, "timestamp": [3, 10, 48], "done": [3, 5, 61], "cmd_coord": 3, "enc_coord": 3, "deviat": 3, "rate": 3, "add": 3, "gener": [3, 28, 58, 60, 62, 63, 67], "an": 3, "attempt": [3, 61, 66], "follow": [3, 42, 43, 44, 67, 68], "raster": 3, "scan": [3, 4, 8, 40, 57, 66], "sider": 3, "track": 3, "error_integr": 3, "error_deriv": 3, "keep": 3, "default": [3, 23, 53, 63, 67], "optim": 3, "accord": [3, 23], "interv": [3, 39, 40, 55, 66], "depend": [3, 55], "all": [3, 11, 13, 16, 18, 20, 23, 24, 25, 29, 32, 35, 38, 46, 49, 60, 61, 66, 67], "method": [3, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 40, 60, 62, 68], "argument": [3, 38, 40, 61], "given": [3, 5, 7, 8, 40, 53, 58, 63], "you": [3, 10, 52, 63, 67, 68], "need": [3, 23, 38, 68], "substitut": 3, "befor": 3, "instanti": 3, "exampl": [3, 5, 6, 7, 8, 10, 36, 38, 40, 42, 43, 44, 48, 49, 52, 53, 55, 57, 60, 61, 62, 63], "1000": [3, 48, 63], "6": [3, 5, 52, 60, 62], "target_coordin": 3, "encoder_read": 3, "30": [3, 5, 8, 38, 44, 55, 63], "10": [3, 6, 38, 40, 44, 60, 62], "get_spe": [3, 23, 24, 55], "430511474609375e": 3, "05": [3, 8], "20356178283691406": 3, "classvar": [3, 40, 55], "arcmin": [3, 55, 56, 63], "rad": [3, 55, 56, 63], "public": [3, 40], "accept": [3, 46, 67], "its": [3, 40, 60, 61, 63, 66, 67, 68], "properti": [3, 23, 49, 55, 60, 61], "dt": [3, 52, 55], "fals": [3, 40, 53, 60, 62], "modul": [3, 25, 40, 44, 54, 55], "instruct": 3, "bool": [3, 29, 40, 46, 48, 60, 61, 62, 66, 67], "true": [3, 38, 40, 53, 60, 62, 66], "won": [3, 7, 10, 40, 42, 43, 47, 50, 63, 66, 67], "move": [3, 40], "regardless": 3, "param": [3, 40, 42, 43, 44, 60], "kwarg": [3, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50], "coordcalcul": [4, 5, 8], "horizont": [4, 5, 8], "drivelimitcheck": [4, 7], "find": [4, 7, 63], "safe": [4, 7, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35], "pathfind": [4, 8], "\u671b\u9060\u93e1\u306e\u8ecc\u9053\u3092\u8a08\u7b97\u3059\u308b": [4, 8], "describe_fram": [4, 6], "string": [4, 5, 6, 48, 66, 67], "represent": [4, 6], "frame": [4, 5, 8, 40], "parse_fram": [4, 5, 6], "pars": [4, 5, 6, 11, 39, 40, 41, 42, 43, 44, 66, 67, 68], "standby_posit": [4, 8], "standbi": [4, 8], "posit": [4, 8, 23, 24, 57], "take": [4, 8], "account": [4, 8], "margin": [4, 8, 66], "dure": [4, 7, 8, 55], "pointingerror": [5, 39, 44], "observ": [5, 7, 8, 38, 39, 40, 41, 42, 44, 46, 57, 67], "point": [5, 8, 39, 40, 41, 43, 44, 57, 62, 66, 67], "locat": [5, 8, 40, 66], "pointing_param_path": [5, 8], "pressur": [5, 8, 48], "temperatur": [5, 8], "relative_humid": [5, 8], "obswl": [5, 8, 40], "obsfreq": [5, 8], "earthloc": [5, 8, 66], "observatori": [5, 8, 48, 66, 67], "option": [5, 7, 8, 10, 14, 17, 18, 21, 23, 27, 28, 31, 34, 38, 40, 44, 48, 49, 58, 60, 62, 63], "pathlik": [5, 8, 42, 43, 49, 56], "path": [5, 8, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 66, 67], "atmospher": [5, 8], "ndarrai": [5, 7, 8, 40, 59, 62, 63], "rel": [5, 8, 67], "humid": [5, 8], "wavelength": [5, 8], "em": [5, 8], "wave": [5, 8], "comput": [5, 8], "diffract": [5, 8], "correct": [5, 8, 44], "dimensionless": 5, "hpa": [5, 8], "k": [5, 8], "m": [5, 55, 63], "138": [5, 8], "472153deg": [5, 8], "35": [5, 8], "940874deg": [5, 8], "1386m": [5, 8], "pointing_param": [5, 8], "toml": [5, 8, 42, 43, 44, 66, 67], "850": [5, 8, 48], "300": [5, 23, 40], "230": [5, 8], "ghz": [5, 8], "nan": [5, 60], "get_altaz_by_nam": 5, "name": [5, 38, 40, 42, 43, 48, 53, 61, 66, 67], "obstim": [5, 40], "\u5929\u4f53\u540d\u304b\u3089\u5730\u5e73\u5ea7\u6a19": 5, "alt": 5, "\u3092\u53d6\u5f97\u3059\u308b": 5, "celesti": 5, "sequenc": [5, 58, 62], "m42": 5, "skycoord": [5, 40], "274": 5, "55435678": 5, "15": [5, 48], "3762009": 5, "get_altaz": 5, "lon": [5, 66], "lat": [5, 66], "from": [5, 23, 40, 48, 49, 58, 61, 62, 63, 67, 68], "longitud": [5, 8, 40], "latitud": [5, 8, 40], "arbitrari": [5, 10, 45, 49, 62], "basecoordinatefram": [5, 6, 8, 40], "unitbas": [5, 7, 8, 40, 44, 57, 63], "thei": [5, 8, 57], "45": [5, 40], "fk5": [5, 6, 40], "344": 5, "21675916": 5, "43235393": 5, "The": [6, 7, 10, 23, 28, 40, 42, 43, 44, 47, 50, 52, 53, 61, 68], "describ": 6, "repr": 6, "altaz": [6, 8, 40], "skyoffsetfram": 6, "origin": [6, 54, 63], "10deg": 6, "0deg": 6, "rotat": 6, "20deg": 6, "builtin_fram": 6, "skyoffsetfk5": 6, "equinox": 6, "j2000": 6, "000": 6, "ra": 6, "dec": 6, "preferred_limit": 7, "max_observation_s": 7, "includ": [7, 10, 23, 58, 62, 67], "constraint": 7, "avoid": [7, 61, 68], "direct": [7, 23, 43], "unwrap": 7, "360deg": 7, "over": 7, "180deg": [7, 43], "never": [7, 62], "go": 7, "out": [7, 23], "can": [7, 22, 23, 40, 49, 55, 62, 63, 67, 68], "violat": 7, "continu": [7, 38], "other": [7, 23, 38, 40, 61, 63], "found": [7, 67, 68], "current": [7, 48, 55], "occur": 7, "possibli": 7, "interrupt": 7, "checker": 7, "260": 7, "250": 7, "200": 7, "170": 7, "190": 7, "scalar": 7, "n": [7, 55], "shape": 7, "seri": 7, "length": [7, 60], "environ": [8, 67], "290": 8, "finder": 8, "linear": [8, 23], "start": [8, 59, 61, 62], "end": 8, "\u671b\u9060\u93e1\u306e\u76f4\u7dda\u8ecc\u9053\u3092\u8a08\u7b97\u3059\u308b": 8, "azimuth": [8, 43, 60], "elev": [8, 43, 60], "47920569": 8, "46920569": 8, "45920569": 8, "44920569": 8, "43920569": 8, "42920569": 8, "88176239": 8, "88176188": 8, "88176136": 8, "88176084": 8, "88176032": 8, "8817598": 8, "66685637e": 8, "09": 8, "32": 8, "29": 8, "resiz": 9, "keep_duration_sec": 10, "push": [10, 60], "n_sampl": 10, "cut": 10, "spectral": 10, "index": 10, "want": [10, 63, 67], "coars": 10, "sampl": 10, "spectral_data": 10, "repeat": 10, "sever": [10, 38, 46, 53], "8192": 10, "16384": 10, "cpz3177": [11, 12], "bias_read": 11, "cpz340816": [11, 15], "bias_sett": 11, "cpz7415v": [11, 22, 68], "motor": [11, 55, 66, 68], "fsw0010": [11, 26], "signal_gener": 11, "fsw0020": [11, 26], "model218": [11, 30, 31], "thermomet": 11, "model_218": 11, "nd287": [11, 19], "tr73u": [11, 33], "weather_st": 11, "avail": 11, "antennaencod": 11, "abc": [11, 18, 50, 60, 68], "antennamotor": [11, 68], "biasread": [11, 13, 14], "biassett": [11, 16, 17], "choppermotor": 11, "signalgener": [11, 27, 28, 29], "weatherst": [11, 34, 35], "antenna_encod": 11, "antenna_motor": 11, "chopper_motor": 11, "devicebas": [13, 16, 18, 20, 24, 25, 29, 32, 35], "manufactur": [13, 14, 16, 17, 18, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 68], "model": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 44], "abstract": [13, 16, 18, 20, 24, 29, 32, 35, 50], "get_bias_voltag": [13, 14], "ch": [13, 14, 16, 17], "get_bias_curr": [13, 14], "final": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 68], "shut": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35], "down": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35], "should": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 38, 40, 47, 50, 53, 54, 63, 67, 68], "alwai": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35], "call": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 38, 55], "quit": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35], "program": [13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 34, 35, 38], "busi": [14, 17, 27, 28, 58, 61], "manag": [14, 17, 27, 28, 51, 53, 58, 61], "state": [14, 17, 23, 27, 28, 58, 61], "interfac": [14, 23], "identifi": [14, 17, 18, 21, 23, 27, 28, 31, 34, 68], "rsw_id": [14, 17, 23], "get_data": 14, "conf": [14, 17, 18, 20, 21], "set_voltag": [16, 17], "voltage_mv": [16, 17], "output_voltag": [16, 17], "pyinterfac": 17, "group": [18, 61, 67], "uniqu": [18, 68], "specifi": [18, 40, 67], "singl": [18, 23, 67], "readout": [19, 21], "get_read": [20, 21], "axi": [20, 21, 23, 24, 43, 55, 60, 66], "heidenhain": 21, "port_az": 21, "puls": [22, 23], "4": [22, 23, 60, 62], "ax": [22, 23, 43, 55], "item": 23, "16": 23, "9": [23, 62], "A": [23, 42, 61], "f": [23, 38], "board": 23, "set": [23, 28, 38, 55, 67, 68], "same": [23, 38, 43, 54, 61, 62, 68], "rotari": 23, "switch": 23, "rsw1": 23, "mount": 23, "side": 23, "ship": 23, "id": 23, "would": [23, 47, 50, 61, 68], "zero": [23, 38, 43], "when": [23, 61, 62, 66, 67, 68], "multipl": [23, 61, 62, 63], "pci": 23, "fa": 23, "factori": 23, "autom": 23, "useax": 23, "x": [23, 43, 44, 52, 60, 63], "y": [23, 44], "z": [23, 42], "concaten": 23, "them": 23, "_mode": 23, "jog": 23, "org": 23, "ptp": 23, "timer": 23, "mode": [23, 54], "absolut": [23, 24, 40, 52, 55, 62], "_pulse_conf": 23, "dir": 23, "wait": [23, 48, 61, 66], "duti": 23, "output": [23, 28, 40, 66], "activ": [23, 49], "ccw": 23, "low": 23, "200u": 23, "insert": 23, "cycl": 23, "adapt": 23, "otherwis": 23, "_motion_clock": 23, "scale": 23, "factor": [23, 58, 63], "valid": [23, 38, 42, 43, 63, 67], "through": [23, 54], "4095": 23, "clock": 23, "_motion_acc_mod": 23, "acc_norm": 23, "acc_sin": 23, "curv": 23, "_motion_low_spe": 23, "startup": 23, "65535": 23, "_motion_spe": 23, "steadi": 23, "_motion_acc": 23, "_motion_dec": 23, "deceler": [23, 51], "_motion_step": 23, "134217728": 23, "134217727": 23, "org_search": 23, "axis_": 23, "alia": [23, 56], "map": [23, 40, 60], "speed_to_pulse_factor": 23, "convers": [23, 58, 63, 66], "gear": 23, "ratio": 23, "prefix": [23, 67, 68], "_": [23, 60], "defin": [23, 39, 57, 68], "each": [23, 61, 68], "see": [23, 38, 63, 65, 67], "http": 23, "www": 23, "co": [23, 40, 44], "jp": 23, "download": 23, "tutori": 23, "tut0053_14": 23, "pdf": 23, "detail": [23, 67, 69], "current_mot": 23, "get_step": [23, 24], "mayb": [23, 24], "specif": [23, 24, 67], "set_spe": [23, 24], "set_step": [23, 24], "step": [23, 24, 62], "parse_device_configur": 25, "list_implement": 25, "skip_on_simul": [27, 28, 58, 64], "phasematrix": [27, 28], "host": [27, 28, 31], "set_freq": [27, 28, 29], "freq_ghz": [27, 28, 29], "set_pow": [27, 28, 29], "power_dbm": [27, 28, 29], "get_freq": [27, 28, 29], "get_pow": [27, 28, 29], "start_output": [27, 28, 29], "stop_output": [27, 28, 29], "get_output_statu": [27, 28, 29], "power": 28, "signal": 28, "abil": 28, "For": [28, 63], "product": [28, 63], "without": [28, 57, 68], "effect": 28, "rais": [28, 36, 53], "meaningless": 28, "lakeshor": 31, "get_temp": [31, 32, 34, 35], "tandd": 34, "port": 34, "get_humid": [34, 35], "get_press": [34, 35], "inform": [36, 37, 38], "regard": 36, "statu": [36, 51], "reason": 36, "advis": 36, "fix": [36, 55], "user": [37, 38, 49], "clip": [38, 58, 62], "minimum": [38, 58, 62], "colorizelevelnameformatt": 38, "fmt": 38, "datefmt": 38, "style": [38, 43], "formatt": 38, "color": 38, "level": [38, 53], "doc": 38, "usag": [38, 69], "colorprefix": 38, "x1b": 38, "0m": 38, "35m": 38, "32m": 38, "33m": 38, "40": [38, 44], "31m": 38, "41": [38, 62], "97m": 38, "format": [38, 42, 43, 63], "record": [38, 66, 67], "text": 38, "logrecord": 38, "consolelogg": [38, 46], "arg": [38, 46, 47, 48, 49, 50], "observe_level": 38, "21": [38, 44], "obslog": 38, "msg": 38, "indent_level": 38, "summari": [38, 46], "debug": [38, 46], "messag": [38, 66], "indent": 38, "min_level": 38, "lower": [38, 60, 62, 67], "bound": [38, 60], "displai": 38, "termin": [38, 58, 59], "To": [38, 55, 57, 61, 63, 68], "suppress": 38, "less": 38, "higher": 38, "No": [38, 68], "matter": 38, "contain": [38, 69], "getlogg": 38, "otf_observ": 38, "txt": [38, 43], "diagnos": 38, "problem": 38, "info": 38, "expect": 38, "happen": 38, "warn": [38, 48, 53], "care": 38, "notifi": 38, "cannot": [38, 55, 63, 68], "complet": 38, "due": 38, "critic": [38, 44, 53, 63], "finish": [38, 61], "obsparamdata": [39, 40, 41, 42], "spec": [39, 40, 41, 42, 67], "obsparam": [39, 42, 43], "pointingerrordata": [39, 41, 43, 44], "off_point_coord": [39, 40], "off": [39, 40], "convert": [40, 48, 58, 60, 62, 63, 68], "flexibli": 40, "form": 40, "api": [40, 55, 65, 68], "content": [40, 47, 57, 61, 67], "translate_coordsi": 40, "offset": [40, 43], "subpackag": 40, "parametermap": [40, 42, 43, 58, 60], "attribut": [40, 42, 43, 58, 60, 61, 63, 67], "access": [40, 42, 43, 58, 60, 67], "support": [40, 42, 43, 54, 55, 56, 58, 60, 62], "quantity2builtin": [40, 58, 63], "built": [40, 58, 62, 63], "val": 40, "provid": [40, 65, 68], "parameterunit": 40, "lamdaon": 40, "betaon": 40, "from_fil": [40, 42, 43, 44], "123": 40, "parameternam": 40, "absolute_off_point_coordin": 40, "lamdaoff": 40, "betaoff": 40, "coord_si": 40, "hot_observation_interv": 40, "load_interv": 40, "off_observation_interv": 40, "off_interv": 40, "offset_coslat_appli": 40, "otadel": 40, "offset_from_on_to_off": 40, "deltalamda": 40, "deltabeta": 40, "delta_coord": 40, "on_point_coordin": 40, "hashabl": [40, 63], "points_per_scan": [40, 57], "hot": 40, "per": [40, 57], "line": [40, 57], "5min": 40, "5scan": [40, 57], "25": [40, 57], "on_point": 40, "coslat_appli": 40, "give": [40, 63], "ON": 40, "caution": [40, 62], "0h0m1": 40, "equival": [40, 57, 62, 63], "1arcsec": 40, "divid": 40, "keyword": 40, "pass": [40, 49], "etc": 40, "3h25m20": 40, "31d32m33": 40, "51": 40, "3333": 40, "31": [40, 44], "5425": 40, "5h1m1": 40, "30d25m20": 40, "galact": 40, "hour": [40, 63], "20arcsec": 40, "266": 40, "6442444454571": 40, "48": 40, "39027455272732": 40, "storag": [42, 43, 49], "uppercas": 42, "z0": 42, "9_": 42, "lowercas": 42, "mix": 42, "case": [42, 67, 68], "ani": [42, 43, 44, 46, 48, 50, 55, 58, 60, 63, 66, 67], "classmethod": [42, 43, 60], "bare": [42, 43], "nest": [42, 43], "tabl": [42, 43, 48, 66, 67], "allow": [42, 43, 60, 66], "those": [42, 43], "declar": [42, 43], "structur": [42, 43, 48, 49, 60], "flatten": [42, 43], "kind": [42, 43, 60], "preserv": [42, 43, 60], "ob": 42, "amigo": 42, "orikl": 42, "daz": 43, "de": 43, "collim": 43, "chi_az": 43, "magnitud": 43, "tilt": 43, "omega_az": 43, "phase": 43, "ep": 43, "skew": 43, "lack": 43, "orthogon": 43, "chi2_az": 43, "chi": 43, "period": 43, "harmon": 43, "compon": 43, "omega2_az": 43, "omega": 43, "chi_el": 43, "amplitud": 43, "omega_el": 43, "chi2_el": 43, "omega2_el": 43, "g": [43, 67], "order": [43, 53, 67], "gravit": 43, "deflect": 43, "gg": 43, "second": [43, 61], "ggg": 43, "third": 43, "gggg": 43, "fourth": 43, "del": 43, "de_radio": 43, "optic": 43, "radio": [43, 44], "beam": 43, "del_radio": 43, "cor_v": 43, "cor_p": 43, "g_radio": 43, "gg_radio": 43, "ggg_radio": 43, "gggg_radio": 43, "error_param": 43, "5300": 43, "380": 43, "from_text_fil": 43, "legaci": 43, "import": [44, 57, 67, 68], "perform": 44, "accur": 44, "uniform": 44, "emploi": [44, 63], "delta": 44, "chi_": 44, "sin": 44, "omega_": 44, "epsilon": 44, "cor": 44, "_v": 44, "_p": 44, "e_": 44, "g_1": 44, "g_2": 44, "g_": 44, "el_": 44, "refracted2appar": 44, "11": [44, 55], "apparent2refract": 44, "40680": 44, "76680": 44, "112680": 44, "73800": 44, "109800": 44, "145800": 44, "iter": [44, 60], "consolelogwrit": [45, 46], "writer": [45, 46, 47, 48, 49, 50], "filewrit": [45, 47, 49], "necstdbwrit": [45, 48], "dump": [45, 46, 48], "necstdb": [45, 48], "log_file_path": 46, "obslog_file_path": 46, "start_record": [46, 47, 48, 49, 50], "record_dir": [46, 47, 48, 49, 50], "append": [46, 47, 48, 49, 50, 60], "don": [46, 57, 67, 68], "issu": 46, "stop_record": [46, 47, 48, 49, 50], "textlik": [47, 48], "chunk": [47, 48, 50], "whether": [47, 48, 50], "subclass": [47, 50], "essenti": [47, 50], "differ": [47, 50, 61, 62, 67, 68], "extens": [47, 50, 67], "parse_str_s": 48, "str_to_byt": 48, "byte": 48, "db": 48, "databas": 48, "directori": [48, 49, 67], "doubl": 48, "1664195057": 48, "022712": 48, "float32": 48, "livelinessdur": 48, "isn": [48, 55, 67, 68], "durat": [48, 66], "sec": 48, "close": 48, "warningqueues": 48, "being": 48, "greater": 48, "dtypeconvert": 48, "callabl": [48, 55, 57, 60], "lambda": [48, 55, 60], "char": 48, "float64": 48, "int16": 48, "int32": 48, "int64": 48, "int8": 48, "uint16": 48, "uint32": 48, "uint64": 48, "uint8": 48, "readabl": 48, "c": [48, 63], "topic": [48, 66], "meter_read": 48, "add_tabl": 48, "metadata": 48, "remove_t": 48, "root": 49, "insid": 49, "subdirectori": [49, 68], "attach": 49, "add_writ": 49, "dbwriter": 49, "test": [49, 63], "drop_writ": 49, "drop": 49, "deactiv": 49, "nears": [51, 52], "addition": 52, "restrict": [52, 67], "understand": 52, "junior": 52, "physic": [52, 63], "know": [52, 68], "v": [52, 55], "qquad": 52, "v_0": 52, "x_0": 52, "sqrt": 52, "2x": 52, "2ax": 52, "distanc": 52, "consid": 52, "355": 52, "354": 52, "89442719": 52, "ascend": 53, "valueerror": [53, 63], "least": 53, "reserv": 53, "topic1": 53, "namespac": [53, 67], "topic2": 53, "necessari": 54, "run": 54, "here": [54, 57, 68], "correspond": [54, 55, 68], "much": 54, "possibl": 54, "inherit": [54, 68], "overrid": 54, "ensur": 54, "behavior": 54, "real": [54, 61], "antennaencoderemul": [54, 55], "emul": [54, 55], "azeldata": [55, 58, 60], "initialposit": 55, "device_moment_of_inertia": 55, "3000": 55, "kg": [55, 63], "m2": 55, "motor_torqu": 55, "angular_resolut": 55, "13728814": 55, "moment": 55, "inertia": 55, "torqu": 55, "exert": 55, "resolut": 55, "independ": [55, 68], "driver": 55, "yet": 55, "enc": 55, "pid_az": 55, "abs_acceler": 55, "two": [55, 61], "consecut": [55, 62], "approxim": 55, "12": 55, "intent": 55, "altazimuth": 55, "alias": 56, "hint": 56, "o": [56, 67], "combin": 56, "angleunit": 56, "express": [56, 63], "packag": [56, 67, 69], "custom": [57, 67], "fail": 57, "pleas": [57, 67], "even": 57, "explicitli": 57, "appear": [57, 62], "your": 57, "scan_to_point_equival": 57, "eq": 57, "purpos": 58, "conditioncheck": [58, 62], "angle_conversion_factor": [58, 63], "counter": [58, 62], "integ": [58, 62, 66, 67], "daz2dx": [58, 63], "discret": [58, 62], "nearest": [58, 62], "element": [58, 60, 62], "arithmet": [58, 62], "dx2daz": [58, 63], "force_data_typ": [58, 63], "frang": [58, 62], "version": [58, 62, 65, 67], "get_quant": [58, 63], "linear_sequ": [58, 59], "similar": [58, 59], "linspac": [58, 59], "unknown": [58, 59], "parse_quant": [58, 63], "partially_convert_unit": [58, 63], "replac": [58, 63], "dimens": [58, 63], "tocamelcas": [58, 60], "to_snake_cas": [58, 60], "num": 59, "supportscomparison": [60, 62], "initvalu": 60, "fill": 60, "initi": 60, "copi": 60, "func": [60, 64], "everi": 60, "both": 60, "syntax": [60, 67], "fulli": 60, "b": [60, 61, 63], "strict": [60, 68], "comparison": 60, "exactli": 60, "equal": 60, "judg": 60, "valid_valu": 60, "valid_str": 60, "aaa": 60, "bbb": 60, "width": 60, "contain_al": 60, "contain_ani": 60, "pascal": 60, "bumpi": 60, "logic": 61, "obj": 61, "flagnam": 61, "context": 61, "block": 61, "until": 61, "confirm": 61, "exit": 61, "free": 61, "flag": 61, "conflict": 61, "foo": 61, "def": [61, 68], "task_a": 61, "self": [61, 68], "task": 61, "sleep": 61, "task_b": 61, "concurr": 61, "futur": 61, "threadpoolexecutor": 61, "executor": 61, "future1": 61, "submit": 61, "future2": 61, "abov": [61, 68], "howev": 61, "prevent": 61, "must": 61, "across": 61, "distinguish": [61, 68], "absmax": 62, "inclus": 62, "yield": 62, "success": 62, "becaus": 62, "overflow": 62, "ing": 62, "almost": 62, "arang": 62, "8": 62, "ceil": 62, "floor": 62, "141592": 62, "7": 62, "allow_infti": 62, "count": 62, "infin": 62, "memori": 62, "leak": 62, "sequenti": 62, "reset_on_failur": 62, "more": [63, 68], "realiz": [63, 68], "slower": 63, "thu": 63, "bottleneck": 63, "angle_deg": 63, "3600": 63, "m_sun": 63, "pc": 63, "solmass": 63, "pc2": 63, "96542625e": 63, "new_unit": 63, "construct": 63, "j": 63, "erg": 63, "w": 63, "l_sun": 63, "1484e": 63, "27": 63, "19e": 63, "23": 63, "h": 63, "couldn": 63, "sollum": 63, "dictionari": 63, "either": 63, "parameter_nam": 63, "299792458m": 63, "km": 63, "299792": 63, "458": 63, "default_unit": 63, "_getquant": 63, "signatur": 63, "1m": 63, "2m": 63, "3m": 63, "librari": 65, "pip": 65, "semant": 65, "descript": 66, "inlin": [66, 67], "height": 66, "simul": 66, "boolean": [66, 67], "make": 66, "save": [66, 67], "alert_interval_sec": 66, "alert": 66, "publish": 66, "antenna_pid_param_az": 66, "antenna_pid_param_el": 66, "antenna_drive_range_az": 66, "hardwar": 66, "antenna_drive_range_el": 66, "antenna_drive_warning_limit_az": 66, "prefer": [66, 67, 68], "antenna_drive_warning_limit_el": 66, "antenna_drive_critical_limit_az": 66, "antenna_drive_critical_limit_el": 66, "antenna_pointing_accuraci": 66, "antenna_pointing_parameter_path": 66, "antenna_max_acceleration_az": 66, "antenna_max_acceleration_el": 66, "antenna_max_speed_az": 66, "antenna_max_speed_el": 66, "antenna_command_frequ": 66, "antenna_command_offset_sec": 66, "ros_service_timeout_sec": 66, "ro": 66, "servic": 66, "client": 66, "server": 66, "ros_communication_deadline_sec": 66, "staler": 66, "subscrib": 66, "ros_logging_interval_sec": 66, "throttl": 66, "too": 66, "verbos": 66, "ros_topic_scan_interval_sec": 66, "node": 66, "constantli": 66, "exist": [66, 67], "design": 67, "nonspecif": 67, "perticular": 67, "automat": 67, "search": [67, 68], "wasn": 67, "src": 67, "caught": 67, "via": 67, "overwrit": 67, "reload": 67, "below": [67, 68, 69], "written": 67, "tomlkit": 67, "pair": 67, "datetim": 67, "strongli": 67, "discourag": 67, "unexpect": 67, "snake": [67, 68], "word": 67, "split": 67, "underscor": 67, "simplic": 67, "indic": [67, 68], "section": [67, 68], "comment": 67, "encourag": 67, "satisfi": 67, "document": 67, "definit": 67, "antenna_max_spe": 67, "2deg": 67, "antenna_max_acceler": 67, "5deg": 67, "max": 67, "maxacceler": 67, "nor": 67, "__get_pars": 67, "py": [67, 68], "just": [67, 68], "have": 67, "ll": 67, "antenna_param": 67, "nonexist": 67, "undefined_parameters_a": 67, "undefin": 67, "date": 67, "featur": 68, "common": 68, "select": 68, "dev_": 68, "link": 68, "selector": 68, "referenc": 68, "camel": 68, "dev_antenna_motor": 68, "latter": 68, "reveal": 68, "littl": 68, "bit": 68, "concret": 68, "also": 68, "twice": 68, "m2motor": 68, "write": 68, "dev_m2_motor": 68, "insensit": 68, "procedur": 68, "ad": 68, "alreadi": 68, "skip": 68, "throughout": 68, "decor": 68, "abstractmethod": 68, "requir": 68, "convent": 68, "suffix": 68, "_base": 68, "devicetyp": 68, "set_some_paramet": 68, "get_some_paramet": 68, "get_all_data": 68, "some_paramet": 68, "omit": 68, "alphanumer": 68, "charact": 68, "inconsist": 68, "impos": 68, "freeli": 68, "ones": 68, "duplic": 68, "device_type_bas": 68, "devicemodel": 68, "come": 68, "_some_method_to_implement_get_some_paramet": 68, "In": 69, "pursuit": 69, "conveni": 69, "tricki": 69, "explan": 69, "neclib": 69}, "objects": {"": [[0, 0, 0, "-", "neclib"]], "neclib": [[0, 1, 1, "", "EnvVarName"], [1, 0, 0, "-", "configuration"], [2, 0, 0, "-", "controllers"], [4, 0, 0, "-", "coordinates"], [9, 0, 0, "-", "data"], [11, 0, 0, "-", "devices"], [36, 0, 0, "-", "exceptions"], [37, 0, 0, "-", "interfaces"], [39, 0, 0, "-", "parameters"], [45, 0, 0, "-", "recorders"], [51, 0, 0, "-", "safety"], [54, 0, 0, "-", "simulators"], [56, 0, 0, "-", "typing"], [57, 0, 0, "-", "units"], [58, 0, 0, "-", "utils"]], "neclib.EnvVarName": [[0, 2, 1, "", "domain_id"], [0, 2, 1, "", "necst_root"], [0, 2, 1, "", "record_root"], [0, 2, 1, "", "ros2_ws"]], "neclib.configuration": [[1, 3, 1, "", "configure"]], "neclib.controllers": [[3, 0, 0, "-", "antenna_pid"]], "neclib.controllers.antenna_pid": [[3, 1, 1, "", "PIDController"]], "neclib.controllers.antenna_pid.PIDController": [[3, 2, 1, "", "ANGLE_UNIT"], [3, 4, 1, "", "dt"], [3, 4, 1, "", "error_derivative"], [3, 4, 1, "", "error_integral"], [3, 5, 1, "", "get_speed"], [3, 5, 1, "", "params"]], "neclib.coordinates": [[5, 0, 0, "-", "convert"], [6, 0, 0, "-", "frame"], [7, 0, 0, "-", "optimize"], [8, 0, 0, "-", "path_finder"]], "neclib.coordinates.convert": [[5, 1, 1, "", "CoordCalculator"]], "neclib.coordinates.convert.CoordCalculator": [[5, 5, 1, "", "get_altaz"], [5, 5, 1, "", "get_altaz_by_name"], [5, 2, 1, "", "obswl"], [5, 2, 1, "", "pressure"], [5, 2, 1, "", "relative_humidity"], [5, 2, 1, "", "temperature"]], "neclib.coordinates.frame": [[6, 3, 1, "", "describe_frame"], [6, 3, 1, "", "parse_frame"]], "neclib.coordinates.optimize": [[7, 1, 1, "", "DriveLimitChecker"]], "neclib.coordinates.optimize.DriveLimitChecker": [[7, 5, 1, "", "optimize"]], "neclib.coordinates.path_finder": [[8, 1, 1, "", "PathFinder"], [8, 3, 1, "", "standby_position"]], "neclib.coordinates.path_finder.PathFinder": [[8, 5, 1, "", "linear"]], "neclib.data": [[10, 0, 0, "-", "resize"]], "neclib.data.resize": [[10, 1, 1, "", "Resize"]], "neclib.data.resize.Resize": [[10, 5, 1, "", "get"], [10, 5, 1, "", "push"]], "neclib.devices": [[12, 0, 0, "-", "bias_reader"], [15, 0, 0, "-", "bias_setter"], [18, 0, 0, "-", "device_base"], [19, 0, 0, "-", "encoder"], [11, 6, 1, "", "implementations"], [22, 0, 0, "-", "motor"], [11, 6, 1, "", "parsed"], [25, 0, 0, "-", "selector"], [26, 0, 0, "-", "signal_generator"], [30, 0, 0, "-", "thermometer"], [33, 0, 0, "-", "weather_station"]], "neclib.devices.bias_reader": [[13, 0, 0, "-", "bias_reader_base"], [14, 0, 0, "-", "cpz3177"]], "neclib.devices.bias_reader.bias_reader_base": [[13, 1, 1, "", "BiasReader"]], "neclib.devices.bias_reader.bias_reader_base.BiasReader": [[13, 2, 1, "", "Manufacturer"], [13, 2, 1, "", "Model"], [13, 5, 1, "", "finalize"], [13, 5, 1, "", "get_bias_current"], [13, 5, 1, "", "get_bias_voltage"]], "neclib.devices.bias_reader.cpz3177": [[14, 1, 1, "", "CPZ3177"]], "neclib.devices.bias_reader.cpz3177.CPZ3177": [[14, 2, 1, "", "Identifier"], [14, 2, 1, "", "Manufacturer"], [14, 2, 1, "", "Model"], [14, 2, 1, "", "conf"], [14, 5, 1, "", "finalize"], [14, 5, 1, "", "get_bias_current"], [14, 5, 1, "", "get_bias_voltage"], [14, 5, 1, "", "get_data"]], "neclib.devices.bias_setter": [[16, 0, 0, "-", "bias_setter_base"], [17, 0, 0, "-", "cpz340816"]], "neclib.devices.bias_setter.bias_setter_base": [[16, 1, 1, "", "BiasSetter"]], "neclib.devices.bias_setter.bias_setter_base.BiasSetter": [[16, 2, 1, "", "Manufacturer"], [16, 2, 1, "", "Model"], [16, 5, 1, "", "finalize"], [16, 5, 1, "", "output_voltage"], [16, 5, 1, "", "set_voltage"]], "neclib.devices.bias_setter.cpz340816": [[17, 1, 1, "", "CPZ340816"]], "neclib.devices.bias_setter.cpz340816.CPZ340816": [[17, 2, 1, "", "Identifier"], [17, 2, 1, "", "Manufacturer"], [17, 2, 1, "", "Model"], [17, 2, 1, "", "conf"], [17, 5, 1, "", "finalize"], [17, 5, 1, "", "output_voltage"], [17, 5, 1, "", "set_voltage"]], "neclib.devices.device_base": [[18, 1, 1, "", "DeviceBase"]], "neclib.devices.device_base.DeviceBase": [[18, 2, 1, "", "Config"], [18, 2, 1, "", "Identifier"], [18, 2, 1, "", "Manufacturer"], [18, 2, 1, "", "Model"], [18, 2, 1, "", "conf"], [18, 5, 1, "", "finalize"]], "neclib.devices.encoder": [[20, 0, 0, "-", "encoder_base"], [21, 0, 0, "-", "nd287"]], "neclib.devices.encoder.encoder_base": [[20, 1, 1, "", "Encoder"]], "neclib.devices.encoder.encoder_base.Encoder": [[20, 2, 1, "", "Model"], [20, 2, 1, "", "conf"], [20, 5, 1, "", "finalize"], [20, 5, 1, "", "get_reading"]], "neclib.devices.encoder.nd287": [[21, 1, 1, "", "ND287"]], "neclib.devices.encoder.nd287.ND287": [[21, 2, 1, "", "Identifier"], [21, 2, 1, "", "Manufacturer"], [21, 2, 1, "", "Model"], [21, 2, 1, "", "conf"], [21, 5, 1, "", "finalize"], [21, 5, 1, "", "get_reading"]], "neclib.devices.motor": [[23, 0, 0, "-", "cpz7415v"], [24, 0, 0, "-", "motor_base"]], "neclib.devices.motor.cpz7415v": [[23, 1, 1, "", "CPZ7415V"]], "neclib.devices.motor.cpz7415v.CPZ7415V": [[23, 2, 1, "", "Identifier"], [23, 2, 1, "", "Manufacturer"], [23, 2, 1, "", "Model"], [23, 4, 1, "", "current_motion"], [23, 5, 1, "", "finalize"], [23, 5, 1, "", "get_speed"], [23, 5, 1, "", "get_step"], [23, 5, 1, "", "set_speed"], [23, 5, 1, "", "set_step"]], "neclib.devices.motor.motor_base": [[24, 1, 1, "", "Motor"]], "neclib.devices.motor.motor_base.Motor": [[24, 2, 1, "", "Manufacturer"], [24, 2, 1, "", "Model"], [24, 5, 1, "", "finalize"], [24, 5, 1, "", "get_speed"], [24, 5, 1, "", "get_step"], [24, 5, 1, "", "set_speed"], [24, 5, 1, "", "set_step"]], "neclib.devices.selector": [[25, 3, 1, "", "list_implementations"], [25, 3, 1, "", "parse_device_configuration"]], "neclib.devices.signal_generator": [[27, 0, 0, "-", "fsw0010"], [28, 0, 0, "-", "fsw0020"], [29, 0, 0, "-", "signal_generator_base"]], "neclib.devices.signal_generator.fsw0010": [[27, 1, 1, "", "FSW0010"]], "neclib.devices.signal_generator.fsw0010.FSW0010": [[27, 2, 1, "", "Identifier"], [27, 2, 1, "", "Manufacturer"], [27, 2, 1, "", "Model"], [27, 5, 1, "", "finalize"], [27, 5, 1, "", "get_freq"], [27, 5, 1, "", "get_output_status"], [27, 5, 1, "", "get_power"], [27, 5, 1, "", "set_freq"], [27, 5, 1, "", "set_power"], [27, 5, 1, "", "start_output"], [27, 5, 1, "", "stop_output"]], "neclib.devices.signal_generator.fsw0020": [[28, 1, 1, "", "FSW0020"]], "neclib.devices.signal_generator.fsw0020.FSW0020": [[28, 2, 1, "", "Identifier"], [28, 2, 1, "", "Manufacturer"], [28, 2, 1, "", "Model"], [28, 5, 1, "", "finalize"], [28, 5, 1, "", "get_freq"], [28, 5, 1, "", "get_output_status"], [28, 5, 1, "", "get_power"], [28, 5, 1, "", "set_freq"], [28, 5, 1, "", "set_power"], [28, 5, 1, "", "start_output"], [28, 5, 1, "", "stop_output"]], "neclib.devices.signal_generator.signal_generator_base": [[29, 1, 1, "", "SignalGenerator"]], "neclib.devices.signal_generator.signal_generator_base.SignalGenerator": [[29, 2, 1, "", "Manufacturer"], [29, 2, 1, "", "Model"], [29, 5, 1, "", "finalize"], [29, 5, 1, "", "get_freq"], [29, 5, 1, "", "get_output_status"], [29, 5, 1, "", "get_power"], [29, 5, 1, "", "set_freq"], [29, 5, 1, "", "set_power"], [29, 5, 1, "", "start_output"], [29, 5, 1, "", "stop_output"]], "neclib.devices.thermometer": [[31, 0, 0, "-", "model_218"], [32, 0, 0, "-", "thermometer_base"]], "neclib.devices.thermometer.model_218": [[31, 1, 1, "", "Model218"]], "neclib.devices.thermometer.model_218.Model218": [[31, 2, 1, "", "Identifier"], [31, 2, 1, "", "Manufacturer"], [31, 2, 1, "", "Model"], [31, 5, 1, "", "finalize"], [31, 5, 1, "", "get_temp"]], "neclib.devices.thermometer.thermometer_base": [[32, 1, 1, "", "Thermometer"]], "neclib.devices.thermometer.thermometer_base.Thermometer": [[32, 2, 1, "", "Manufacturer"], [32, 2, 1, "", "Model"], [32, 5, 1, "", "finalize"], [32, 5, 1, "", "get_temp"]], "neclib.devices.weather_station": [[34, 0, 0, "-", "tr73u"], [35, 0, 0, "-", "weather_station_base"]], "neclib.devices.weather_station.tr73u": [[34, 1, 1, "", "TR73U"]], "neclib.devices.weather_station.tr73u.TR73U": [[34, 2, 1, "", "Identifier"], [34, 2, 1, "", "Manufacturer"], [34, 2, 1, "", "Model"], [34, 5, 1, "", "finalize"], [34, 5, 1, "", "get_humid"], [34, 5, 1, "", "get_press"], [34, 5, 1, "", "get_temp"]], "neclib.devices.weather_station.weather_station_base": [[35, 1, 1, "", "WeatherStation"]], "neclib.devices.weather_station.weather_station_base.WeatherStation": [[35, 2, 1, "", "Manufacturer"], [35, 2, 1, "", "Model"], [35, 5, 1, "", "finalize"], [35, 5, 1, "", "get_humid"], [35, 5, 1, "", "get_press"], [35, 5, 1, "", "get_temp"]], "neclib.exceptions": [[36, 7, 1, "", "NECSTAuthorityError"], [36, 7, 1, "", "NECSTConfigurationError"], [36, 7, 1, "", "NECSTTimeoutError"]], "neclib.interfaces": [[38, 0, 0, "-", "console_logger"]], "neclib.interfaces.console_logger": [[38, 1, 1, "", "ColorizeLevelNameFormatter"], [38, 1, 1, "", "ConsoleLogger"], [38, 3, 1, "", "get_logger"]], "neclib.interfaces.console_logger.ColorizeLevelNameFormatter": [[38, 2, 1, "", "ColorPrefix"], [38, 5, 1, "", "format"]], "neclib.interfaces.console_logger.ConsoleLogger": [[38, 2, 1, "", "OBSERVE_level"], [38, 5, 1, "", "obslog"]], "neclib.parameters": [[40, 0, 0, "-", "obsparam"], [41, 0, 0, "-", "parser"], [44, 0, 0, "-", "pointing_error"]], "neclib.parameters.obsparam": [[40, 1, 1, "", "ObsParams"], [40, 3, 1, "", "interval"], [40, 3, 1, "", "off_point_coord"]], "neclib.parameters.obsparam.ObsParams": [[40, 2, 1, "", "ParameterName"], [40, 2, 1, "", "ParameterUnit"], [40, 5, 1, "", "hot_observation_interval"], [40, 5, 1, "", "off_observation_interval"], [40, 5, 1, "", "off_point_coord"]], "neclib.parameters.parser": [[42, 0, 0, "-", "obsparam_data"], [43, 0, 0, "-", "pointing_error_data"]], "neclib.parameters.parser.obsparam_data": [[42, 1, 1, "", "ObsParamData"]], "neclib.parameters.parser.obsparam_data.ObsParamData": [[42, 5, 1, "", "from_file"]], "neclib.parameters.parser.pointing_error_data": [[43, 1, 1, "", "PointingErrorData"]], "neclib.parameters.parser.pointing_error_data.PointingErrorData": [[43, 5, 1, "", "from_file"], [43, 5, 1, "", "from_text_file"]], "neclib.parameters.pointing_error": [[44, 1, 1, "", "PointingError"]], "neclib.parameters.pointing_error.PointingError": [[44, 5, 1, "", "apparent2refracted"], [44, 5, 1, "", "refracted2apparent"]], "neclib.recorders": [[46, 0, 0, "-", "console_log_writer"], [47, 0, 0, "-", "file_writer"], [48, 0, 0, "-", "necstdb_writer"], [49, 0, 0, "-", "recorder"], [50, 0, 0, "-", "writer_base"]], "neclib.recorders.console_log_writer": [[46, 1, 1, "", "ConsoleLogWriter"]], "neclib.recorders.console_log_writer.ConsoleLogWriter": [[46, 5, 1, "", "append"], [46, 5, 1, "", "start_recording"], [46, 5, 1, "", "stop_recording"]], "neclib.recorders.file_writer": [[47, 1, 1, "", "FileWriter"]], "neclib.recorders.file_writer.FileWriter": [[47, 5, 1, "", "append"], [47, 5, 1, "", "start_recording"], [47, 5, 1, "", "stop_recording"]], "neclib.recorders.necstdb_writer": [[48, 1, 1, "", "NECSTDBWriter"], [48, 3, 1, "", "parse_str_size"], [48, 3, 1, "", "str_to_bytes"]], "neclib.recorders.necstdb_writer.NECSTDBWriter": [[48, 2, 1, "", "DTypeConverters"], [48, 2, 1, "", "LivelinessDuration"], [48, 2, 1, "", "WarningQueueSize"], [48, 5, 1, "", "add_table"], [48, 5, 1, "", "append"], [48, 5, 1, "", "remove_table"], [48, 5, 1, "", "start_recording"], [48, 5, 1, "", "stop_recording"]], "neclib.recorders.recorder": [[49, 1, 1, "", "Recorder"]], "neclib.recorders.recorder.Recorder": [[49, 5, 1, "", "add_writer"], [49, 5, 1, "", "append"], [49, 5, 1, "", "drop_writer"], [49, 5, 1, "", "start_recording"], [49, 5, 1, "", "stop_recording"], [49, 4, 1, "", "writers"]], "neclib.recorders.writer_base": [[50, 1, 1, "", "Writer"]], "neclib.recorders.writer_base.Writer": [[50, 5, 1, "", "append"], [50, 5, 1, "", "start_recording"], [50, 5, 1, "", "stop_recording"]], "neclib.safety": [[52, 0, 0, "-", "decelerate"], [53, 0, 0, "-", "status"]], "neclib.safety.decelerate": [[52, 1, 1, "", "Decelerate"]], "neclib.safety.status": [[53, 1, 1, "", "Status"]], "neclib.simulators": [[55, 0, 0, "-", "antenna"]], "neclib.simulators.antenna": [[55, 1, 1, "", "AntennaEncoderEmulator"]], "neclib.simulators.antenna.AntennaEncoderEmulator": [[55, 2, 1, "", "ANGLE_UNIT"], [55, 4, 1, "", "abs_acceleration"], [55, 5, 1, "", "command"], [55, 4, 1, "", "dt"], [55, 5, 1, "", "read"]], "neclib.typing": [[56, 6, 1, "", "AngleUnit"], [56, 6, 1, "", "PathLike"]], "neclib.units": [[57, 6, 1, "", "point"], [57, 6, 1, "", "scan"], [57, 3, 1, "", "scan_to_point_equivalency"]], "neclib.utils": [[59, 0, 0, "-", "array_utils"], [60, 0, 0, "-", "data_utils"], [61, 0, 0, "-", "device_utils"], [62, 0, 0, "-", "math_utils"], [63, 0, 0, "-", "quantity_utils"], [64, 0, 0, "-", "simulator_utils"]], "neclib.utils.array_utils": [[59, 3, 1, "", "linear_sequence"]], "neclib.utils.data_utils": [[60, 1, 1, "", "AzElData"], [60, 1, 1, "", "ParameterList"], [60, 1, 1, "", "ParameterMapping"], [60, 1, 1, "", "ValueRange"], [60, 3, 1, "", "toCamelCase"], [60, 3, 1, "", "to_snake_case"]], "neclib.utils.data_utils.AzElData": [[60, 2, 1, "", "az"], [60, 2, 1, "", "el"]], "neclib.utils.data_utils.ParameterList": [[60, 5, 1, "", "copy"], [60, 5, 1, "", "map"], [60, 5, 1, "", "new"], [60, 5, 1, "", "push"]], "neclib.utils.data_utils.ParameterMapping": [[60, 5, 1, "", "copy"]], "neclib.utils.data_utils.ValueRange": [[60, 5, 1, "", "contain_all"], [60, 5, 1, "", "contain_any"], [60, 5, 1, "", "map"], [60, 4, 1, "", "width"]], "neclib.utils.device_utils": [[61, 1, 1, "", "busy"]], "neclib.utils.device_utils.busy": [[61, 4, 1, "", "busy"]], "neclib.utils.math_utils": [[62, 1, 1, "", "ConditionChecker"], [62, 3, 1, "", "clip"], [62, 3, 1, "", "counter"], [62, 3, 1, "", "discretize"], [62, 3, 1, "", "frange"]], "neclib.utils.math_utils.ConditionChecker": [[62, 5, 1, "", "check"]], "neclib.utils.quantity_utils": [[63, 3, 1, "", "angle_conversion_factor"], [63, 3, 1, "", "dAz2dx"], [63, 3, 1, "", "dx2dAz"], [63, 3, 1, "", "force_data_type"], [63, 3, 1, "", "get_quantity"], [63, 3, 1, "", "parse_quantity"], [63, 3, 1, "", "partially_convert_unit"], [63, 3, 1, "", "quantity2builtin"]], "neclib.utils.simulator_utils": [[64, 3, 1, "", "skip_on_simulator"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:property", "5": "py:method", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"neclib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68], "alias": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 58, 60, 62], "subpackag": [0, 11, 39], "submodul": [0, 2, 4, 9, 11, 12, 15, 19, 22, 26, 30, 33, 37, 39, 41, 45, 51, 54, 58], "configur": 1, "control": [2, 3], "antenna_pid": 3, "note": [3, 23, 42, 43, 47, 50, 54, 55, 57, 62, 63], "coordin": [4, 5, 6, 7, 8], "convert": 5, "frame": 6, "optim": 7, "path_find": 8, "data": [9, 10], "resiz": 10, "paramet": [10, 39, 40, 41, 42, 43, 44, 66, 67], "devic": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 68], "bias_read": [12, 13, 14], "bias_reader_bas": 13, "cpz3177": 14, "bias_sett": [15, 16, 17], "bias_setter_bas": 16, "cpz340816": 17, "device_bas": 18, "encod": [19, 20, 21], "encoder_bas": 20, "nd287": 21, "motor": [22, 23, 24], "cpz7415v": 23, "motor_bas": 24, "selector": 25, "signal_gener": [26, 27, 28, 29], "fsw0010": 27, "fsw0020": 28, "signal_generator_bas": 29, "thermomet": [30, 31, 32], "model_218": 31, "thermometer_bas": 32, "weather_st": [33, 34, 35], "tr73u": 34, "weather_station_bas": 35, "except": 36, "interfac": [37, 38], "console_logg": 38, "obsparam": 40, "parser": [41, 42, 43, 67], "obsparam_data": 42, "pointing_error_data": 43, "pointing_error": 44, "record": [45, 46, 47, 48, 49, 50], "console_log_writ": 46, "file_writ": 47, "necstdb_writ": 48, "writer_bas": 50, "safeti": [51, 52, 53], "deceler": 52, "statu": 53, "simul": [54, 55], "antenna": 55, "type": 56, "unit": 57, "util": [58, 59, 60, 61, 62, 63, 64], "array_util": 59, "data_util": 60, "device_util": 61, "math_util": 62, "quantity_util": 63, "simulator_util": 64, "featur": 65, "instal": 65, "usag": 65, "necst": 66, "config": 67, "The": 67, "file": 67, "locat": 67, "how": [67, 68], "defin": 67, "attach": 67, "us": 67, "specifi": 68, "name": 68, "model": 68, "add": 68, "i": 68, "o": 68, "class": 68, "definit": 68, "abstract": 68, "specif": 68, "implement": 68, "tutori": 69, "develop": 69}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"neclib": [[0, "module-neclib"], [65, "neclib"]], "Aliases": [[0, "aliases"], [1, "aliases"], [2, "aliases"], [3, "aliases"], [4, "aliases"], [5, "aliases"], [7, "aliases"], [8, "aliases"], [9, "aliases"], [12, "aliases"], [13, "aliases"], [14, "aliases"], [15, "aliases"], [16, "aliases"], [17, "aliases"], [18, "aliases"], [19, "aliases"], [20, "aliases"], [21, "aliases"], [22, "aliases"], [23, "aliases"], [24, "aliases"], [25, "aliases"], [26, "aliases"], [27, "aliases"], [28, "aliases"], [29, "aliases"], [30, "aliases"], [31, "aliases"], [32, "aliases"], [33, "aliases"], [34, "aliases"], [35, "aliases"], [37, "aliases"], [38, "aliases"], [39, "aliases"], [40, "aliases"], [41, "aliases"], [42, "aliases"], [43, "aliases"], [44, "aliases"], [45, "aliases"], [46, "aliases"], [47, "aliases"], [48, "aliases"], [49, "aliases"], [51, "aliases"], [54, "aliases"], [55, "aliases"], [58, "aliases"], [60, "aliases"], [62, "aliases"]], "Subpackages": [[0, "subpackages"], [11, "subpackages"], [39, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [15, "submodules"], [19, "submodules"], [22, "submodules"], [26, "submodules"], [30, "submodules"], [33, "submodules"], [37, "submodules"], [39, "submodules"], [41, "submodules"], [45, "submodules"], [51, "submodules"], [54, "submodules"], [58, "submodules"]], "neclib.configuration": [[1, "module-neclib.configuration"]], "neclib.controllers": [[2, "module-neclib.controllers"]], "neclib.controllers.antenna_pid": [[3, "module-neclib.controllers.antenna_pid"]], "Notes": [[3, null], [23, null], [42, null], [43, null], [47, null], [50, null], [54, null], [55, null], [55, null], [57, null], [62, null], [63, null], [63, null], [63, null]], "neclib.coordinates": [[4, "module-neclib.coordinates"]], "neclib.coordinates.convert": [[5, "module-neclib.coordinates.convert"]], "neclib.coordinates.frame": [[6, "module-neclib.coordinates.frame"]], "neclib.coordinates.optimize": [[7, "module-neclib.coordinates.optimize"]], "neclib.coordinates.path_finder": [[8, "module-neclib.coordinates.path_finder"]], "neclib.data": [[9, "module-neclib.data"]], "neclib.data.resize": [[10, "module-neclib.data.resize"]], "Parameter": [[10, "parameter"]], "neclib.devices": [[11, "module-neclib.devices"], [68, "neclib-devices"]], "neclib.devices.bias_reader": [[12, "module-neclib.devices.bias_reader"]], "neclib.devices.bias_reader.bias_reader_base": [[13, "module-neclib.devices.bias_reader.bias_reader_base"]], "neclib.devices.bias_reader.cpz3177": [[14, "module-neclib.devices.bias_reader.cpz3177"]], "neclib.devices.bias_setter": [[15, "module-neclib.devices.bias_setter"]], "neclib.devices.bias_setter.bias_setter_base": [[16, "module-neclib.devices.bias_setter.bias_setter_base"]], "neclib.devices.bias_setter.cpz340816": [[17, "module-neclib.devices.bias_setter.cpz340816"]], "neclib.devices.device_base": [[18, "module-neclib.devices.device_base"]], "neclib.devices.encoder": [[19, "module-neclib.devices.encoder"]], "neclib.devices.encoder.encoder_base": [[20, "module-neclib.devices.encoder.encoder_base"]], "neclib.devices.encoder.nd287": [[21, "module-neclib.devices.encoder.nd287"]], "neclib.devices.motor": [[22, "module-neclib.devices.motor"]], "neclib.devices.motor.cpz7415v": [[23, "module-neclib.devices.motor.cpz7415v"]], "neclib.devices.motor.motor_base": [[24, "module-neclib.devices.motor.motor_base"]], "neclib.devices.selector": [[25, "module-neclib.devices.selector"]], "neclib.devices.signal_generator": [[26, "module-neclib.devices.signal_generator"]], "neclib.devices.signal_generator.fsw0010": [[27, "module-neclib.devices.signal_generator.fsw0010"]], "neclib.devices.signal_generator.fsw0020": [[28, "module-neclib.devices.signal_generator.fsw0020"]], "neclib.devices.signal_generator.signal_generator_base": [[29, "module-neclib.devices.signal_generator.signal_generator_base"]], "neclib.devices.thermometer": [[30, "module-neclib.devices.thermometer"]], "neclib.devices.thermometer.model_218": [[31, "module-neclib.devices.thermometer.model_218"]], "neclib.devices.thermometer.thermometer_base": [[32, "module-neclib.devices.thermometer.thermometer_base"]], "neclib.devices.weather_station": [[33, "module-neclib.devices.weather_station"]], "neclib.devices.weather_station.tr73u": [[34, "module-neclib.devices.weather_station.tr73u"]], "neclib.devices.weather_station.weather_station_base": [[35, "module-neclib.devices.weather_station.weather_station_base"]], "neclib.exceptions": [[36, "module-neclib.exceptions"]], "neclib.interfaces": [[37, "module-neclib.interfaces"]], "neclib.interfaces.console_logger": [[38, "module-neclib.interfaces.console_logger"]], "neclib.parameters": [[39, "module-neclib.parameters"]], "neclib.parameters.obsparam": [[40, "module-neclib.parameters.obsparam"]], "neclib.parameters.parser": [[41, "module-neclib.parameters.parser"]], "neclib.parameters.parser.obsparam_data": [[42, "module-neclib.parameters.parser.obsparam_data"]], "neclib.parameters.parser.pointing_error_data": [[43, "module-neclib.parameters.parser.pointing_error_data"]], "neclib.parameters.pointing_error": [[44, "module-neclib.parameters.pointing_error"]], "neclib.recorders": [[45, "module-neclib.recorders"]], "neclib.recorders.console_log_writer": [[46, "module-neclib.recorders.console_log_writer"]], "neclib.recorders.file_writer": [[47, "module-neclib.recorders.file_writer"]], "neclib.recorders.necstdb_writer": [[48, "module-neclib.recorders.necstdb_writer"]], "neclib.recorders.recorder": [[49, "module-neclib.recorders.recorder"]], "neclib.recorders.writer_base": [[50, "module-neclib.recorders.writer_base"]], "neclib.safety": [[51, "module-neclib.safety"]], "neclib.safety.decelerate": [[52, "module-neclib.safety.decelerate"]], "neclib.safety.status": [[53, "module-neclib.safety.status"]], "neclib.simulators": [[54, "module-neclib.simulators"]], "neclib.simulators.antenna": [[55, "module-neclib.simulators.antenna"]], "neclib.typing": [[56, "module-neclib.typing"]], "neclib.units": [[57, "module-neclib.units"]], "neclib.utils": [[58, "module-neclib.utils"]], "neclib.utils.array_utils": [[59, "module-neclib.utils.array_utils"]], "neclib.utils.data_utils": [[60, "module-neclib.utils.data_utils"]], "neclib.utils.device_utils": [[61, "module-neclib.utils.device_utils"]], "neclib.utils.math_utils": [[62, "module-neclib.utils.math_utils"]], "neclib.utils.quantity_utils": [[63, "module-neclib.utils.quantity_utils"]], "neclib.utils.simulator_utils": [[64, "module-neclib.utils.simulator_utils"]], "Features": [[65, "features"]], "Installation": [[65, "installation"]], "Usage": [[65, "usage"]], "NECST Parameters": [[66, "necst-parameters"]], "neclib.config": [[67, "neclib-config"]], "The config file": [[67, "the-config-file"]], "Location of the file": [[67, "location-of-the-file"]], "How to define parameters": [[67, "how-to-define-parameters"]], "Attach parsers": [[67, "attach-parsers"]], "How to use the parameters": [[67, "how-to-use-the-parameters"]], "How to specify the devices": [[68, "how-to-specify-the-devices"]], "Device name": [[68, "device-name"]], "Device model": [[68, "device-model"]], "How to add device I/O class": [[68, "how-to-add-device-i-o-class"]], "Definition of abstract device": [[68, "definition-of-abstract-device"]], "Device-specific implementation": [[68, "device-specific-implementation"]], "Tutorials for developers": [[69, "tutorials-for-developers"]]}, "indexentries": {"envvarname (class in neclib)": [[0, "neclib.EnvVarName"]], "domain_id (envvarname attribute)": [[0, "neclib.EnvVarName.domain_id"]], "module": [[0, "module-neclib"], [1, "module-neclib.configuration"], [2, "module-neclib.controllers"], [3, "module-neclib.controllers.antenna_pid"], [4, "module-neclib.coordinates"], [5, "module-neclib.coordinates.convert"], [6, "module-neclib.coordinates.frame"], [7, "module-neclib.coordinates.optimize"], [8, "module-neclib.coordinates.path_finder"], [9, "module-neclib.data"], [10, "module-neclib.data.resize"], [11, "module-neclib.devices"], [12, "module-neclib.devices.bias_reader"], [13, "module-neclib.devices.bias_reader.bias_reader_base"], [14, "module-neclib.devices.bias_reader.cpz3177"], [15, "module-neclib.devices.bias_setter"], [16, "module-neclib.devices.bias_setter.bias_setter_base"], [17, "module-neclib.devices.bias_setter.cpz340816"], [18, "module-neclib.devices.device_base"], [19, "module-neclib.devices.encoder"], [20, "module-neclib.devices.encoder.encoder_base"], [21, "module-neclib.devices.encoder.nd287"], [22, "module-neclib.devices.motor"], [23, "module-neclib.devices.motor.cpz7415v"], [24, "module-neclib.devices.motor.motor_base"], [25, "module-neclib.devices.selector"], [26, "module-neclib.devices.signal_generator"], [27, "module-neclib.devices.signal_generator.fsw0010"], [28, "module-neclib.devices.signal_generator.fsw0020"], [29, "module-neclib.devices.signal_generator.signal_generator_base"], [30, "module-neclib.devices.thermometer"], [31, "module-neclib.devices.thermometer.model_218"], [32, "module-neclib.devices.thermometer.thermometer_base"], [33, "module-neclib.devices.weather_station"], [34, "module-neclib.devices.weather_station.tr73u"], [35, "module-neclib.devices.weather_station.weather_station_base"], [36, "module-neclib.exceptions"], [37, "module-neclib.interfaces"], [38, "module-neclib.interfaces.console_logger"], [39, "module-neclib.parameters"], [40, "module-neclib.parameters.obsparam"], [41, "module-neclib.parameters.parser"], [42, "module-neclib.parameters.parser.obsparam_data"], [43, "module-neclib.parameters.parser.pointing_error_data"], [44, "module-neclib.parameters.pointing_error"], [45, "module-neclib.recorders"], [46, "module-neclib.recorders.console_log_writer"], [47, "module-neclib.recorders.file_writer"], [48, "module-neclib.recorders.necstdb_writer"], [49, "module-neclib.recorders.recorder"], [50, "module-neclib.recorders.writer_base"], [51, "module-neclib.safety"], [52, "module-neclib.safety.decelerate"], [53, "module-neclib.safety.status"], [54, "module-neclib.simulators"], [55, "module-neclib.simulators.antenna"], [56, "module-neclib.typing"], [57, "module-neclib.units"], [58, "module-neclib.utils"], [59, "module-neclib.utils.array_utils"], [60, "module-neclib.utils.data_utils"], [61, "module-neclib.utils.device_utils"], [62, "module-neclib.utils.math_utils"], [63, "module-neclib.utils.quantity_utils"], [64, "module-neclib.utils.simulator_utils"]], "neclib": [[0, "module-neclib"]], "necst_root (envvarname attribute)": [[0, "neclib.EnvVarName.necst_root"]], "record_root (envvarname attribute)": [[0, "neclib.EnvVarName.record_root"]], "ros2_ws (envvarname attribute)": [[0, "neclib.EnvVarName.ros2_ws"]], "configure() (in module neclib.configuration)": [[1, "neclib.configuration.configure"]], "neclib.configuration": [[1, "module-neclib.configuration"]], "neclib.controllers": [[2, "module-neclib.controllers"]], "angle_unit (pidcontroller attribute)": [[3, "neclib.controllers.antenna_pid.PIDController.ANGLE_UNIT"]], "pidcontroller (class in neclib.controllers.antenna_pid)": [[3, "neclib.controllers.antenna_pid.PIDController"]], "dt (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.dt"]], "error_derivative (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.error_derivative"]], "error_integral (pidcontroller property)": [[3, "neclib.controllers.antenna_pid.PIDController.error_integral"]], "get_speed() (pidcontroller method)": [[3, "neclib.controllers.antenna_pid.PIDController.get_speed"]], "neclib.controllers.antenna_pid": [[3, "module-neclib.controllers.antenna_pid"]], "params() (pidcontroller method)": [[3, "neclib.controllers.antenna_pid.PIDController.params"]], "neclib.coordinates": [[4, "module-neclib.coordinates"]], "coordcalculator (class in neclib.coordinates.convert)": [[5, "neclib.coordinates.convert.CoordCalculator"]], "get_altaz() (coordcalculator method)": [[5, "neclib.coordinates.convert.CoordCalculator.get_altaz"]], "get_altaz_by_name() (coordcalculator method)": [[5, "neclib.coordinates.convert.CoordCalculator.get_altaz_by_name"]], "neclib.coordinates.convert": [[5, "module-neclib.coordinates.convert"]], "obswl (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.obswl"]], "pressure (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.pressure"]], "relative_humidity (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.relative_humidity"]], "temperature (coordcalculator attribute)": [[5, "neclib.coordinates.convert.CoordCalculator.temperature"]], "describe_frame() (in module neclib.coordinates.frame)": [[6, "neclib.coordinates.frame.describe_frame"]], "neclib.coordinates.frame": [[6, "module-neclib.coordinates.frame"]], "parse_frame() (in module neclib.coordinates.frame)": [[6, "neclib.coordinates.frame.parse_frame"]], "drivelimitchecker (class in neclib.coordinates.optimize)": [[7, "neclib.coordinates.optimize.DriveLimitChecker"]], "neclib.coordinates.optimize": [[7, "module-neclib.coordinates.optimize"]], "optimize() (drivelimitchecker method)": [[7, "neclib.coordinates.optimize.DriveLimitChecker.optimize"]], "pathfinder (class in neclib.coordinates.path_finder)": [[8, "neclib.coordinates.path_finder.PathFinder"]], "linear() (pathfinder method)": [[8, "neclib.coordinates.path_finder.PathFinder.linear"]], "neclib.coordinates.path_finder": [[8, "module-neclib.coordinates.path_finder"]], "standby_position() (in module neclib.coordinates.path_finder)": [[8, "neclib.coordinates.path_finder.standby_position"]], "neclib.data": [[9, "module-neclib.data"]], "resize (class in neclib.data.resize)": [[10, "neclib.data.resize.Resize"]], "get() (resize method)": [[10, "neclib.data.resize.Resize.get"]], "neclib.data.resize": [[10, "module-neclib.data.resize"]], "push() (resize method)": [[10, "neclib.data.resize.Resize.push"]], "implementations (in module neclib.devices)": [[11, "neclib.devices.implementations"]], "neclib.devices": [[11, "module-neclib.devices"]], "parsed (in module neclib.devices)": [[11, "neclib.devices.parsed"]], "neclib.devices.bias_reader": [[12, "module-neclib.devices.bias_reader"]], "biasreader (class in neclib.devices.bias_reader.bias_reader_base)": [[13, "neclib.devices.bias_reader.bias_reader_base.BiasReader"]], "manufacturer (biasreader attribute)": [[13, "neclib.devices.bias_reader.bias_reader_base.BiasReader.Manufacturer"]], "model (biasreader attribute)": [[13, "neclib.devices.bias_reader.bias_reader_base.BiasReader.Model"]], "finalize() (biasreader method)": [[13, "neclib.devices.bias_reader.bias_reader_base.BiasReader.finalize"]], "get_bias_current() (biasreader method)": [[13, "neclib.devices.bias_reader.bias_reader_base.BiasReader.get_bias_current"]], "get_bias_voltage() (biasreader method)": [[13, "neclib.devices.bias_reader.bias_reader_base.BiasReader.get_bias_voltage"]], "neclib.devices.bias_reader.bias_reader_base": [[13, "module-neclib.devices.bias_reader.bias_reader_base"]], "cpz3177 (class in neclib.devices.bias_reader.cpz3177)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177"]], "identifier (cpz3177 attribute)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.Identifier"]], "manufacturer (cpz3177 attribute)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.Manufacturer"]], "model (cpz3177 attribute)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.Model"]], "conf (cpz3177 attribute)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.conf"]], "finalize() (cpz3177 method)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.finalize"]], "get_bias_current() (cpz3177 method)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.get_bias_current"]], "get_bias_voltage() (cpz3177 method)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.get_bias_voltage"]], "get_data() (cpz3177 method)": [[14, "neclib.devices.bias_reader.cpz3177.CPZ3177.get_data"]], "neclib.devices.bias_reader.cpz3177": [[14, "module-neclib.devices.bias_reader.cpz3177"]], "neclib.devices.bias_setter": [[15, "module-neclib.devices.bias_setter"]], "biassetter (class in neclib.devices.bias_setter.bias_setter_base)": [[16, "neclib.devices.bias_setter.bias_setter_base.BiasSetter"]], "manufacturer (biassetter attribute)": [[16, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.Manufacturer"]], "model (biassetter attribute)": [[16, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.Model"]], "finalize() (biassetter method)": [[16, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.finalize"]], "neclib.devices.bias_setter.bias_setter_base": [[16, "module-neclib.devices.bias_setter.bias_setter_base"]], "output_voltage() (biassetter method)": [[16, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.output_voltage"]], "set_voltage() (biassetter method)": [[16, "neclib.devices.bias_setter.bias_setter_base.BiasSetter.set_voltage"]], "cpz340816 (class in neclib.devices.bias_setter.cpz340816)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816"]], "identifier (cpz340816 attribute)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.Identifier"]], "manufacturer (cpz340816 attribute)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.Manufacturer"]], "model (cpz340816 attribute)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.Model"]], "conf (cpz340816 attribute)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.conf"]], "finalize() (cpz340816 method)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.finalize"]], "neclib.devices.bias_setter.cpz340816": [[17, "module-neclib.devices.bias_setter.cpz340816"]], "output_voltage() (cpz340816 method)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.output_voltage"]], "set_voltage() (cpz340816 method)": [[17, "neclib.devices.bias_setter.cpz340816.CPZ340816.set_voltage"]], "config (devicebase attribute)": [[18, "neclib.devices.device_base.DeviceBase.Config"]], "devicebase (class in neclib.devices.device_base)": [[18, "neclib.devices.device_base.DeviceBase"]], "identifier (devicebase attribute)": [[18, "neclib.devices.device_base.DeviceBase.Identifier"]], "manufacturer (devicebase attribute)": [[18, "neclib.devices.device_base.DeviceBase.Manufacturer"]], "model (devicebase attribute)": [[18, "neclib.devices.device_base.DeviceBase.Model"]], "conf (devicebase attribute)": [[18, "neclib.devices.device_base.DeviceBase.conf"]], "finalize() (devicebase method)": [[18, "neclib.devices.device_base.DeviceBase.finalize"]], "neclib.devices.device_base": [[18, "module-neclib.devices.device_base"]], "neclib.devices.encoder": [[19, "module-neclib.devices.encoder"]], "encoder (class in neclib.devices.encoder.encoder_base)": [[20, "neclib.devices.encoder.encoder_base.Encoder"]], "model (encoder attribute)": [[20, "neclib.devices.encoder.encoder_base.Encoder.Model"]], "conf (encoder attribute)": [[20, "neclib.devices.encoder.encoder_base.Encoder.conf"]], "finalize() (encoder method)": [[20, "neclib.devices.encoder.encoder_base.Encoder.finalize"]], "get_reading() (encoder method)": [[20, "neclib.devices.encoder.encoder_base.Encoder.get_reading"]], "neclib.devices.encoder.encoder_base": [[20, "module-neclib.devices.encoder.encoder_base"]], "identifier (nd287 attribute)": [[21, "neclib.devices.encoder.nd287.ND287.Identifier"]], "manufacturer (nd287 attribute)": [[21, "neclib.devices.encoder.nd287.ND287.Manufacturer"]], "model (nd287 attribute)": [[21, "neclib.devices.encoder.nd287.ND287.Model"]], "nd287 (class in neclib.devices.encoder.nd287)": [[21, "neclib.devices.encoder.nd287.ND287"]], "conf (nd287 attribute)": [[21, "neclib.devices.encoder.nd287.ND287.conf"]], "finalize() (nd287 method)": [[21, "neclib.devices.encoder.nd287.ND287.finalize"]], "get_reading() (nd287 method)": [[21, "neclib.devices.encoder.nd287.ND287.get_reading"]], "neclib.devices.encoder.nd287": [[21, "module-neclib.devices.encoder.nd287"]], "neclib.devices.motor": [[22, "module-neclib.devices.motor"]], "cpz7415v (class in neclib.devices.motor.cpz7415v)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V"]], "identifier (cpz7415v attribute)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.Identifier"]], "manufacturer (cpz7415v attribute)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.Manufacturer"]], "model (cpz7415v attribute)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.Model"]], "current_motion (cpz7415v property)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.current_motion"]], "finalize() (cpz7415v method)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.finalize"]], "get_speed() (cpz7415v method)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.get_speed"]], "get_step() (cpz7415v method)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.get_step"]], "neclib.devices.motor.cpz7415v": [[23, "module-neclib.devices.motor.cpz7415v"]], "set_speed() (cpz7415v method)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.set_speed"]], "set_step() (cpz7415v method)": [[23, "neclib.devices.motor.cpz7415v.CPZ7415V.set_step"]], "manufacturer (motor attribute)": [[24, "neclib.devices.motor.motor_base.Motor.Manufacturer"]], "model (motor attribute)": [[24, "neclib.devices.motor.motor_base.Motor.Model"]], "motor (class in neclib.devices.motor.motor_base)": [[24, "neclib.devices.motor.motor_base.Motor"]], "finalize() (motor method)": [[24, "neclib.devices.motor.motor_base.Motor.finalize"]], "get_speed() (motor method)": [[24, "neclib.devices.motor.motor_base.Motor.get_speed"]], "get_step() (motor method)": [[24, "neclib.devices.motor.motor_base.Motor.get_step"]], "neclib.devices.motor.motor_base": [[24, "module-neclib.devices.motor.motor_base"]], "set_speed() (motor method)": [[24, "neclib.devices.motor.motor_base.Motor.set_speed"]], "set_step() (motor method)": [[24, "neclib.devices.motor.motor_base.Motor.set_step"]], "list_implementations() (in module neclib.devices.selector)": [[25, "neclib.devices.selector.list_implementations"]], "neclib.devices.selector": [[25, "module-neclib.devices.selector"]], "parse_device_configuration() (in module neclib.devices.selector)": [[25, "neclib.devices.selector.parse_device_configuration"]], "neclib.devices.signal_generator": [[26, "module-neclib.devices.signal_generator"]], "fsw0010 (class in neclib.devices.signal_generator.fsw0010)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010"]], "identifier (fsw0010 attribute)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.Identifier"]], "manufacturer (fsw0010 attribute)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.Manufacturer"]], "model (fsw0010 attribute)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.Model"]], "finalize() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.finalize"]], "get_freq() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.get_freq"]], "get_output_status() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.get_output_status"]], "get_power() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.get_power"]], "neclib.devices.signal_generator.fsw0010": [[27, "module-neclib.devices.signal_generator.fsw0010"]], "set_freq() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.set_freq"]], "set_power() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.set_power"]], "start_output() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.start_output"]], "stop_output() (fsw0010 method)": [[27, "neclib.devices.signal_generator.fsw0010.FSW0010.stop_output"]], "fsw0020 (class in neclib.devices.signal_generator.fsw0020)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020"]], "identifier (fsw0020 attribute)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.Identifier"]], "manufacturer (fsw0020 attribute)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.Manufacturer"]], "model (fsw0020 attribute)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.Model"]], "finalize() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.finalize"]], "get_freq() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.get_freq"]], "get_output_status() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.get_output_status"]], "get_power() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.get_power"]], "neclib.devices.signal_generator.fsw0020": [[28, "module-neclib.devices.signal_generator.fsw0020"]], "set_freq() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.set_freq"]], "set_power() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.set_power"]], "start_output() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.start_output"]], "stop_output() (fsw0020 method)": [[28, "neclib.devices.signal_generator.fsw0020.FSW0020.stop_output"]], "manufacturer (signalgenerator attribute)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.Manufacturer"]], "model (signalgenerator attribute)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.Model"]], "signalgenerator (class in neclib.devices.signal_generator.signal_generator_base)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator"]], "finalize() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.finalize"]], "get_freq() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_freq"]], "get_output_status() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_output_status"]], "get_power() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_power"]], "neclib.devices.signal_generator.signal_generator_base": [[29, "module-neclib.devices.signal_generator.signal_generator_base"]], "set_freq() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.set_freq"]], "set_power() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.set_power"]], "start_output() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.start_output"]], "stop_output() (signalgenerator method)": [[29, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.stop_output"]], "neclib.devices.thermometer": [[30, "module-neclib.devices.thermometer"]], "identifier (model218 attribute)": [[31, "neclib.devices.thermometer.model_218.Model218.Identifier"]], "manufacturer (model218 attribute)": [[31, "neclib.devices.thermometer.model_218.Model218.Manufacturer"]], "model (model218 attribute)": [[31, "neclib.devices.thermometer.model_218.Model218.Model"]], "model218 (class in neclib.devices.thermometer.model_218)": [[31, "neclib.devices.thermometer.model_218.Model218"]], "finalize() (model218 method)": [[31, "neclib.devices.thermometer.model_218.Model218.finalize"]], "get_temp() (model218 method)": [[31, "neclib.devices.thermometer.model_218.Model218.get_temp"]], "neclib.devices.thermometer.model_218": [[31, "module-neclib.devices.thermometer.model_218"]], "manufacturer (thermometer attribute)": [[32, "neclib.devices.thermometer.thermometer_base.Thermometer.Manufacturer"]], "model (thermometer attribute)": [[32, "neclib.devices.thermometer.thermometer_base.Thermometer.Model"]], "thermometer (class in neclib.devices.thermometer.thermometer_base)": [[32, "neclib.devices.thermometer.thermometer_base.Thermometer"]], "finalize() (thermometer method)": [[32, "neclib.devices.thermometer.thermometer_base.Thermometer.finalize"]], "get_temp() (thermometer method)": [[32, "neclib.devices.thermometer.thermometer_base.Thermometer.get_temp"]], "neclib.devices.thermometer.thermometer_base": [[32, "module-neclib.devices.thermometer.thermometer_base"]], "neclib.devices.weather_station": [[33, "module-neclib.devices.weather_station"]], "identifier (tr73u attribute)": [[34, "neclib.devices.weather_station.tr73u.TR73U.Identifier"]], "manufacturer (tr73u attribute)": [[34, "neclib.devices.weather_station.tr73u.TR73U.Manufacturer"]], "model (tr73u attribute)": [[34, "neclib.devices.weather_station.tr73u.TR73U.Model"]], "tr73u (class in neclib.devices.weather_station.tr73u)": [[34, "neclib.devices.weather_station.tr73u.TR73U"]], "finalize() (tr73u method)": [[34, "neclib.devices.weather_station.tr73u.TR73U.finalize"]], "get_humid() (tr73u method)": [[34, "neclib.devices.weather_station.tr73u.TR73U.get_humid"]], "get_press() (tr73u method)": [[34, "neclib.devices.weather_station.tr73u.TR73U.get_press"]], "get_temp() (tr73u method)": [[34, "neclib.devices.weather_station.tr73u.TR73U.get_temp"]], "neclib.devices.weather_station.tr73u": [[34, "module-neclib.devices.weather_station.tr73u"]], "manufacturer (weatherstation attribute)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation.Manufacturer"]], "model (weatherstation attribute)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation.Model"]], "weatherstation (class in neclib.devices.weather_station.weather_station_base)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation"]], "finalize() (weatherstation method)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation.finalize"]], "get_humid() (weatherstation method)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_humid"]], "get_press() (weatherstation method)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_press"]], "get_temp() (weatherstation method)": [[35, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_temp"]], "neclib.devices.weather_station.weather_station_base": [[35, "module-neclib.devices.weather_station.weather_station_base"]], "necstauthorityerror": [[36, "neclib.exceptions.NECSTAuthorityError"]], "necstconfigurationerror": [[36, "neclib.exceptions.NECSTConfigurationError"]], "necsttimeouterror": [[36, "neclib.exceptions.NECSTTimeoutError"]], "neclib.exceptions": [[36, "module-neclib.exceptions"]], "neclib.interfaces": [[37, "module-neclib.interfaces"]], "colorprefix (colorizelevelnameformatter attribute)": [[38, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter.ColorPrefix"]], "colorizelevelnameformatter (class in neclib.interfaces.console_logger)": [[38, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter"]], "consolelogger (class in neclib.interfaces.console_logger)": [[38, "neclib.interfaces.console_logger.ConsoleLogger"]], "observe_level (consolelogger attribute)": [[38, "neclib.interfaces.console_logger.ConsoleLogger.OBSERVE_level"]], "format() (colorizelevelnameformatter method)": [[38, "neclib.interfaces.console_logger.ColorizeLevelNameFormatter.format"]], "get_logger() (in module neclib.interfaces.console_logger)": [[38, "neclib.interfaces.console_logger.get_logger"]], "neclib.interfaces.console_logger": [[38, "module-neclib.interfaces.console_logger"]], "obslog() (consolelogger method)": [[38, "neclib.interfaces.console_logger.ConsoleLogger.obslog"]], "neclib.parameters": [[39, "module-neclib.parameters"]], "obsparams (class in neclib.parameters.obsparam)": [[40, "neclib.parameters.obsparam.ObsParams"]], "parametername (obsparams attribute)": [[40, "neclib.parameters.obsparam.ObsParams.ParameterName"]], "parameterunit (obsparams attribute)": [[40, "neclib.parameters.obsparam.ObsParams.ParameterUnit"]], "hot_observation_interval() (obsparams method)": [[40, "neclib.parameters.obsparam.ObsParams.hot_observation_interval"]], "interval() (in module neclib.parameters.obsparam)": [[40, "neclib.parameters.obsparam.interval"]], "neclib.parameters.obsparam": [[40, "module-neclib.parameters.obsparam"]], "off_observation_interval() (obsparams method)": [[40, "neclib.parameters.obsparam.ObsParams.off_observation_interval"]], "off_point_coord() (obsparams method)": [[40, "neclib.parameters.obsparam.ObsParams.off_point_coord"]], "off_point_coord() (in module neclib.parameters.obsparam)": [[40, "neclib.parameters.obsparam.off_point_coord"]], "neclib.parameters.parser": [[41, "module-neclib.parameters.parser"]], "obsparamdata (class in neclib.parameters.parser.obsparam_data)": [[42, "neclib.parameters.parser.obsparam_data.ObsParamData"]], "from_file() (obsparamdata class method)": [[42, "neclib.parameters.parser.obsparam_data.ObsParamData.from_file"]], "neclib.parameters.parser.obsparam_data": [[42, "module-neclib.parameters.parser.obsparam_data"]], "pointingerrordata (class in neclib.parameters.parser.pointing_error_data)": [[43, "neclib.parameters.parser.pointing_error_data.PointingErrorData"]], "from_file() (pointingerrordata class method)": [[43, "neclib.parameters.parser.pointing_error_data.PointingErrorData.from_file"]], "from_text_file() (pointingerrordata class method)": [[43, "neclib.parameters.parser.pointing_error_data.PointingErrorData.from_text_file"]], "neclib.parameters.parser.pointing_error_data": [[43, "module-neclib.parameters.parser.pointing_error_data"]], "pointingerror (class in neclib.parameters.pointing_error)": [[44, "neclib.parameters.pointing_error.PointingError"]], "apparent2refracted() (pointingerror method)": [[44, "neclib.parameters.pointing_error.PointingError.apparent2refracted"]], "neclib.parameters.pointing_error": [[44, "module-neclib.parameters.pointing_error"]], "refracted2apparent() (pointingerror method)": [[44, "neclib.parameters.pointing_error.PointingError.refracted2apparent"]], "neclib.recorders": [[45, "module-neclib.recorders"]], "consolelogwriter (class in neclib.recorders.console_log_writer)": [[46, "neclib.recorders.console_log_writer.ConsoleLogWriter"]], "append() (consolelogwriter method)": [[46, "neclib.recorders.console_log_writer.ConsoleLogWriter.append"]], "neclib.recorders.console_log_writer": [[46, "module-neclib.recorders.console_log_writer"]], "start_recording() (consolelogwriter method)": [[46, "neclib.recorders.console_log_writer.ConsoleLogWriter.start_recording"]], "stop_recording() (consolelogwriter method)": [[46, "neclib.recorders.console_log_writer.ConsoleLogWriter.stop_recording"]], "filewriter (class in neclib.recorders.file_writer)": [[47, "neclib.recorders.file_writer.FileWriter"]], "append() (filewriter method)": [[47, "neclib.recorders.file_writer.FileWriter.append"]], "neclib.recorders.file_writer": [[47, "module-neclib.recorders.file_writer"]], "start_recording() (filewriter method)": [[47, "neclib.recorders.file_writer.FileWriter.start_recording"]], "stop_recording() (filewriter method)": [[47, "neclib.recorders.file_writer.FileWriter.stop_recording"]], "dtypeconverters (necstdbwriter attribute)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.DTypeConverters"]], "livelinessduration (necstdbwriter attribute)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.LivelinessDuration"]], "necstdbwriter (class in neclib.recorders.necstdb_writer)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter"]], "warningqueuesize (necstdbwriter attribute)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.WarningQueueSize"]], "add_table() (necstdbwriter method)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.add_table"]], "append() (necstdbwriter method)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.append"]], "neclib.recorders.necstdb_writer": [[48, "module-neclib.recorders.necstdb_writer"]], "parse_str_size() (in module neclib.recorders.necstdb_writer)": [[48, "neclib.recorders.necstdb_writer.parse_str_size"]], "remove_table() (necstdbwriter method)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.remove_table"]], "start_recording() (necstdbwriter method)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.start_recording"]], "stop_recording() (necstdbwriter method)": [[48, "neclib.recorders.necstdb_writer.NECSTDBWriter.stop_recording"]], "str_to_bytes() (in module neclib.recorders.necstdb_writer)": [[48, "neclib.recorders.necstdb_writer.str_to_bytes"]], "recorder (class in neclib.recorders.recorder)": [[49, "neclib.recorders.recorder.Recorder"]], "add_writer() (recorder method)": [[49, "neclib.recorders.recorder.Recorder.add_writer"]], "append() (recorder method)": [[49, "neclib.recorders.recorder.Recorder.append"]], "drop_writer() (recorder method)": [[49, "neclib.recorders.recorder.Recorder.drop_writer"]], "neclib.recorders.recorder": [[49, "module-neclib.recorders.recorder"]], "start_recording() (recorder method)": [[49, "neclib.recorders.recorder.Recorder.start_recording"]], "stop_recording() (recorder method)": [[49, "neclib.recorders.recorder.Recorder.stop_recording"]], "writers (recorder property)": [[49, "neclib.recorders.recorder.Recorder.writers"]], "writer (class in neclib.recorders.writer_base)": [[50, "neclib.recorders.writer_base.Writer"]], "append() (writer method)": [[50, "neclib.recorders.writer_base.Writer.append"]], "neclib.recorders.writer_base": [[50, "module-neclib.recorders.writer_base"]], "start_recording() (writer method)": [[50, "neclib.recorders.writer_base.Writer.start_recording"]], "stop_recording() (writer method)": [[50, "neclib.recorders.writer_base.Writer.stop_recording"]], "neclib.safety": [[51, "module-neclib.safety"]], "decelerate (class in neclib.safety.decelerate)": [[52, "neclib.safety.decelerate.Decelerate"]], "neclib.safety.decelerate": [[52, "module-neclib.safety.decelerate"]], "status (class in neclib.safety.status)": [[53, "neclib.safety.status.Status"]], "neclib.safety.status": [[53, "module-neclib.safety.status"]], "neclib.simulators": [[54, "module-neclib.simulators"]], "angle_unit (antennaencoderemulator attribute)": [[55, "neclib.simulators.antenna.AntennaEncoderEmulator.ANGLE_UNIT"]], "antennaencoderemulator (class in neclib.simulators.antenna)": [[55, "neclib.simulators.antenna.AntennaEncoderEmulator"]], "abs_acceleration (antennaencoderemulator property)": [[55, "neclib.simulators.antenna.AntennaEncoderEmulator.abs_acceleration"]], "command() (antennaencoderemulator method)": [[55, "neclib.simulators.antenna.AntennaEncoderEmulator.command"]], "dt (antennaencoderemulator property)": [[55, "neclib.simulators.antenna.AntennaEncoderEmulator.dt"]], "neclib.simulators.antenna": [[55, "module-neclib.simulators.antenna"]], "read() (antennaencoderemulator method)": [[55, "neclib.simulators.antenna.AntennaEncoderEmulator.read"]], "angleunit (in module neclib.typing)": [[56, "neclib.typing.AngleUnit"]], "pathlike (in module neclib.typing)": [[56, "neclib.typing.PathLike"]], "neclib.typing": [[56, "module-neclib.typing"]], "neclib.units": [[57, "module-neclib.units"]], "point (in module neclib.units)": [[57, "neclib.units.point"]], "scan (in module neclib.units)": [[57, "neclib.units.scan"]], "scan_to_point_equivalency() (in module neclib.units)": [[57, "neclib.units.scan_to_point_equivalency"]], "neclib.utils": [[58, "module-neclib.utils"]], "linear_sequence() (in module neclib.utils.array_utils)": [[59, "neclib.utils.array_utils.linear_sequence"]], "neclib.utils.array_utils": [[59, "module-neclib.utils.array_utils"]], "azeldata (class in neclib.utils.data_utils)": [[60, "neclib.utils.data_utils.AzElData"]], "parameterlist (class in neclib.utils.data_utils)": [[60, "neclib.utils.data_utils.ParameterList"]], "parametermapping (class in neclib.utils.data_utils)": [[60, "neclib.utils.data_utils.ParameterMapping"]], "valuerange (class in neclib.utils.data_utils)": [[60, "neclib.utils.data_utils.ValueRange"]], "az (azeldata attribute)": [[60, "neclib.utils.data_utils.AzElData.az"]], "contain_all() (valuerange method)": [[60, "neclib.utils.data_utils.ValueRange.contain_all"]], "contain_any() (valuerange method)": [[60, "neclib.utils.data_utils.ValueRange.contain_any"]], "copy() (parameterlist method)": [[60, "neclib.utils.data_utils.ParameterList.copy"]], "copy() (parametermapping method)": [[60, "neclib.utils.data_utils.ParameterMapping.copy"]], "el (azeldata attribute)": [[60, "neclib.utils.data_utils.AzElData.el"]], "map() (parameterlist method)": [[60, "neclib.utils.data_utils.ParameterList.map"]], "map() (valuerange method)": [[60, "neclib.utils.data_utils.ValueRange.map"]], "neclib.utils.data_utils": [[60, "module-neclib.utils.data_utils"]], "new() (parameterlist class method)": [[60, "neclib.utils.data_utils.ParameterList.new"]], "push() (parameterlist method)": [[60, "neclib.utils.data_utils.ParameterList.push"]], "tocamelcase() (in module neclib.utils.data_utils)": [[60, "neclib.utils.data_utils.toCamelCase"]], "to_snake_case() (in module neclib.utils.data_utils)": [[60, "neclib.utils.data_utils.to_snake_case"]], "width (valuerange property)": [[60, "neclib.utils.data_utils.ValueRange.width"]], "busy (busy property)": [[61, "neclib.utils.device_utils.busy.busy"]], "busy (class in neclib.utils.device_utils)": [[61, "neclib.utils.device_utils.busy"]], "neclib.utils.device_utils": [[61, "module-neclib.utils.device_utils"]], "conditionchecker (class in neclib.utils.math_utils)": [[62, "neclib.utils.math_utils.ConditionChecker"]], "check() (conditionchecker method)": [[62, "neclib.utils.math_utils.ConditionChecker.check"]], "clip() (in module neclib.utils.math_utils)": [[62, "neclib.utils.math_utils.clip"]], "counter() (in module neclib.utils.math_utils)": [[62, "neclib.utils.math_utils.counter"]], "discretize() (in module neclib.utils.math_utils)": [[62, "neclib.utils.math_utils.discretize"]], "frange() (in module neclib.utils.math_utils)": [[62, "neclib.utils.math_utils.frange"]], "neclib.utils.math_utils": [[62, "module-neclib.utils.math_utils"]], "angle_conversion_factor() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.angle_conversion_factor"]], "daz2dx() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.dAz2dx"]], "dx2daz() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.dx2dAz"]], "force_data_type() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.force_data_type"]], "get_quantity() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.get_quantity"]], "neclib.utils.quantity_utils": [[63, "module-neclib.utils.quantity_utils"]], "parse_quantity() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.parse_quantity"]], "partially_convert_unit() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.partially_convert_unit"]], "quantity2builtin() (in module neclib.utils.quantity_utils)": [[63, "neclib.utils.quantity_utils.quantity2builtin"]], "neclib.utils.simulator_utils": [[64, "module-neclib.utils.simulator_utils"]], "skip_on_simulator() (in module neclib.utils.simulator_utils)": [[64, "neclib.utils.simulator_utils.skip_on_simulator"]]}})