Search.setIndex({"docnames": ["_source/neclib", "_source/neclib.controllers", "_source/neclib.controllers.antenna_pid", "_source/neclib.coordinates", "_source/neclib.coordinates.convert", "_source/neclib.coordinates.frame", "_source/neclib.coordinates.observations", "_source/neclib.coordinates.observations.observation_spec_base", "_source/neclib.coordinates.observations.optical_pointing", "_source/neclib.coordinates.observations.otf", "_source/neclib.coordinates.observations.radio_pointing", "_source/neclib.coordinates.observer", "_source/neclib.coordinates.optimize", "_source/neclib.coordinates.path_finder", "_source/neclib.coordinates.paths", "_source/neclib.coordinates.paths.linear", "_source/neclib.coordinates.paths.path_base", "_source/neclib.coordinates.paths.track", "_source/neclib.coordinates.pointing_error", "_source/neclib.coordinates.pointing_error.nanten2", "_source/neclib.coordinates.pointing_error.omu1p85m", "_source/neclib.coordinates.pointing_error.pointing_error", "_source/neclib.core", "_source/neclib.core.configuration", "_source/neclib.core.data_type", "_source/neclib.core.data_type.ordinal", "_source/neclib.core.data_type.parameters", "_source/neclib.core.data_type.rich_parameters", "_source/neclib.core.data_type.status_manager", "_source/neclib.core.data_type.value_range", "_source/neclib.core.environ", "_source/neclib.core.exceptions", "_source/neclib.core.files", "_source/neclib.core.files.general", "_source/neclib.core.files.toml", "_source/neclib.core.formatting", "_source/neclib.core.formatting.dict_to_html", "_source/neclib.core.formatting.observation_to_html", "_source/neclib.core.formatting.status_to_html", "_source/neclib.core.inform", "_source/neclib.core.inform.console_logger", "_source/neclib.core.inform.deprecation", "_source/neclib.core.inform.disable", "_source/neclib.core.math", "_source/neclib.core.math.clip_impl", "_source/neclib.core.math.frange_impl", "_source/neclib.core.math.functions", "_source/neclib.core.math.random", "_source/neclib.core.normalization", "_source/neclib.core.normalization.array", "_source/neclib.core.normalization.astropy", "_source/neclib.core.normalization.function_defaults", "_source/neclib.core.security", "_source/neclib.core.security.busy_impl", "_source/neclib.core.security.load_check", "_source/neclib.core.security.sanitize_impl", "_source/neclib.core.types", "_source/neclib.core.units", "_source/neclib.data", "_source/neclib.data.extrapolate", "_source/neclib.data.interpolate", "_source/neclib.data.resize", "_source/neclib.devices", "_source/neclib.devices.ad_converter", "_source/neclib.devices.ad_converter.ad_converter_base", "_source/neclib.devices.ad_converter.cpz3177", "_source/neclib.devices.ad_converter.simulator", "_source/neclib.devices.attenuator", "_source/neclib.devices.attenuator.a11713b", "_source/neclib.devices.attenuator.a11713c", "_source/neclib.devices.attenuator.attenuator_base", "_source/neclib.devices.attenuator.cpz340516", "_source/neclib.devices.attenuator.rhio10", "_source/neclib.devices.attenuator.simulator", "_source/neclib.devices.ccd_controller", "_source/neclib.devices.ccd_controller.ccd_controller_base", "_source/neclib.devices.ccd_controller.m100", "_source/neclib.devices.ccd_controller.simulator", "_source/neclib.devices.da_converter", "_source/neclib.devices.da_converter.cpz340816", "_source/neclib.devices.da_converter.da_converter_base", "_source/neclib.devices.da_converter.simulator", "_source/neclib.devices.device_base", "_source/neclib.devices.encoder", "_source/neclib.devices.encoder.cpz6204", "_source/neclib.devices.encoder.encoder_base", "_source/neclib.devices.encoder.nd287", "_source/neclib.devices.encoder.simulator", "_source/neclib.devices.motor", "_source/neclib.devices.motor.cpz2724", "_source/neclib.devices.motor.cpz7204", "_source/neclib.devices.motor.cpz7415v", "_source/neclib.devices.motor.motor_base", "_source/neclib.devices.motor.simulator", "_source/neclib.devices.power_meter", "_source/neclib.devices.power_meter.ma24126a", "_source/neclib.devices.power_meter.ml2437a", "_source/neclib.devices.power_meter.power_meter_base", "_source/neclib.devices.power_meter.simulator", "_source/neclib.devices.selector", "_source/neclib.devices.signal_generator", "_source/neclib.devices.signal_generator.e8257d", "_source/neclib.devices.signal_generator.fsw0010", "_source/neclib.devices.signal_generator.fsw0020", "_source/neclib.devices.signal_generator.mg3692c", "_source/neclib.devices.signal_generator.signal_generator_base", "_source/neclib.devices.signal_generator.simulator", "_source/neclib.devices.spectrometer", "_source/neclib.devices.spectrometer.ac240", "_source/neclib.devices.spectrometer.simulator", "_source/neclib.devices.spectrometer.spectrometer_base", "_source/neclib.devices.spectrometer.xffts", "_source/neclib.devices.thermometer", "_source/neclib.devices.thermometer.model_218", "_source/neclib.devices.thermometer.simulator", "_source/neclib.devices.thermometer.thermometer_base", "_source/neclib.devices.vacuum_gauge", "_source/neclib.devices.vacuum_gauge.simulator", "_source/neclib.devices.vacuum_gauge.tpg261", "_source/neclib.devices.vacuum_gauge.vacuum_gauge_base", "_source/neclib.devices.weather_station", "_source/neclib.devices.weather_station.simulator", "_source/neclib.devices.weather_station.tr73u", "_source/neclib.devices.weather_station.weather_station_base", "_source/neclib.recorders", "_source/neclib.recorders.console_log_writer", "_source/neclib.recorders.file_writer", "_source/neclib.recorders.necstdb_writer", "_source/neclib.recorders.recorder", "_source/neclib.recorders.writer_base", "_source/neclib.safety", "_source/neclib.safety.decelerate", "_source/neclib.safety.status", "_source/neclib.simulators", "_source/neclib.simulators.antenna", "_source/neclib.simulators.dome", "_source/neclib.utils", "_source/neclib.utils.array_utils", "_source/neclib.utils.data_utils", "_source/neclib.utils.math_utils", "_source/neclib.utils.quantity_utils", "_source/neclib.utils.simulator_utils", "assets/parameters/index", "assets/tutorials/config", "assets/tutorials/devices", "assets/tutorials/dunder_methods", "assets/tutorials/index", "index"], "filenames": ["_source/neclib.rst", "_source/neclib.controllers.rst", "_source/neclib.controllers.antenna_pid.rst", "_source/neclib.coordinates.rst", "_source/neclib.coordinates.convert.rst", "_source/neclib.coordinates.frame.rst", "_source/neclib.coordinates.observations.rst", "_source/neclib.coordinates.observations.observation_spec_base.rst", "_source/neclib.coordinates.observations.optical_pointing.rst", "_source/neclib.coordinates.observations.otf.rst", "_source/neclib.coordinates.observations.radio_pointing.rst", "_source/neclib.coordinates.observer.rst", "_source/neclib.coordinates.optimize.rst", "_source/neclib.coordinates.path_finder.rst", "_source/neclib.coordinates.paths.rst", "_source/neclib.coordinates.paths.linear.rst", "_source/neclib.coordinates.paths.path_base.rst", "_source/neclib.coordinates.paths.track.rst", "_source/neclib.coordinates.pointing_error.rst", "_source/neclib.coordinates.pointing_error.nanten2.rst", "_source/neclib.coordinates.pointing_error.omu1p85m.rst", "_source/neclib.coordinates.pointing_error.pointing_error.rst", "_source/neclib.core.rst", "_source/neclib.core.configuration.rst", "_source/neclib.core.data_type.rst", "_source/neclib.core.data_type.ordinal.rst", "_source/neclib.core.data_type.parameters.rst", "_source/neclib.core.data_type.rich_parameters.rst", "_source/neclib.core.data_type.status_manager.rst", "_source/neclib.core.data_type.value_range.rst", "_source/neclib.core.environ.rst", "_source/neclib.core.exceptions.rst", "_source/neclib.core.files.rst", "_source/neclib.core.files.general.rst", "_source/neclib.core.files.toml.rst", "_source/neclib.core.formatting.rst", "_source/neclib.core.formatting.dict_to_html.rst", "_source/neclib.core.formatting.observation_to_html.rst", "_source/neclib.core.formatting.status_to_html.rst", "_source/neclib.core.inform.rst", "_source/neclib.core.inform.console_logger.rst", "_source/neclib.core.inform.deprecation.rst", "_source/neclib.core.inform.disable.rst", "_source/neclib.core.math.rst", "_source/neclib.core.math.clip_impl.rst", "_source/neclib.core.math.frange_impl.rst", "_source/neclib.core.math.functions.rst", "_source/neclib.core.math.random.rst", "_source/neclib.core.normalization.rst", "_source/neclib.core.normalization.array.rst", "_source/neclib.core.normalization.astropy.rst", "_source/neclib.core.normalization.function_defaults.rst", "_source/neclib.core.security.rst", "_source/neclib.core.security.busy_impl.rst", "_source/neclib.core.security.load_check.rst", "_source/neclib.core.security.sanitize_impl.rst", "_source/neclib.core.types.rst", "_source/neclib.core.units.rst", "_source/neclib.data.rst", "_source/neclib.data.extrapolate.rst", "_source/neclib.data.interpolate.rst", "_source/neclib.data.resize.rst", "_source/neclib.devices.rst", "_source/neclib.devices.ad_converter.rst", "_source/neclib.devices.ad_converter.ad_converter_base.rst", "_source/neclib.devices.ad_converter.cpz3177.rst", "_source/neclib.devices.ad_converter.simulator.rst", "_source/neclib.devices.attenuator.rst", "_source/neclib.devices.attenuator.a11713b.rst", "_source/neclib.devices.attenuator.a11713c.rst", "_source/neclib.devices.attenuator.attenuator_base.rst", "_source/neclib.devices.attenuator.cpz340516.rst", "_source/neclib.devices.attenuator.rhio10.rst", "_source/neclib.devices.attenuator.simulator.rst", "_source/neclib.devices.ccd_controller.rst", "_source/neclib.devices.ccd_controller.ccd_controller_base.rst", "_source/neclib.devices.ccd_controller.m100.rst", "_source/neclib.devices.ccd_controller.simulator.rst", "_source/neclib.devices.da_converter.rst", "_source/neclib.devices.da_converter.cpz340816.rst", "_source/neclib.devices.da_converter.da_converter_base.rst", "_source/neclib.devices.da_converter.simulator.rst", "_source/neclib.devices.device_base.rst", "_source/neclib.devices.encoder.rst", "_source/neclib.devices.encoder.cpz6204.rst", "_source/neclib.devices.encoder.encoder_base.rst", "_source/neclib.devices.encoder.nd287.rst", "_source/neclib.devices.encoder.simulator.rst", "_source/neclib.devices.motor.rst", "_source/neclib.devices.motor.cpz2724.rst", "_source/neclib.devices.motor.cpz7204.rst", "_source/neclib.devices.motor.cpz7415v.rst", "_source/neclib.devices.motor.motor_base.rst", "_source/neclib.devices.motor.simulator.rst", "_source/neclib.devices.power_meter.rst", "_source/neclib.devices.power_meter.ma24126a.rst", "_source/neclib.devices.power_meter.ml2437a.rst", "_source/neclib.devices.power_meter.power_meter_base.rst", "_source/neclib.devices.power_meter.simulator.rst", "_source/neclib.devices.selector.rst", "_source/neclib.devices.signal_generator.rst", "_source/neclib.devices.signal_generator.e8257d.rst", "_source/neclib.devices.signal_generator.fsw0010.rst", "_source/neclib.devices.signal_generator.fsw0020.rst", "_source/neclib.devices.signal_generator.mg3692c.rst", "_source/neclib.devices.signal_generator.signal_generator_base.rst", "_source/neclib.devices.signal_generator.simulator.rst", "_source/neclib.devices.spectrometer.rst", "_source/neclib.devices.spectrometer.ac240.rst", "_source/neclib.devices.spectrometer.simulator.rst", "_source/neclib.devices.spectrometer.spectrometer_base.rst", "_source/neclib.devices.spectrometer.xffts.rst", "_source/neclib.devices.thermometer.rst", "_source/neclib.devices.thermometer.model_218.rst", "_source/neclib.devices.thermometer.simulator.rst", "_source/neclib.devices.thermometer.thermometer_base.rst", "_source/neclib.devices.vacuum_gauge.rst", "_source/neclib.devices.vacuum_gauge.simulator.rst", "_source/neclib.devices.vacuum_gauge.tpg261.rst", "_source/neclib.devices.vacuum_gauge.vacuum_gauge_base.rst", "_source/neclib.devices.weather_station.rst", "_source/neclib.devices.weather_station.simulator.rst", "_source/neclib.devices.weather_station.tr73u.rst", "_source/neclib.devices.weather_station.weather_station_base.rst", "_source/neclib.recorders.rst", "_source/neclib.recorders.console_log_writer.rst", "_source/neclib.recorders.file_writer.rst", "_source/neclib.recorders.necstdb_writer.rst", "_source/neclib.recorders.recorder.rst", "_source/neclib.recorders.writer_base.rst", "_source/neclib.safety.rst", "_source/neclib.safety.decelerate.rst", "_source/neclib.safety.status.rst", "_source/neclib.simulators.rst", "_source/neclib.simulators.antenna.rst", "_source/neclib.simulators.dome.rst", "_source/neclib.utils.rst", "_source/neclib.utils.array_utils.rst", "_source/neclib.utils.data_utils.rst", "_source/neclib.utils.math_utils.rst", "_source/neclib.utils.quantity_utils.rst", "_source/neclib.utils.simulator_utils.rst", "assets/parameters/index.md", "assets/tutorials/config.md", "assets/tutorials/devices.md", "assets/tutorials/dunder_methods.md", "assets/tutorials/index.md", "index.md"], "titles": ["neclib", "neclib.controllers", "neclib.controllers.antenna_pid", "neclib.coordinates", "neclib.coordinates.convert", "neclib.coordinates.frame", "neclib.coordinates.observations", "neclib.coordinates.observations.observation_spec_base", "neclib.coordinates.observations.optical_pointing", "neclib.coordinates.observations.otf", "neclib.coordinates.observations.radio_pointing", "neclib.coordinates.observer", "neclib.coordinates.optimize", "neclib.coordinates.path_finder", "neclib.coordinates.paths", "neclib.coordinates.paths.linear", "neclib.coordinates.paths.path_base", "neclib.coordinates.paths.track", "neclib.coordinates.pointing_error", "neclib.coordinates.pointing_error.nanten2", "neclib.coordinates.pointing_error.omu1p85m", "neclib.coordinates.pointing_error.pointing_error", "neclib.core", "neclib.core.configuration", "neclib.core.data_type", "neclib.core.data_type.ordinal", "neclib.core.data_type.parameters", "neclib.core.data_type.rich_parameters", "neclib.core.data_type.status_manager", "neclib.core.data_type.value_range", "neclib.core.environ", "neclib.core.exceptions", "neclib.core.files", "neclib.core.files.general", "neclib.core.files.toml", "neclib.core.formatting", "neclib.core.formatting.dict_to_html", "neclib.core.formatting.observation_to_html", "neclib.core.formatting.status_to_html", "neclib.core.inform", "neclib.core.inform.console_logger", "neclib.core.inform.deprecation", "neclib.core.inform.disable", "neclib.core.math", "neclib.core.math.clip_impl", "neclib.core.math.frange_impl", "neclib.core.math.functions", "neclib.core.math.random", "neclib.core.normalization", "neclib.core.normalization.array", "neclib.core.normalization.astropy", "neclib.core.normalization.function_defaults", "neclib.core.security", "neclib.core.security.busy_impl", "neclib.core.security.load_check", "neclib.core.security.sanitize_impl", "neclib.core.types", "neclib.core.units", "neclib.data", "neclib.data.extrapolate", "neclib.data.interpolate", "neclib.data.resize", "neclib.devices", "neclib.devices.ad_converter", "neclib.devices.ad_converter.ad_converter_base", "neclib.devices.ad_converter.cpz3177", "neclib.devices.ad_converter.simulator", "neclib.devices.attenuator", "neclib.devices.attenuator.a11713b", "neclib.devices.attenuator.a11713c", "neclib.devices.attenuator.attenuator_base", "neclib.devices.attenuator.cpz340516", "neclib.devices.attenuator.rhio10", "neclib.devices.attenuator.simulator", "neclib.devices.ccd_controller", "neclib.devices.ccd_controller.ccd_controller_base", "neclib.devices.ccd_controller.m100", "neclib.devices.ccd_controller.simulator", "neclib.devices.da_converter", "neclib.devices.da_converter.cpz340816", "neclib.devices.da_converter.da_converter_base", "neclib.devices.da_converter.simulator", "neclib.devices.device_base", "neclib.devices.encoder", "neclib.devices.encoder.cpz6204", "neclib.devices.encoder.encoder_base", "neclib.devices.encoder.nd287", "neclib.devices.encoder.simulator", "neclib.devices.motor", "neclib.devices.motor.cpz2724", "neclib.devices.motor.cpz7204", "neclib.devices.motor.cpz7415v", "neclib.devices.motor.motor_base", "neclib.devices.motor.simulator", "neclib.devices.power_meter", "neclib.devices.power_meter.ma24126a", "neclib.devices.power_meter.ml2437a", "neclib.devices.power_meter.power_meter_base", "neclib.devices.power_meter.simulator", "neclib.devices.selector", "neclib.devices.signal_generator", "neclib.devices.signal_generator.e8257d", "neclib.devices.signal_generator.fsw0010", "neclib.devices.signal_generator.fsw0020", "neclib.devices.signal_generator.mg3692c", "neclib.devices.signal_generator.signal_generator_base", "neclib.devices.signal_generator.simulator", "neclib.devices.spectrometer", "neclib.devices.spectrometer.ac240", "neclib.devices.spectrometer.simulator", "neclib.devices.spectrometer.spectrometer_base", "neclib.devices.spectrometer.xffts", "neclib.devices.thermometer", "neclib.devices.thermometer.model_218", "neclib.devices.thermometer.simulator", "neclib.devices.thermometer.thermometer_base", "neclib.devices.vacuum_gauge", "neclib.devices.vacuum_gauge.simulator", "neclib.devices.vacuum_gauge.tpg261", "neclib.devices.vacuum_gauge.vacuum_gauge_base", "neclib.devices.weather_station", "neclib.devices.weather_station.simulator", "neclib.devices.weather_station.tr73u", "neclib.devices.weather_station.weather_station_base", "neclib.recorders", "neclib.recorders.console_log_writer", "neclib.recorders.file_writer", "neclib.recorders.necstdb_writer", "neclib.recorders.recorder", "neclib.recorders.writer_base", "neclib.safety", "neclib.safety.decelerate", "neclib.safety.status", "neclib.simulators", "neclib.simulators.antenna", "neclib.simulators.dome", "neclib.utils", "neclib.utils.array_utils", "neclib.utils.data_utils", "neclib.utils.math_utils", "neclib.utils.quantity_utils", "neclib.utils.simulator_utils", "NECST Parameters", "neclib.config", "neclib.devices", "Dunder objects (any object with name <code class=\"docutils literal notranslate\"><span class=\"pre\">__***__</span></code>)", "Tutorials for developers", "neclib"], "terms": {"pure": [0, 147], "python": [0, 2, 26, 58, 59, 60, 132, 136, 138, 140, 142, 143, 145, 147], "tool": [0, 147], "necst": [0, 23, 30, 31, 52, 133, 143, 144, 147], "necstaccessibilitywarn": [0, 22, 26, 27, 31, 38], "warn": [0, 22, 26, 27, 31, 38, 39, 40, 41, 127, 132], "limit": [0, 2, 12, 22, 23, 26, 27, 29, 31, 32, 33, 38, 43, 44, 47, 52, 84, 130, 131, 142, 144], "usag": [0, 22, 26, 27, 31, 38, 40, 54, 65, 146], "necstauthorityerror": [0, 22, 31], "error": [0, 2, 3, 4, 18, 19, 20, 21, 22, 23, 26, 27, 31, 39, 40, 51, 65, 79, 99, 103, 142, 143, 145], "relat": [0, 22, 23, 26, 27, 31, 51, 99, 138], "control": [0, 13, 16, 22, 31, 52, 53, 62, 65, 71, 79, 84, 88, 89, 90, 91, 134, 135, 142, 143, 144], "prioriti": [0, 22, 31], "necstconfigurationerror": [0, 22, 23, 31, 99], "paramet": [0, 2, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 45, 47, 50, 51, 53, 55, 57, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 89, 90, 91, 92, 93, 99, 101, 102, 103, 104, 105, 106, 111, 113, 114, 115, 118, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 138, 139, 140, 144], "configur": [0, 22, 31, 62, 65, 68, 69, 71, 72, 76, 79, 82, 84, 86, 89, 90, 91, 95, 96, 99, 101, 102, 103, 104, 111, 113, 118, 122, 143, 144], "necstparameternameerror": [0, 22, 23, 26, 27, 31], "name": [0, 7, 21, 22, 23, 26, 27, 28, 30, 31, 39, 40, 53, 65, 68, 69, 71, 72, 79, 82, 113, 127, 132, 142, 143, 146], "necsttimeouterror": [0, 22, 31], "commun": [0, 22, 31, 54, 68, 69, 72, 96, 101, 102, 103, 104, 111, 113, 114, 117, 118, 142], "timeout": [0, 22, 31], "ordin": [0, 22, 24], "integ": [0, 22, 24, 25, 136, 139, 142, 143], "correspond": [0, 22, 24, 25, 65, 133, 134, 135, 144], "suffix": [0, 22, 24, 25, 144], "number": [0, 2, 3, 4, 11, 12, 13, 15, 17, 21, 22, 24, 25, 45, 54, 56, 57, 61, 65, 91, 111, 127, 128, 139, 140], "string": [0, 3, 4, 5, 22, 24, 25, 29, 34, 36, 127, 142, 143], "represent": [0, 3, 5, 7, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37], "gener": [0, 2, 7, 9, 10, 13, 16, 21, 22, 24, 26, 27, 28, 29, 45, 47, 49, 56, 60, 82, 100, 101, 102, 103, 104, 136, 139, 140, 143], "format": [0, 7, 8, 21, 22, 24, 26, 27, 33, 34, 40, 56, 65, 82, 140], "richparamet": [0, 22, 23, 24, 27], "flexibl": [0, 22, 23, 24, 27, 48], "look": [0, 22, 23, 24, 27, 32, 33], "up": [0, 2, 22, 23, 24, 27, 32, 33, 65, 68, 69, 72, 88, 91, 139], "high": [0, 2, 22, 23, 24, 27, 91, 131], "level": [0, 22, 23, 24, 27, 39, 40, 65, 68, 69, 71, 72, 79, 113, 132], "support": [0, 22, 23, 24, 27, 29, 43, 45, 56, 65, 79, 133, 134, 135, 136, 138], "statusmanag": [0, 22, 24, 28, 38], "manag": [0, 22, 24, 28, 52, 53, 65, 68, 69, 71, 72, 76, 79, 86, 91, 95, 96, 101, 102, 103, 104, 113, 118, 122, 130, 132], "multipl": [0, 22, 24, 28, 50, 53, 65, 71, 79, 84, 89, 90, 91, 140], "context": [0, 13, 22, 24, 28, 53], "valuerang": [0, 12, 22, 23, 24, 29, 131, 142], "valu": [0, 2, 4, 7, 12, 13, 15, 16, 21, 22, 23, 24, 26, 27, 28, 29, 39, 40, 43, 44, 45, 47, 48, 50, 51, 54, 56, 65, 68, 69, 71, 72, 79, 84, 89, 90, 91, 103, 111, 113, 127, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145], "rang": [0, 12, 22, 23, 24, 29, 43, 44, 45, 47, 61, 65, 71, 79, 130, 131, 138, 142], "bound": [0, 12, 22, 23, 24, 29, 39, 40, 131], "2": [0, 2, 12, 19, 22, 23, 24, 25, 27, 29, 34, 44, 45, 50, 59, 60, 65, 72, 91, 111, 131, 138, 139, 140, 143, 145], "config": [0, 4, 8, 22, 23, 62, 65, 71, 76, 79, 82, 84, 89, 90, 99, 111, 144, 146], "none": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 35, 36, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 138, 139, 140, 143, 144, 145], "copi": [0, 22, 23, 26, 27, 138], "default": [0, 2, 22, 23, 28, 40, 50, 51, 65, 71, 76, 79, 84, 89, 90, 91, 111, 132, 140, 143], "file": [0, 21, 22, 23, 26, 27, 39, 40, 65, 71, 76, 79, 84, 89, 90, 111, 125, 142, 144], "your": [0, 22, 23, 57, 145], "local": [0, 22, 23, 32, 33, 100, 101, 102, 103, 104, 111], "system": [0, 2, 22, 23, 31, 32, 33, 142, 147], "get_logg": [0, 4, 12, 22, 23, 37, 39, 40, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 126, 127, 128], "get": [0, 3, 4, 5, 12, 13, 22, 23, 27, 28, 37, 39, 40, 61, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 103, 108, 111, 113, 118, 122, 126, 127, 128, 134, 135, 136, 140, 143, 144], "logger": [0, 4, 12, 22, 23, 37, 39, 40, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 125, 126, 127, 128, 142], "instanc": [0, 2, 4, 12, 16, 22, 23, 37, 39, 40, 48, 49, 50, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 126, 127, 128, 138, 145], "which": [0, 2, 4, 7, 9, 10, 12, 19, 20, 21, 22, 23, 26, 27, 28, 34, 36, 37, 39, 40, 41, 48, 53, 62, 63, 65, 67, 68, 69, 71, 72, 74, 76, 78, 79, 84, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 111, 112, 113, 116, 118, 120, 122, 125, 126, 127, 128, 134, 135, 140, 142, 144, 145, 147], "print": [0, 4, 12, 22, 23, 29, 37, 39, 40, 53, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 126, 127, 128, 143, 145], "oper": [0, 4, 12, 22, 23, 33, 37, 39, 40, 53, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 126, 127, 128, 139], "log": [0, 4, 12, 22, 23, 37, 39, 40, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 124, 125, 126, 127, 128], "consol": [0, 4, 12, 22, 23, 37, 39, 40, 62, 68, 69, 84, 89, 90, 91, 95, 96, 99, 101, 108, 111, 113, 118, 122, 124, 125, 126, 127, 128], "miscellan": [1, 147], "devic": [1, 2, 142, 143, 146], "mai": [1, 2, 21, 26, 39, 42, 52, 103, 134, 135, 140, 145], "refer": [1, 7, 9, 10, 143, 144, 147], "collect": [1, 3, 4, 8, 13, 23, 24, 48, 133, 136], "function": [1, 2, 4, 13, 22, 28, 29, 34, 39, 40, 41, 42, 43, 45, 47, 53, 65, 79, 103, 127, 133, 134, 135, 136, 138, 139, 140, 144], "implement": [1, 2, 22, 27, 34, 39, 42, 52, 62, 126, 129, 133, 134, 135, 140, 143, 146], "some": [1, 2, 4, 16, 22, 26, 39, 40, 48, 49, 50, 65, 126, 129, 146], "algorithm": [1, 131], "someth": [1, 39, 40, 145], "pidcontrol": [1, 2, 134, 135], "pid": [1, 2, 134, 135, 142], "telescop": [1, 2, 4, 7, 23, 91, 130, 131, 134, 135, 142], "antenna": [1, 2, 23, 133, 142, 143], "main": 2, "dish": 2, "optimum": [2, 3, 12], "i": [2, 4, 7, 12, 13, 16, 19, 20, 21, 23, 26, 28, 29, 32, 33, 34, 39, 40, 41, 44, 45, 52, 54, 65, 68, 69, 71, 79, 84, 88, 89, 90, 91, 101, 103, 111, 126, 127, 128, 129, 131, 132, 133, 140, 143, 145, 147], "calcul": [2, 3, 4, 7, 8, 13, 14, 18, 19, 20, 21, 23, 91, 131, 134, 135, 140], "us": [2, 4, 7, 19, 21, 23, 26, 27, 34, 39, 41, 42, 44, 45, 53, 54, 57, 65, 68, 69, 72, 79, 86, 91, 95, 96, 101, 102, 103, 104, 111, 113, 118, 122, 124, 128, 133, 139, 140, 144, 145, 147], "simpl": [2, 140, 145], "consist": [2, 144], "proport": 2, "integr": [2, 7, 9, 10, 147], "deriv": 2, "term": 2, "u": [2, 12, 15, 17, 19, 21, 27, 45, 57, 91, 111, 131, 140], "t": [2, 4, 7, 12, 13, 15, 17, 21, 26, 28, 29, 32, 33, 44, 45, 49, 57, 59, 60, 61, 65, 91, 125, 126, 127, 129, 131, 134, 135, 140, 142, 143, 144, 145], "k_": 2, "mathrm": [2, 19], "p": [2, 19, 65], "e": [2, 19, 54, 76, 143], "int": [2, 3, 4, 7, 11, 12, 13, 15, 17, 21, 25, 28, 39, 40, 45, 47, 50, 51, 55, 56, 57, 61, 65, 68, 69, 70, 71, 72, 73, 79, 86, 89, 91, 92, 93, 95, 96, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 118, 127, 128, 131, 137, 138, 139, 140, 142, 143], "tau": 2, "d": [2, 12, 19, 34, 63, 65, 78, 79], "frac": [2, 131], "where": [2, 12, 19, 131], "ar": [2, 12, 23, 26, 27, 29, 34, 45, 50, 65, 68, 69, 71, 79, 84, 89, 90, 91, 125, 131, 132, 134, 135, 138, 140, 142, 143, 144, 145, 146], "non": [2, 45, 65, 71, 79, 84, 89, 90, 91, 133, 143, 144], "neg": [2, 19, 44], "constant": [2, 7, 9, 10, 19, 134, 135, 142], "": [2, 7, 9, 10, 14, 22, 23, 32, 33, 34, 39, 40, 50, 53, 54, 91, 128, 131, 133, 136, 140, 142, 143, 144, 145], "object": [2, 3, 4, 5, 7, 8, 11, 12, 13, 16, 22, 23, 26, 27, 29, 34, 36, 39, 41, 46, 47, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 65, 68, 69, 71, 72, 76, 79, 86, 91, 95, 96, 101, 102, 103, 104, 113, 118, 122, 128, 131, 132, 134, 135, 136, 138, 139, 140, 144, 146], "between": [2, 7, 12, 19, 45, 57, 65, 131, 134, 135, 136, 139, 140], "desir": 2, "actual": [2, 23, 65, 144, 145], "explanatori": 2, "thi": [2, 4, 7, 12, 13, 14, 16, 21, 22, 23, 24, 26, 27, 28, 31, 33, 34, 36, 39, 40, 42, 44, 45, 53, 54, 62, 65, 68, 69, 71, 72, 76, 79, 84, 86, 89, 90, 91, 95, 96, 101, 102, 103, 104, 111, 113, 118, 122, 125, 126, 127, 128, 129, 140, 142, 143, 144, 145, 146, 147], "script": [2, 57, 65, 133], "execut": [2, 52, 53, 57], "frequenc": [2, 40, 65, 91, 142], "vector": 2, "mani": [2, 23, 26], "arrai": [2, 3, 4, 11, 12, 13, 15, 17, 21, 43, 45, 50, 56, 140, 142, 143], "updat": [2, 16, 23, 127], "frequent": 2, "These": [2, 65, 143], "mean": [2, 54, 144, 145], "numpi": [2, 3, 4, 45, 136, 137], "best": 2, "choic": [2, 12], "speed": [2, 7, 9, 10, 13, 15, 89, 90, 91, 92, 93, 131, 134, 135, 142, 143], "measur": [2, 19, 20, 21, 65, 94, 95, 96], "time": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 53, 54, 61, 91, 111, 134, 135, 140, 142, 143, 145], "first": [2, 19, 45, 51, 53, 61, 139, 143, 145], "linearextrapol": [2, 58, 59], "extrapol": [2, 58], "parameterlist": [2, 134, 135, 136, 138], "list": [2, 7, 8, 13, 51, 55, 57, 61, 62, 65, 79, 89, 108, 109, 110, 111, 127, 128, 132, 134, 135, 136, 138, 139, 140, 142, 143], "special": [2, 27, 134, 135, 136, 138, 145], "store": [2, 26, 27, 28, 34, 53, 62, 128, 134, 135, 136, 138], "class": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 40, 46, 47, 49, 50, 51, 53, 54, 56, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 134, 135, 138, 139, 140, 145], "pid_param": 2, "1": [2, 4, 7, 13, 19, 21, 23, 25, 27, 29, 34, 39, 40, 44, 45, 50, 53, 57, 60, 61, 65, 71, 72, 79, 84, 89, 90, 91, 111, 128, 131, 138, 139, 140, 143, 145], "0": [2, 5, 8, 19, 21, 28, 29, 39, 40, 44, 51, 53, 59, 60, 61, 65, 71, 79, 84, 89, 90, 91, 127, 131, 134, 135, 136, 138, 139], "5": [2, 12, 21, 29, 45, 53, 57, 65, 127, 131, 134, 135, 138, 139, 140, 145], "3": [2, 26, 27, 34, 44, 45, 50, 65, 111, 134, 135, 138, 139, 140, 145], "max_spe": [2, 143], "quantiti": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 26, 27, 43, 45, 48, 49, 50, 54, 56, 57, 64, 65, 66, 68, 69, 70, 72, 73, 85, 86, 87, 90, 91, 92, 93, 95, 97, 98, 101, 102, 103, 104, 105, 106, 113, 114, 115, 117, 118, 119, 121, 122, 123, 131, 134, 135, 136, 137, 140, 142, 143], "6": [2, 29, 131, 139], "deg": [2, 5, 12, 19, 21, 26, 27, 56, 131, 134, 135, 140, 143], "max_acceler": [2, 131, 143], "s2": [2, 143], "error_integ_count": 2, "50": [2, 40, 60, 91], "threshold": [2, 142], "accel_limit_off": 2, "20": [2, 5, 39, 40, 138], "arcsec": [2, 19, 56, 134, 135, 140], "cmd_coord_chang": 2, "400": 2, "target_accel_ignor": 2, "sourc": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 134, 135, 137, 138, 139, 140, 141], "base": [2, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 40, 46, 47, 49, 50, 51, 53, 54, 56, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 134, 135, 138, 139, 144], "classic": 2, "sophist": 2, "ha": [2, 7, 26, 27, 39, 40, 50, 103, 140, 145], "delai": [2, 91], "respons": [2, 133, 134, 135], "input": [2, 21, 52, 65, 111, 126, 129], "handl": [2, 4, 34, 54, 57, 88, 91, 126, 127, 129, 138, 140, 144], "onli": [2, 39, 40, 65, 144], "so": [2, 16, 21, 23, 26, 34, 51, 52, 62, 139, 143, 144, 145], "az": [2, 13, 19, 20, 21, 62, 91, 134, 135, 136, 138, 140, 142], "el": [2, 13, 19, 20, 21, 62, 91, 134, 135, 136, 138, 140, 142], "tupl": [2, 4, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 21, 47, 51, 54, 56, 57, 61, 108, 109, 110, 111, 127, 134, 135], "float": [2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 28, 39, 40, 43, 45, 47, 50, 54, 56, 57, 61, 65, 70, 71, 73, 79, 80, 81, 89, 90, 91, 92, 93, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 121, 122, 123, 127, 134, 135, 137, 139, 140, 142, 143, 144], "coeffici": [2, 19], "formul": 2, "k_p": 2, "k_i": 2, "k_d": 2, "union": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 21, 23, 26, 27, 32, 33, 34, 39, 40, 45, 47, 50, 51, 55, 56, 79, 82, 91, 99, 101, 102, 103, 104, 105, 106, 127, 128, 134, 135, 137, 140], "str": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 26, 27, 28, 32, 33, 34, 36, 37, 39, 40, 41, 45, 50, 51, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123, 126, 127, 132, 138, 140, 142, 143, 144], "maximum": [2, 28, 43, 44, 47, 65, 111, 131, 134, 135, 142], "motion": [2, 88, 90, 91, 134, 135], "acceler": [2, 14, 15, 91, 131, 134, 135, 142], "data": [2, 24, 36, 54, 65, 76, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 138], "dict": [2, 4, 13, 15, 16, 17, 23, 26, 27, 34, 36, 40, 51, 54, 62, 65, 68, 69, 70, 71, 72, 73, 79, 82, 89, 91, 99, 108, 109, 110, 111, 113, 127, 136, 138, 140, 143, 144], "liter": [2, 13, 56, 134, 135, 138, 139, 140], "type": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 36, 37, 39, 40, 41, 45, 48, 49, 50, 51, 54, 55, 57, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 134, 135, 136, 138, 139, 140, 142, 143, 144], "astropi": [2, 3, 4, 5, 7, 9, 10, 13, 15, 21, 22, 26, 48, 56, 57, 131, 136, 140, 147], "unit": [2, 3, 4, 7, 9, 10, 11, 12, 13, 15, 16, 17, 21, 26, 50, 56, 79, 96, 111, 134, 135, 136, 140], "condit": [2, 120, 122, 139], "interpret": [2, 7, 9, 10, 24], "kei": [2, 23, 26, 27, 34, 91, 127, 138, 143, 144], "angl": [2, 3, 12, 13, 19, 26], "If": [2, 4, 7, 12, 16, 21, 26, 29, 32, 33, 34, 39, 40, 45, 50, 54, 68, 69, 71, 91, 101, 111, 113, 118, 127, 131, 132, 133, 139, 140, 142, 143], "separ": [2, 12, 34], "new": [2, 22, 138, 144, 145], "command": [2, 7, 9, 10, 12, 13, 23, 111, 134, 135, 142], "coordin": [2, 26, 56, 134, 135, 142], "last": [2, 45, 54, 61, 134, 135], "one": [2, 27, 28, 34, 65, 132, 133, 140, 145], "larger": [2, 28, 54], "than": [2, 12, 28, 39, 40, 45, 54, 127, 140, 142], "assum": 2, "target": [2, 7, 8, 9, 10, 12, 13, 15, 16, 17, 65], "been": [2, 7, 145], "chang": [2, 23, 65, 91, 103, 134, 135], "reset": 2, "encod": [2, 19, 20, 21, 62, 131, 134, 135], "read": [2, 19, 20, 21, 22, 23, 26, 27, 32, 33, 34, 48, 65, 127, 131, 134, 135, 143], "smaller": [2, 12], "stop": [2, 7, 9, 10, 13, 14, 15, 16, 17, 28, 45, 53, 90, 108, 111, 136, 137, 139], "appli": [2, 7, 12, 23, 29, 138], "quick": 2, "converg": [2, 142], "drive": [2, 3, 7, 12, 14, 23, 89, 90, 91, 92, 93, 130, 131, 142], "angular": [2, 12, 56, 134, 135, 136, 140], "exce": 2, "target_spe": 2, "ignor": [2, 91], "most": 2, "like": [2, 23, 27, 34, 65, 143, 144], "caus": [2, 4, 14, 23, 139, 143, 145], "softwar": [2, 23, 142, 143, 145], "bug": 2, "network": [2, 54, 111], "congest": 2, "variabl": [2, 3, 4, 16, 22, 23, 30, 48, 49, 50, 125, 127, 143, 144], "k_c": 2, "upper": [2, 29, 44, 56, 138], "angle_unit": [2, 134, 135], "cmd_speed": 2, "result": [2, 12, 23, 143], "unix": 2, "timestamp": [2, 61, 108, 109, 110, 111, 127], "done": [2, 53], "cmd_coord": 2, "enc_coord": 2, "deviat": 2, "rate": [2, 54, 71], "add": 2, "an": [2, 14, 145], "attempt": [2, 53, 142], "follow": [2, 26, 34, 52, 65, 68, 69, 143, 144, 145], "raster": 2, "scan": [2, 7, 57, 142], "sider": 2, "track": [2, 13, 14], "error_integr": 2, "error_deriv": 2, "keep": [2, 26, 28], "optim": 2, "accord": [2, 91], "interv": [2, 7, 9, 10, 134, 135, 142], "depend": [2, 14, 22, 134, 135], "all": [2, 7, 9, 10, 27, 29, 34, 39, 40, 53, 54, 62, 65, 91, 108, 109, 110, 111, 125, 128, 142, 143], "method": [2, 3, 4, 8, 13, 21, 22, 23, 26, 27, 33, 34, 39, 42, 45, 53, 54, 138, 139, 144], "argument": [2, 4, 14, 15, 16, 17, 21, 26, 28, 45, 50, 51, 53, 145], "given": [2, 12, 27, 34, 44, 45, 50, 51, 132, 136, 140], "return": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 50, 51, 54, 55, 56, 57, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 134, 135, 138, 139, 140, 144, 145], "you": [2, 7, 21, 23, 26, 27, 29, 34, 61, 65, 68, 69, 71, 72, 76, 79, 101, 111, 113, 118, 131, 140, 143, 144, 145], "need": [2, 7, 16, 26, 27, 39, 40, 65, 76, 91, 144], "substitut": [2, 65, 79], "befor": [2, 21, 23, 145], "instanti": 2, "exampl": [2, 4, 5, 12, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 39, 40, 41, 44, 45, 50, 53, 57, 59, 60, 61, 65, 68, 69, 71, 72, 111, 127, 128, 131, 132, 134, 135, 138, 139, 140], "1000": [2, 127, 140], "target_coordin": 2, "encoder_read": 2, "30": [2, 40, 134, 135, 140], "10": [2, 5, 26, 28, 29, 40, 45, 65, 138, 139], "get_spe": [2, 89, 90, 91, 92, 93, 134, 135], "430511474609375e": 2, "05": 2, "20356178283691406": 2, "classvar": [2, 4, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 81, 82, 84, 86, 87, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 117, 118, 121, 122, 134, 135, 145], "rad": [2, 56, 134, 135, 140], "arcmin": [2, 56, 134, 135, 140], "public": 2, "accept": [2, 65, 125, 128, 143, 145], "its": [2, 7, 14, 16, 26, 28, 53, 138, 140, 142, 143, 144, 145], "properti": [2, 4, 7, 15, 16, 17, 23, 26, 27, 29, 51, 53, 65, 79, 91, 128, 134, 135], "dt": [2, 131, 134, 135], "fals": [2, 4, 7, 13, 14, 15, 16, 17, 29, 45, 51, 82, 128, 132, 139], "cmd_time": 2, "enc_tim": 2, "modul": [2, 4, 7, 14, 26, 33, 133, 134, 135], "instruct": 2, "bool": [2, 4, 7, 13, 14, 15, 16, 17, 29, 32, 33, 40, 45, 51, 53, 66, 73, 77, 81, 82, 87, 93, 98, 101, 102, 103, 104, 105, 106, 109, 114, 117, 121, 125, 127, 128, 139, 142, 143], "true": [2, 7, 13, 15, 16, 17, 19, 20, 21, 29, 32, 33, 40, 45, 66, 73, 77, 81, 87, 93, 98, 106, 109, 114, 117, 121, 132, 138, 139, 142, 145], "won": [2, 4, 12, 26, 61, 65, 91, 126, 129, 140, 142, 143, 145], "move": [2, 90], "regardless": 2, "option": [2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 28, 29, 36, 39, 40, 41, 45, 47, 50, 51, 59, 60, 61, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 81, 82, 84, 86, 87, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 117, 118, 121, 122, 127, 128, 136, 139, 140], "param": [2, 23, 26, 27, 138], "kwarg": [2, 7, 9, 10, 16, 19, 20, 21, 23, 26, 27, 28, 39, 40, 41, 51, 56, 125, 126, 127, 128, 129, 138, 145], "coordcalcul": [3, 4, 8, 13, 14, 15, 16, 17], "basic": [3, 4, 8, 13], "celesti": [3, 4, 8, 13, 19, 20, 21], "coordinatedelta": [3, 4], "d_lon": [3, 4], "ndarrai": [3, 4, 11, 12, 13, 15, 17, 21, 45, 47, 56, 137, 140], "ani": [3, 4, 7, 9, 10, 11, 12, 13, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 32, 33, 34, 36, 39, 41, 45, 51, 56, 65, 68, 69, 71, 72, 79, 113, 125, 127, 129, 134, 135, 136, 138, 140, 142, 143, 146], "dtype": [3, 4, 11, 12, 13, 15, 17, 21, 45, 56, 140], "core": [3, 4, 131], "d_lat": [3, 4], "frame": [3, 4, 7, 8, 11, 13, 37, 56], "basefram": [3, 4, 7, 9, 10], "basecoordinatefram": [3, 4, 5, 7, 9, 10, 11, 13, 15, 16, 56], "unitbas": [3, 4, 7, 11, 12, 13, 21, 50, 56, 57, 140], "nonetyp": [3, 4, 7, 9, 10], "coordinategeneratormanag": [3, 13], "coordinatelik": 3, "drivelimitcheck": [3, 12], "find": [3, 12, 28, 56, 140], "safe": [3, 12, 52], "otfspec": [3, 6, 9], "observ": [3, 12, 16, 35, 37, 39, 40, 57, 143], "opticalpointingspec": [3, 6, 8], "pathfind": [3, 13], "pointingerror": [3, 4, 18, 19, 20, 21], "point": [3, 4, 7, 18, 19, 20, 21, 57, 74, 76, 142, 143], "offset": [3, 4, 7, 9, 10, 13, 15, 17, 18, 19, 20, 21], "radiopointingspec": [3, 6, 10], "describe_fram": [3, 5], "parse_fram": [3, 4, 5], "pars": [3, 4, 5, 26, 34, 62, 142, 143, 144], "creat": [3, 4, 5, 22, 138, 144, 145], "convers": [4, 91, 136, 140, 142], "contain": [4, 7, 26, 28, 39, 40, 52, 146], "The": [4, 7, 12, 14, 19, 20, 21, 22, 23, 26, 27, 28, 29, 32, 33, 34, 36, 39, 41, 50, 51, 52, 53, 54, 61, 62, 65, 68, 69, 71, 72, 79, 84, 89, 90, 91, 103, 111, 113, 126, 129, 131, 132, 144, 145], "intent": [4, 134, 135], "custom": [4, 57, 143], "definit": [4, 22, 24, 30, 34, 143], "avoid": [4, 12, 53, 144], "unintend": 4, "can": [4, 12, 21, 23, 26, 27, 29, 32, 33, 34, 52, 54, 63, 65, 67, 68, 69, 71, 72, 74, 76, 78, 79, 88, 91, 94, 95, 96, 100, 101, 102, 103, 104, 107, 111, 112, 113, 116, 118, 120, 122, 128, 134, 135, 140, 143, 144, 145], "highli": [4, 62], "autom": [4, 65, 71, 79, 84, 89, 90, 91, 145], "skycoord": [4, 7], "quantityvalid": [4, 22, 48, 50], "valid": [4, 16, 22, 40, 48, 49, 50, 91, 140, 143], "forc": [4, 16, 22, 48, 49, 50], "get_quant": [4, 15, 21, 22, 48, 50, 131, 136, 140], "broadcast": 4, "size": 4, "shape": [4, 12, 47, 50], "locat": [4, 11, 13, 142], "earthloc": [4, 11, 13, 142], "3871165": [4, 13], "06944156": [4, 13], "3428273": [4, 13], "15427448": [4, 13], "3723695": [4, 13], "62006595": [4, 13], "m": [4, 13, 27, 45, 50, 134, 135, 140], "pointing_err_fil": [4, 13], "direct_mod": [4, 13], "direct_befor": [4, 13], "earth": 4, "pointing_param_path": 4, "path": [4, 7, 13, 21, 23, 26, 27, 32, 33, 34, 39, 40, 76, 125, 126, 127, 129, 142, 143], "correct": [4, 21], "perform": [4, 7, 9, 10, 21, 65], "pathlik": [4, 13, 23, 26, 27, 32, 33, 34, 128], "calc": [4, 15, 16, 17], "obswl": [4, 21], "nan": [4, 50, 138], "mm": 4, "obsfreq": 4, "230": 4, "538": 4, "ghz": [4, 101, 102, 103, 104, 105, 106], "relative_humid": [4, 21], "pressur": [4, 21, 127], "hpa": [4, 21], "temperatur": [4, 21], "k": 4, "command_group_duration_sec": 4, "command_freq": 4, "command_offset_sec": 4, "pointing_err": 4, "altaz_kwarg": 4, "keyword": [4, 26, 28, 45, 50], "altaz": [4, 5, 7, 21], "except": 4, "obstim": 4, "name_coordin": 4, "namecoordin": 4, "coordinate_delta": 4, "alia": [4, 26, 56, 91, 138], "describ": 5, "fk5": [5, 37], "skyoffsetfram": 5, "origin": [5, 133, 140], "10deg": 5, "0deg": 5, "rotat": 5, "20deg": 5, "builtin_fram": 5, "skyoffsetfk5": 5, "equinox": 5, "j2000": 5, "000": 5, "ra": 5, "dec": 5, "html_repr_of_observation_spec": [7, 35, 37], "html": [7, 26, 27, 35, 36, 37], "specif": [7, 21, 33, 34, 35, 37, 62, 89, 90, 91, 92, 93, 143], "scan_to_point": [7, 57], "equival": [7, 34, 45, 50, 56, 57, 140, 145], "observationmod": [7, 9, 10], "enum": 7, "certain": [7, 9, 10], "777": 7, "ON": 7, "0f5": 7, "off": 7, "0df": 7, "hot": 7, "f50": 7, "sky": [7, 19, 20, 21], "timekeep": [7, 9, 10], "points_per_scan": [7, 57], "judg": [7, 9, 10, 29], "whether": [7, 9, 10, 16, 126, 127, 128, 129], "run": [7, 9, 10, 23, 52, 133, 145], "should_observ": 7, "otherwis": [7, 28, 32, 33, 44, 65, 91], "increment": 7, "counter": [7, 136, 139], "compar": [7, 65], "tell_observ": 7, "tell": 7, "keeper": 7, "complet": [7, 39, 40, 62], "waypoint": [7, 9, 10, 14, 15, 16, 17], "mode": [7, 9, 10, 90, 91, 133], "scan_fram": [7, 9, 10, 13, 15], "start": [7, 9, 10, 13, 14, 15, 16, 17, 28, 45, 53, 108, 111, 137, 139], "id": [7, 9, 10, 64, 65, 66, 68, 69, 70, 71, 72, 73, 79, 80, 81, 84, 89, 90, 91, 113, 114, 115], "other": [7, 12, 16, 22, 45, 53, 91, 140, 145], "defin": [7, 9, 10, 26, 57, 65, 79, 91, 111, 144], "rel": [7, 32, 33, 143], "posit": [7, 23, 57, 89, 90, 91, 92, 93], "specifi": [7, 21, 26, 28, 32, 33, 143], "abov": [7, 53, 144, 145], "identifi": [7, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 81, 82, 84, 86, 87, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 117, 118, 121, 122, 144], "necessari": [7, 133], "is_scan": 7, "enough": 7, "inform": [7, 27, 31], "with_offset": 7, "should": [7, 14, 16, 21, 22, 26, 28, 34, 39, 40, 50, 62, 65, 68, 69, 71, 72, 79, 84, 89, 90, 91, 111, 113, 126, 129, 132, 133, 140, 143, 144, 145], "amount": [7, 54], "name_queri": 7, "section": [7, 13, 16, 143, 144], "repres": [7, 36, 56, 65], "doesn": 7, "accur": [7, 21], "when": [7, 21, 26, 53, 65, 71, 74, 76, 79, 84, 89, 90, 91, 142, 143, 144, 145], "involv": [7, 145], "pleas": [7, 57, 65, 68, 69, 96, 101, 113, 118, 143], "convert": [7, 15, 19, 20, 21, 22, 26, 27, 34, 48, 50, 63, 65, 67, 71, 78, 79, 127, 131, 136, 138, 139, 140, 144], "observationspec": [7, 9, 10, 37], "abc": [7, 16, 21, 29, 82, 129, 144, 145], "abstract": [7, 16, 21, 62, 64, 70, 75, 80, 82, 85, 92, 97, 105, 110, 115, 119, 123, 129], "step": [7, 9, 10, 45, 89, 91, 92, 93, 139], "on_coord": 7, "off_coord": 7, "coord": 7, "datafram": [7, 8], "crude": 7, "fig": 7, "figur": 7, "ax": [7, 19, 88, 91, 134, 135], "attribut": [7, 26, 27, 28, 53, 136, 138, 140, 143, 145], "readlines_fil": 8, "filenam": 8, "to_altaz": 8, "sort": 8, "catalog_fil": 8, "magnitud": [8, 19], "estimate_tim": 8, "sorted_data": 8, "observation_spec_bas": [9, 10], "v_ob": 11, "lon": [11, 13, 56, 142], "lat": [11, 13, 56, 142], "lst": 11, "sequenc": [11, 13, 45, 47, 59, 60, 136, 139], "longitud": 11, "preferred_limit": 12, "max_observation_s": 12, "includ": [12, 23, 36, 45, 61, 91, 143], "constraint": 12, "direct": [12, 19, 91], "unwrap": 12, "360deg": 12, "dure": [12, 134, 135], "over": [12, 29, 54, 65], "180deg": [12, 19], "never": [12, 34], "go": 12, "out": [12, 91], "violat": 12, "continu": [12, 39, 40], "found": [12, 32, 33, 34, 143, 144], "current": [12, 28, 73, 127, 134, 135], "occur": 12, "possibli": 12, "interrupt": [12, 16], "checker": 12, "260": 12, "250": 12, "200": [12, 59], "170": 12, "190": 12, "scalar": 12, "n": [12, 134, 135], "seri": 12, "length": [12, 45, 138], "apparentaltazcoordin": 13, "path_bas": 13, "controlcontext": [13, 14, 15, 16, 17], "azimuth": [13, 19, 20, 21, 138], "elev": [13, 19, 20, 21, 138], "each": [13, 53, 91, 111, 144], "metadata": [13, 36, 127], "part": 13, "from_funct": 13, "callabl": [13, 15, 17, 27, 28, 29, 39, 41, 45, 51, 56, 57, 65, 79, 127, 134, 135, 138], "index": [13, 14, 15, 16, 17, 28, 61], "n_cmd": [13, 15, 17], "lon_lat": 13, "from": [13, 14, 22, 23, 26, 27, 28, 32, 33, 34, 53, 54, 65, 68, 69, 71, 72, 79, 91, 113, 127, 128, 136, 139, 140, 143, 144, 145], "arbitrari": [13, 44, 61, 124, 128], "sequenti": [13, 139], "section_arg": 13, "repeat": [13, 61], "linear": [13, 14, 91], "margin": [13, 15, 142], "ctx_kw": [13, 15, 17], "will_send": 13, "attach": [13, 26, 27, 40, 128], "clear": 13, "namespac": [14, 22, 132, 143], "inherit": [14, 133, 144], "subclass": [14, 21, 126, 129, 145], "sinc": [14, 34, 39, 41, 54, 145], "would": [14, 23, 26, 28, 51, 53, 54, 65, 71, 79, 84, 89, 90, 91, 126, 129, 144], "circular": [14, 22], "import": [14, 21, 22, 26, 57, 143, 144], "instead": [14, 145], "pass": [14, 21, 28, 34, 39, 41, 128, 145], "constructor": [14, 28], "tight": [14, 15, 16, 17], "durat": [14, 15, 16, 17, 39, 40, 54, 127, 142], "infinit": [14, 15, 16, 17], "nparrayvalid": [14, 15, 16, 17, 22, 48, 49], "standbi": [14, 15], "dimensionless": [15, 17, 56], "coordframetyp": [15, 17, 37, 56], "unittyp": [15, 16, 17, 56], "target_fram": [15, 16], "lonlat_func": [15, 17], "accuraci": 16, "inspect": 16, "end": [16, 65], "henc": 16, "sent": 16, "properties_modifi": 16, "model": [19, 20, 21, 22, 62, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123], "delta": 19, "x": [19, 27, 29, 59, 60, 65, 68, 69, 79, 91, 131, 138, 140], "chi_": 19, "sin": 19, "omega_": 19, "epsilon": 19, "co": [19, 91], "cor_": 19, "v": [19, 65, 131, 134, 135], "e_": 19, "radio": 19, "y": [19, 59, 60, 68, 69, 91], "g_1": 19, "g_2": 19, "g_": 19, "el_": 19, "daz": [19, 20, 21], "de": 19, "collim": 19, "chi_az": 19, "tilt": 19, "axi": [19, 20, 21, 89, 90, 91, 92, 93, 134, 135, 138, 142], "omega_az": 19, "phase": 19, "ep": 19, "skew": 19, "lack": 19, "orthogon": 19, "chi2_az": 19, "same": [19, 26, 39, 40, 53, 54, 65, 71, 79, 84, 89, 90, 91, 133, 144, 145], "chi": 19, "period": 19, "harmon": 19, "compon": 19, "omega2_az": 19, "omega": 19, "chi_el": 19, "omega_el": 19, "chi2_el": 19, "omega2_el": 19, "g": [19, 54, 76, 143], "order": [19, 29, 65, 132, 143], "gravit": 19, "deflect": 19, "gg": 19, "second": [19, 39, 40, 53, 65], "ggg": 19, "third": 19, "gggg": 19, "fourth": 19, "del": [19, 20, 21], "de_radio": 19, "optic": [19, 74, 76], "beam": 19, "del_radio": 19, "cor_v": 19, "amplitud": 19, "cor_p": 19, "zero": [19, 65, 71, 79, 84, 89, 90, 91], "g_radio": 19, "gg_radio": 19, "ggg_radio": 19, "gggg_radio": 19, "apply_offset": [19, 20, 21], "comput": [19, 20, 21], "ad": [19, 20, 21, 34, 144], "apply_inverse_offset": [19, 20, 21], "fit": [19, 20, 21], "arg": [19, 20, 21, 23, 39, 40, 41, 51, 56, 125, 126, 127, 128, 129, 138, 145], "dummi": 21, "automat": [21, 143, 145], "determin": 21, "don": [21, 57, 125, 143, 144], "have": [21, 28, 45, 50, 65, 143, 145], "observatori": [21, 127, 142, 143], "toml": [21, 23, 26, 27, 65, 71, 76, 79, 84, 89, 90, 111, 142, 143], "well": [21, 34], "from_fil": [21, 23, 26, 27], "apparent_to_refract": 21, "45": [21, 26], "refracted_to_appar": 21, "44": 21, "classmethod": [21, 23, 26, 27, 82, 138, 145], "get_dummi": 21, "inverse_atmospheric_refract": 21, "deg_c": 21, "micron": 21, "appar": 21, "due": [21, 39, 40], "instrument": 21, "atmospher": 21, "refract": 21, "taken": 21, "account": 21, "without": [22, 57, 62, 103, 144, 145], "deep": 22, "consider": 22, "Such": 22, "somedai": 22, "make": [22, 39, 42, 142], "hard": [22, 34], "featur": [22, 34, 144, 145], "configurationview": [22, 23], "slice": [22, 23], "deprec": [22, 39], "decor": [22, 39, 41, 42, 144, 145], "mark": [22, 39, 41], "deprecated_namespac": [22, 39, 41], "disabl": [22, 39], "A": [22, 28, 39, 41, 42, 43, 45, 53, 65, 71, 79, 84, 89, 90, 91, 145], "find_config": [22, 23], "environ": [22, 23, 52, 143], "partial": [22, 48, 51, 82], "access": [22, 23, 26, 27, 32, 33, 34, 39, 42, 136, 138, 143, 145], "via": [22, 23, 32, 33, 34, 143], "avail": [22, 23, 32, 33, 34, 54, 62, 68, 69], "wai": [22, 23, 27, 32, 33, 34], "_configuration__path": 23, "io": [23, 26, 27, 32, 33, 34, 84], "also": [23, 26, 27, 29, 34, 65, 144], "open": [23, 27, 34, 88, 89], "f": [23, 25, 27, 34, 39, 40, 65, 71, 79, 84, 89, 90, 91, 145], "And": [23, 26, 27], "wish": [23, 27], "remot": [23, 27, 32, 33], "http": [23, 27, 32, 33, 91], "com": [23, 27, 32, 33], "reload": [23, 62, 143], "reflect": 23, "made": 23, "place": [23, 145], "home": [23, 76, 128], "content": [23, 32, 33, 34, 53, 55, 57, 126, 143], "must": [23, 26, 53, 65, 68, 69, 76, 101, 111, 113, 118, 145], "BE": 23, "accordingli": 23, "misconfigur": 23, "could": 23, "catastroph": 23, "damag": 23, "possibl": [23, 71, 133], "consequ": 23, "becom": 23, "uncontrol": 23, "becaus": 23, "feedback": [23, 52], "receiv": [23, 108], "too": [23, 26, 65, 142], "larg": [23, 65], "voltag": [23, 65, 79], "raw": [23, 26, 27], "keysview": 23, "valuesview": 23, "item": [23, 65, 68, 69, 71, 72, 76, 79, 84, 86, 89, 90, 91, 95, 96, 101, 102, 103, 104, 111, 113, 118, 122, 145], "itemsview": 23, "prefix": [23, 27, 34, 91, 143, 144], "159": 23, "element": [23, 136, 138, 139], "wide": 23, "packag": [24, 143, 146], "1st": 25, "2nd": 25, "interfac": [26, 39, 40, 65, 71, 79, 84, 89, 90, 91, 147], "standard": 26, "built": [26, 28, 136, 140], "physic": [26, 45, 56, 65, 79, 111, 131, 140], "parameter_kind": 26, "parameter_nam": [26, 140], "another_parameter_kind": 26, "parameter_with_unit": 26, "parameter_without_unit": 26, "group": [26, 53, 143], "kind": [26, 62, 138], "tabl": [26, 34, 127, 142, 143], "kept": [26, 34], "we": [26, 27, 34], "requir": [26, 144], "readabl": [26, 65, 68, 69, 71, 72, 79, 113, 127], "html_repr_of_dict": [26, 27, 35, 36], "dictionari": [26, 27, 35, 36, 140], "provid": [26, 27, 33, 144, 147], "conveni": [26, 145, 146], "whose": 26, "parser": [26, 27], "distanc": [26, 131], "pc": [26, 140], "To": [26, 39, 40, 53, 57, 134, 135, 140, 144], "syntax": [26, 138, 143], "Of": 26, "cours": 26, "onc": 26, "inclin": 26, "initi": [26, 47, 51, 54, 111, 138, 145], "10m": 26, "24077929e": 26, "16": [26, 65, 71, 79, 84, 89, 90, 91], "attach_alias": 26, "differ": [26, 28, 50, 53, 65, 126, 129, 139, 143, 144, 145], "long": 26, "dialect": 26, "exist": [26, 27, 142, 143], "_prefix": 27, "alwai": [27, 91, 145], "just": [27, 34, 143, 144, 145], "pair": [27, 51, 143], "sometim": 27, "higher": [27, 39, 40], "rich": [27, 36], "about": [27, 145], "intern": 27, "enabl": [27, 54], "filter": [27, 40], "b": [27, 34, 53, 138, 140, 145], "c": [27, 34, 127, 140, 145], "anoth": [27, 145], "modifi": [27, 145], "attach_pars": 27, "lambda": [27, 29, 127, 134, 135, 138], "4": [27, 44, 54, 59, 88, 91, 111, 138, 139, 145], "general_param1": 27, "specific_param1": 27, "general_param2": 27, "_richparamet": 27, "3d00m00": 27, "rais": [27, 31, 32, 33, 45, 50, 65, 79, 103, 132, 145], "No": [27, 39, 40, 65, 144], "flexibli": 27, "__getitem__": 27, "__getattr__": 27, "html_repr_of_statu": [28, 35, 38], "ctx_type": 28, "idx_gett": 28, "60": 28, "dataclass": 28, "singl": [28, 65, 71, 79, 84, 89, 90, 91, 143], "statu": [28, 31, 51, 89, 130], "out_of_rang": 28, "fail": [28, 57], "typic": 28, "call": [28, 39, 40, 54, 134, 135, 145], "remov": [28, 34, 39, 41], "set": [28, 39, 40, 65, 68, 69, 71, 76, 79, 84, 89, 90, 91, 96, 101, 103, 111, 113, 118, 134, 135, 143, 144, 145], "100": [28, 44, 55, 59, 60, 61, 138, 145], "idx": 28, "search": [28, 143, 144, 145], "_obj": 28, "supportscomparison": [29, 44, 56], "lower": [29, 39, 40, 44, 56, 138, 143], "strict": [29, 144], "comparison": 29, "allow": [29, 48, 62, 142], "exactli": [29, 145], "equal": [29, 45], "valid_valu": 29, "check": [29, 52, 68, 69, 79, 96, 101, 112, 113, 116, 118, 120, 122, 126, 129, 139, 142], "lexic": 29, "valid_str": 29, "aaa": 29, "bbb": 29, "iter": [29, 138], "_": [29, 65, 91], "width": [29, 111], "contain_al": 29, "contain_ani": 29, "map": [29, 34, 65, 68, 69, 71, 72, 79, 91, 113, 138], "func": [29, 39, 42, 51, 138, 141], "recogn": 30, "regard": 31, "permissionerror": 31, "reason": [31, 39, 41], "advis": 31, "fix": [31, 134, 135], "timeouterror": 31, "userwarn": 31, "attributeerror": 31, "__path": [32, 33], "allow_remot": [32, 33], "fetch": [32, 33], "host": [32, 33, 68, 69, 72, 73, 76, 77, 96, 98, 101, 102, 103, 104, 106, 108, 109, 111, 113, 118], "filenotfounderror": [32, 33], "couldn": [32, 33, 140], "urlerror": [32, 33], "protocol": [32, 33, 56], "ftp": [32, 33], "etc": [32, 33], "invalid": [32, 33, 145], "txt": [32, 33, 39, 40], "absolut": [32, 33, 44, 76, 89, 90, 91, 92, 93, 131, 134, 135], "192": [32, 33], "168": [32, 33], "xxx": [32, 33], "80": [32, 33], "read_fil": 34, "__file": 34, "pyproject": 34, "flatten": 34, "doc": [34, 40], "sep": 34, "document": [34, 143], "join": 34, "recurs": 34, "inlinet": 34, "come": [34, 144], "motiv": 34, "structur": [34, 127, 128, 138], "semant": [34, 147], "deepli": 34, "nest": 34, "them": [34, 91, 145], "abil": [34, 103], "author": 34, "felt": 34, "good": [34, 145], "contradict": 34, "inlin": [34, 142, 143], "short": 34, "hand": [34, 145], "impli": 34, "thei": [34, 50, 57, 145], "treat": 34, "altern": 34, "emploi": [34, 140], "to_str": 34, "__map": 34, "toml_str": 34, "nb": 34, "text": [36, 40], "__dict": 36, "__type": 36, "alias": 36, "rich_repr": 36, "observation_spec": 37, "__callabl": [39, 41], "version_sinc": [39, 41], "version_remov": [39, 41], "replac": [39, 41, 56, 62, 136, 140], "version": [39, 41, 65, 71, 79, 143, 147], "def": [39, 41, 53, 144, 145], "foo": [39, 41, 53], "deprecationwarn": [39, 41], "There": [39, 41], "min_level": [39, 40], "throttle_duration_sec": [39, 40], "sever": [39, 40, 61, 125, 132], "displai": [39, 40], "termin": [39, 40, 136, 137], "suppress": [39, 40], "less": [39, 40, 45], "messag": [39, 40, 142], "matter": [39, 40, 45, 145], "info": [39, 40], "throttl": [39, 40, 142], "within": [39, 40], "getlogg": [39, 40], "otf_observ": [39, 40], "debug": [39, 40, 125], "diagnos": [39, 40], "problem": [39, 40], "expect": [39, 40], "happen": [39, 40], "user": [39, 40, 52, 62, 128], "care": [39, 40], "notifi": [39, 40], "cannot": [39, 40, 134, 135, 140, 144], "critic": [39, 40, 132, 140], "program": [39, 40], "obslog": [39, 40], "finish": [39, 40, 53], "indent_level": [39, 40], "tent": [39, 42], "colorizelevelnameformatt": 40, "fmt": 40, "datefmt": 40, "style": 40, "formatt": 40, "color": 40, "see": [40, 45, 65, 71, 76, 79, 84, 89, 90, 91, 111, 140, 143, 145, 147], "colorprefix": 40, "x1b": 40, "0m": 40, "35m": 40, "32m": 40, "33m": 40, "40": 40, "31m": 40, "41": [40, 44], "97m": 40, "record": [40, 142, 143], "logrecord": 40, "reduc": 40, "ident": 40, "duration_sec": 40, "handler": 40, "discard": 40, "random": [43, 66, 87, 98, 109, 114, 117, 121], "clip": [43, 44, 47], "minimum": [43, 44, 47, 111], "frang": [43, 45], "absmax": 44, "util": 44, "inclus": 45, "pad_method": 45, "edg": 45, "pad_kwarg": 45, "space": 45, "what": 45, "pad": 45, "match": 45, "more": [45, 140, 144], "detail": [45, 91, 143, 145, 146], "typeerror": 45, "mixtur": 45, "unitconversionerror": [45, 50], "dimens": [45, 50, 136, 140], "7": [45, 139], "9": [45, 65, 71, 79, 84, 89, 90, 91, 139], "normal": [46, 54], "mu": [46, 47], "sigma": 46, "sigmoid": 46, "seed": 47, "walk": 47, "nois": 47, "stabil": 47, "fluctuat": [47, 65], "incompat": 50, "valueerror": [50, 132, 140], "np": 50, "notinitializederror": 51, "empty_paramet": 51, "shift": [51, 65, 79], "create_wrapp": 51, "signatur": [51, 140], "parse_argu": 51, "fallback": 51, "merge_argu": 51, "merg": 51, "candid": 51, "appear": [51, 57], "later": 51, "take": [51, 145], "preced": [51, 145], "here": [52, 57, 133, 144], "ensur": [52, 133], "thu": [52, 140], "reliabl": 52, "unsaf": [52, 53], "situat": [52, 145], "malici": 52, "loss": 52, "realtim": 52, "ness": 52, "loadcheck": [52, 54], "busi": [52, 53, 65, 68, 69, 71, 72, 76, 79, 86, 91, 95, 96, 101, 102, 103, 104, 113, 118, 122], "state": [52, 53, 65, 68, 69, 71, 72, 76, 79, 86, 91, 95, 96, 101, 102, 103, 104, 113, 118, 122, 145], "sanit": [52, 55, 65, 79], "conflict": 53, "obj": 53, "flagnam": 53, "block": 53, "until": 53, "confirm": 53, "exit": 53, "free": 53, "flag": 53, "task_a": 53, "self": [53, 144, 145], "logic": [53, 54], "task": 53, "sleep": 53, "task_b": 53, "concurr": 53, "futur": 53, "threadpoolexecutor": 53, "executor": 53, "future1": 53, "submit": 53, "future2": 53, "wait": [53, 54, 91, 127, 142], "two": [53, 67, 68, 72, 134, 135], "howev": 53, "prevent": 53, "across": 53, "distinguish": [53, 144], "cpu_count": 54, "processor": 54, "thread": 54, "simultan": 54, "cpu": 54, "multi": 54, "intel": 54, "hyper": 54, "technologi": 54, "cpu_usag": 54, "averag": [54, 65], "loadavg": 54, "load": 54, "per": [54, 57], "process": [54, 62], "1min": 54, "5min": 54, "15min": 54, "memory_avail": 54, "memori": [54, 139], "disk_usag": 54, "disk": 54, "storag": [54, 128], "network_amount": 54, "known_vari": 55, "max_length": 55, "t_co": 56, "equivalencytyp": 56, "angleunit": 56, "coordinatetyp": 56, "textlik": [56, 126, 127], "isdataclass": 56, "even": [57, 62, 145], "explicitli": 57, "line": 57, "eq": 57, "scan_to_point_equival": 57, "5scan": 57, "25": 57, "dbm": [57, 101, 102, 103, 104, 105, 106], "decibelunit": 57, "db": [57, 68, 69, 70, 72, 73, 96, 127], "mw": [57, 96], "power": [57, 67, 68, 69, 72, 94, 95, 96, 103, 111], "linearinterp": [58, 59, 60], "interpol": [58, 59], "resiz": 58, "align_bi": [59, 60], "attr": [59, 60], "ext": 59, "simplenamespac": [59, 60], "interp": 60, "keep_duration_sec": 61, "push": [61, 138], "n_sampl": 61, "cut": 61, "spectral": [61, 108, 109, 110, 111], "want": [61, 65, 79, 140, 143], "coars": 61, "sampl": [61, 65], "spectral_data": 61, "8192": 61, "16384": 61, "sai": 62, "motor": [62, 134, 135, 142, 144], "spectromet": 62, "write": [62, 144], "code": 62, "reus": 62, "antennaencod": 62, "antennamotor": [62, 144], "attenu": 62, "ccdcontrol": [62, 75, 76, 77], "choppermotor": 62, "devicebas": [62, 64, 70, 75, 80, 82, 85, 92, 97, 99, 105, 110, 115, 119, 123], "domeencod": 62, "domemotor": 62, "drivemotor": 62, "drivestatu": 62, "hemtbiasread": 62, "localattenu": 62, "m2motor": [62, 144], "m4motor": 62, "membranemotor": 62, "powermet": [62, 94, 95, 96, 97, 98], "signalgener": [62, 101, 102, 103, 104, 105, 106], "sisbiasread": 62, "sisbiassett": 62, "thermomet": [62, 68, 69, 101, 118], "vacuumgaug": [62, 117, 118, 119], "weatherst": [62, 121, 122, 123], "antenna_encod": 62, "antenna_motor": 62, "ccd_control": 62, "chopper_motor": 62, "dome_encod": 62, "dome_motor": 62, "drive_motor": 62, "drive_statu": 62, "hemt_bias_read": 62, "local_attenu": 62, "m2_motor": 62, "m4_motor": 62, "membrane_motor": 62, "power_met": 62, "signal_gener": 62, "sis_bias_read": 62, "sis_bias_sett": 62, "vacuum_gaug": 62, "weather_st": 62, "simul": [62, 142], "currentattenuatorsimul": [62, 73], "11713b": [62, 68], "a11713b": [62, 67], "11713c": [62, 69], "a11713c": [62, 67], "ac240": [62, 107], "cpz2724": [62, 88], "cpz3177": [62, 63], "ad_convert": 62, "cpz340516": [62, 67], "cpz340816": [62, 78], "da_convert": 62, "cpz6204": [62, 83], "cpz7204": [62, 88], "cpz7415v": [62, 88, 144], "e8257d": [62, 100], "fsw0010": [62, 100], "fsw0020": [62, 100], "m100": [62, 74], "ma24126a": [62, 94], "mg3692c": [62, 100], "ml2437a": [62, 94], "model218": [62, 112, 113], "model_218": 62, "nd287": [62, 83], "rhio10": [62, 67], "tpg261": [62, 116], "tr73u": [62, 120], "xfft": [62, 107], "device_bas": 62, "usb": [62, 86, 95, 113, 122], "lsb": 62, "band6_lsb_2nd": 62, "band6lsb2nd": 62, "band6_usb_2nd": 62, "band6usb2nd": 62, "band6_1st": 62, "band61st": 62, "ac240_1": 62, "ac2401": 62, "adconvertersimul": [63, 66], "32": [63, 65, 78, 79], "64": [63, 65], "channel": [63, 65, 67, 68, 69, 71, 72, 78, 79, 111, 113], "adconvert": [64, 65, 66], "manufactur": [64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123, 144], "get_voltag": [64, 65, 66], "get_curr": [64, 65, 66], "final": [64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123, 144], "rsw_id": [65, 66, 71, 73, 79, 81, 84, 87, 89, 90, 91, 93], "board": [65, 71, 79, 84, 88, 89, 90, 91, 108, 109, 110, 111], "rotari": [65, 71, 79, 84, 89, 90, 91], "switch": [65, 71, 79, 84, 89, 90, 91], "rsw1": [65, 71, 79, 84, 89, 90, 91], "mount": [65, 71, 79, 84, 89, 90, 91], "side": [65, 71, 79, 84, 89, 90, 91], "ship": [65, 71, 79, 84, 89, 90, 91], "pci": [65, 71, 79, 84, 89, 90, 91], "fa": [65, 71, 79, 84, 89, 90, 91], "factori": [65, 71, 79, 84, 89, 90, 91], "ave_num": 65, "reduct": 65, "faint": 65, "smpl_freq": 65, "output": [65, 91, 103, 111, 142], "obtain": 65, "small": 65, "against": 65, "single_diff": 65, "diff": 65, "differenti": 65, "all_ch_num": 65, "manual": 65, "wire": 65, "design": [65, 143], "It": 65, "For": [65, 68, 69, 71, 72, 91, 103, 111, 140, 145], "12": [65, 134, 135], "all_ch_mum": 65, "least": [65, 132], "ch_rang": 65, "0_5v": 65, "0_10v": 65, "2p5v": 65, "5v": 65, "10v": 65, "below": [65, 143, 144, 145, 146], "combin": 65, "three": 65, "dip": 65, "dsw1": 65, "dsw2": 65, "dsw3": 65, "human": [65, 68, 69, 71, 72, 79, 113], "assign": [65, 68, 69, 71, 72, 79, 113], "head": 65, "si": 65, "hemt": 65, "sis_usb_v": 65, "hemt_ch1_vdr": 65, "smpl_ch_req": 65, "unus": [65, 79], "ch": [65, 70], "parameter_typ": 65, "scale": [65, 79, 91], "bia": 65, "wrap": 65, "rest": 65, "get_data": 65, "get_pow": [65, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106], "is_simul": [66, 73, 77, 81, 82, 87, 93, 98, 106, 109, 114, 117, 121], "attennu": [67, 68, 69, 72], "IF": [67, 68, 69, 72, 94, 95, 96, 107, 111], "sigal": [67, 68, 69, 72], "four": [67, 69], "loattenu": [67, 71], "8": [67, 71, 107, 111, 139], "currentattenu": [67, 70, 71, 73], "networkattenu": [67, 68, 69, 70, 72, 73], "skip_on_simul": [68, 69, 101, 102, 103, 104, 136, 141], "gpib": [68, 69, 96, 101, 113], "lan": [68, 69, 101, 118], "chosen": [68, 69, 101, 113, 118], "ip": [68, 69, 72, 96, 101, 102, 103, 104, 111, 113, 118], "address": [68, 69, 72, 96, 101, 102, 103, 104, 111, 113, 118], "ethernet": [68, 69, 72, 101, 102, 103, 104, 111, 118], "gpib_port": [68, 69, 101], "port": [68, 69, 72, 86, 95, 96, 101, 102, 103, 104, 111, 113, 118, 121, 122], "lan_port": [68, 69, 101], "5025": [68, 69, 101], "na": [68, 69], "ag8494g": [68, 69], "ag8494h": [68, 69], "ag8495g": [68, 69], "ag8495h": [68, 69], "ag8495k": [68, 69], "ag8496g": [68, 69], "ag8496h": [68, 69], "ag8497k": [68, 69], "ag84904k": [68, 69], "ag84904l": [68, 69], "ag84904m": [68, 69], "ag84905m": [68, 69], "ag84906k": [68, 69], "ag84906l": [68, 69], "ag84907k": [68, 69], "ag84907l": [68, 69], "ag84908m": [68, 69], "1lu": [68, 69], "1ll": [68, 69], "1ru": [68, 69], "1rl": [68, 69], "readablevers": [68, 69, 72, 113], "2r": 68, "2l": 68, "agil": [68, 69, 101, 108], "model_check": [68, 69], "get_loss": [68, 69, 70, 72, 73], "set_loss": [68, 69, 70, 72, 73], "1x": 69, "bank1": 69, "1y": 69, "2x": [69, 131], "bank2": 69, "2y": 69, "get_outputrang": [70, 71, 73], "set_outputrang": [70, 71, 73], "outputrang": [70, 71, 73], "set_curr": [70, 71], "ma": [70, 71], "apply_curr": [70, 71], "100ghz": 71, "da0_100ma": 71, "da0_1ma": 71, "100ma": 71, "els": 71, "10ma": 71, "ch1": 72, "ch2": 72, "sena": 72, "networkattenuatorsimul": 73, "output_curr": 73, "ccdcontrollersimul": [74, 77], "ccd": [74, 76], "camera": [74, 76], "captur": [74, 75, 76, 77], "star": [74, 76], "instal": 76, "libgphoto2": 76, "librari": [76, 147], "advanc": 76, "pic_captured_path": 76, "save": [76, 142, 143], "directori": [76, 127, 128, 143], "pictur": 76, "pi": 76, "optical_point": 76, "canon": 76, "savepath": [76, 77], "daconvertersimul": [78, 81], "daconvert": [79, 80, 81], "max_mv": 79, "volatag": 79, "suppli": [79, 100, 101, 102, 103, 104], "weather": [79, 120, 122], "everi": [79, 138, 145], "mv": [79, 80, 81], "set_voltag": [79, 80, 81], "apply_voltag": [79, 80, 81], "get_device_configur": [82, 99], "get_simulator_class": 82, "bind": 82, "anonymous_devic": 82, "named_devic": 82, "userdict": [82, 138], "t_kei": 82, "t_valu": 82, "readout": [83, 84, 86], "encodersimul": [83, 87], "get_dome_read": 84, "get_read": [84, 85, 86, 87], "dome_set_count": 84, "board_set": 84, "z_mode": 84, "heidenhain": 86, "digit": [88, 89], "o": [88, 89, 143], "membran": [88, 89], "nanten2": [88, 89, 90], "puls": [88, 90, 91], "m4": [88, 90], "motorsimul": [88, 93], "set_spe": [89, 90, 91, 92, 93], "antenna_mov": 89, "antenna_stop": 89, "antenna_statu": 89, "set_step": [89, 90, 91, 92, 93], "mayb": [89, 90, 91, 92, 93], "get_step": [89, 90, 91, 92, 93], "dome_mov": 89, "turn": 89, "dome_oc": 89, "po": 89, "dome_stop": 89, "dome_pos": 89, "dome_fan": 89, "fan": 89, "dome_statu": 89, "dome_limit_check": 89, "memb_oc": 89, "memb_pos": 89, "memb_statu": 89, "m2_move": 89, "dist": 89, "m2_statu": 89, "um_to_pul": 89, "moveindexff": 89, "pul": 89, "strobe": 89, "drive_mov": 89, "contactor_mov": 89, "drive_contactor_statu": 89, "useax": 91, "z": 91, "concaten": 91, "_mode": 91, "jog": 91, "org": 91, "ptp": 91, "timer": 91, "_pulse_conf": 91, "dir": 91, "duti": 91, "activ": [91, 128], "ccw": 91, "low": 91, "200u": 91, "insert": 91, "cycl": 91, "adapt": 91, "_motion_clock": 91, "factor": [91, 136, 140], "through": [91, 133], "4095": 91, "300": 91, "clock": 91, "_motion_acc_mod": 91, "acc_norm": 91, "acc_sin": 91, "curv": 91, "_motion_low_spe": 91, "startup": 91, "65535": 91, "_motion_spe": 91, "steadi": 91, "_motion_acc": 91, "_motion_dec": 91, "deceler": [91, 130], "_motion_step": 91, "134217728": 91, "134217727": 91, "org_search": 91, "axis_": 91, "speed_to_pulse_factor_": 91, "gear": 91, "ratio": 91, "www": 91, "jp": 91, "download": 91, "tutori": 91, "tut0053_14": 91, "pdf": 91, "current_mot": 91, "signal": [94, 95, 96, 100, 101, 102, 103, 104], "powermetersimul": [94, 98], "anritsu": [95, 96, 104], "zero_set": 95, "get_device_list": 99, "parse_device_configur": 99, "list_implement": 99, "signalgeneratorsimul": [100, 106], "set_freq": [101, 102, 103, 104, 105, 106], "set_pow": [101, 102, 103, 104, 105, 106], "get_freq": [101, 102, 103, 104, 105, 106], "start_output": [101, 102, 103, 104, 105, 106], "stop_output": [101, 102, 103, 104, 105, 106], "get_output_statu": [101, 102, 103, 104, 105, 106], "phasematrix": [102, 103], "product": [103, 140], "effect": [103, 145], "meaningless": 103, "spectrometersimul": [107, 109], "do": [107, 111], "fft": [107, 111], "msg_unpack": 108, "buff": 108, "get_spectra": [108, 109, 110, 111], "change_spec_ch": [108, 111], "chan": [108, 111], "localhost": 111, "data_port": 111, "transmmit": 111, "25144": 111, "cmd_port": 111, "16210": 111, "synctime_u": 111, "sync": 111, "100000": 111, "bw_mhz": 111, "band": 111, "boad": 111, "mhz": 111, "2000": 111, "2500": 111, "max_ch": 111, "max": [111, 143], "32768": 111, "radiomet": 111, "gmbh": 111, "data_consum": 111, "udp_client": 111, "temparetur": [112, 113], "cryostat": [112, 113, 116, 118], "thermometersimul": [112, 114], "usb_port": 113, "lakeshor": 113, "get_temp": [113, 114, 115], "vacuum": [116, 118], "gaug": [116, 118], "preassur": [116, 118], "vacuumgaugesimul": [116, 117], "get_pressur": [117, 118, 119, 121, 122, 123], "rs232": 118, "rs232_port": 118, "pfeiffer": 118, "satat": [120, 122], "outsid": [120, 122], "weatherstationsimul": [120, 121], "get_temperatur": [121, 122, 123], "get_humid": [121, 122, 123], "tandd": 122, "consolelogwrit": [124, 125], "writer": [124, 125, 126, 127, 128, 129], "filewrit": [124, 126, 128], "necstdbwrit": [124, 127], "dump": [124, 125, 127], "necstdb": [124, 127], "log_file_path": 125, "start_record": [125, 126, 127, 128, 129], "record_dir": [125, 126, 127, 128, 129], "append": [125, 126, 127, 128, 129, 138], "issu": 125, "stop_record": [125, 126, 127, 128, 129], "chunk": [126, 127, 129], "essenti": [126, 129], "extens": [126, 129, 143], "parse_str_s": 127, "str_to_byt": 127, "byte": 127, "databas": 127, "doubl": [127, 145], "1664195057": 127, "022712": 127, "float32": 127, "850": 127, "livelinessdur": 127, "15": 127, "isn": [127, 134, 135, 143, 144], "sec": 127, "close": 127, "warningqueues": 127, "being": 127, "greater": 127, "dtypeconvert": 127, "char": 127, "float64": 127, "int16": 127, "int32": 127, "int64": 127, "int8": 127, "uint16": 127, "uint32": 127, "uint64": 127, "uint8": 127, "topic": [127, 142], "meter_read": 127, "add_tabl": 127, "remove_t": 127, "record_root": [128, 142], "root": 128, "insid": [128, 145], "subdirectori": [128, 144], "add_writ": 128, "dbwriter": 128, "test": [128, 140], "drop_writ": 128, "drop": 128, "noreset": 128, "deactiv": 128, "is_record": 128, "nears": [130, 131], "addition": 131, "restrict": [131, 143], "understand": 131, "junior": 131, "know": [131, 144], "qquad": 131, "v_0": 131, "x_0": 131, "sqrt": 131, "2ax": 131, "consid": 131, "355": 131, "354": 131, "89442719": 131, "ascend": 132, "reserv": 132, "topic1": 132, "topic2": 132, "much": 133, "overrid": 133, "behavior": [133, 145], "real": 133, "antennaencoderemul": [133, 134], "emul": [133, 134, 135], "domeencoderemul": [133, 135], "dome": 133, "azeldata": [134, 135, 136, 138], "initialposit": [134, 135], "device_moment_of_inertia": [134, 135], "3000": [134, 135], "m2": [134, 135], "kg": [134, 135, 140], "motor_torqu": [134, 135], "11": [134, 135], "angular_resolut": [134, 135], "13728814": [134, 135], "moment": [134, 135], "inertia": [134, 135], "torqu": [134, 135], "exert": [134, 135], "resolut": [134, 135], "independ": [134, 135, 144], "api": [134, 135, 144, 147], "driver": [134, 135], "yet": [134, 135], "enc": [134, 135], "pid_az": [134, 135], "abs_acceler": [134, 135], "consecut": [134, 135, 139], "approxim": [134, 135], "altazimuth": [134, 135], "purpos": 136, "aliaseddict": [136, 138], "conditioncheck": [136, 139], "parametermap": [136, 138], "angle_conversion_factor": [136, 140], "daz2dx": [136, 140], "discret": [136, 139], "nearest": [136, 139], "arithmet": [136, 139], "dx2daz": [136, 140], "force_data_typ": [136, 140], "linear_sequ": [136, 137], "similar": [136, 137], "linspac": [136, 137], "unknown": [136, 137], "parse_quant": [136, 140], "partially_convert_unit": [136, 140], "quantity2builtin": [136, 140], "tocamelcas": [136, 138], "to_snake_cas": [136, 138], "num": 137, "initvalu": 138, "fill": 138, "preserv": 138, "both": 138, "fulli": 138, "pascal": 138, "bumpi": 138, "ceil": 139, "floor": 139, "141592": 139, "allow_infti": 139, "yield": 139, "count": 139, "infin": 139, "leak": 139, "caution": 139, "reset_on_failur": 139, "realiz": [140, 144], "slower": 140, "bottleneck": 140, "angle_deg": 140, "3600": 140, "express": 140, "m_sun": 140, "solmass": 140, "pc2": 140, "96542625e": 140, "new_unit": 140, "construct": 140, "j": 140, "erg": 140, "w": 140, "l_sun": 140, "1484e": 140, "27": 140, "hour": 140, "19e": 140, "23": 140, "h": 140, "give": 140, "sollum": 140, "hashabl": 140, "either": 140, "299792458m": 140, "km": 140, "299792": 140, "458": 140, "default_unit": 140, "_getquant": 140, "1m": 140, "2m": 140, "3m": 140, "descript": 142, "height": 142, "boolean": [142, 143], "alert_interval_sec": 142, "alert": 142, "publish": 142, "antenna_pid_param_az": 142, "antenna_pid_param_el": 142, "antenna_drive_range_az": 142, "hardwar": 142, "antenna_drive_range_el": 142, "antenna_drive_warning_limit_az": 142, "prefer": [142, 143, 144], "antenna_drive_warning_limit_el": 142, "antenna_drive_critical_limit_az": 142, "antenna_drive_critical_limit_el": 142, "antenna_pointing_accuraci": 142, "antenna_pointing_parameter_path": 142, "antenna_max_acceleration_az": 142, "antenna_max_acceleration_el": 142, "antenna_max_speed_az": 142, "antenna_max_speed_el": 142, "antenna_command_frequ": 142, "antenna_command_offset_sec": 142, "ros_service_timeout_sec": 142, "ro": 142, "servic": 142, "client": 142, "server": 142, "ros_communication_deadline_sec": 142, "staler": 142, "subscrib": 142, "ros_logging_interval_sec": 142, "verbos": 142, "ros_topic_scan_interval_sec": 142, "node": 142, "constantli": 142, "nonspecif": 143, "perticular": 143, "necst_root": 143, "wasn": 143, "src": 143, "caught": 143, "overwrit": 143, "written": 143, "tomlkit": 143, "datetim": 143, "strongli": 143, "discourag": 143, "unexpect": [143, 145], "snake": [143, 144], "case": [143, 144, 145], "word": 143, "split": 143, "underscor": [143, 145], "simplic": 143, "indic": [143, 144], "comment": 143, "encourag": 143, "satisfi": 143, "spec": [143, 145], "antenna_max_spe": 143, "2deg": 143, "antenna_max_acceler": 143, "5deg": 143, "maxacceler": 143, "nor": 143, "__get_pars": 143, "py": [143, 144], "ll": 143, "antenna_param": 143, "nonexist": 143, "undefined_parameters_a": 143, "undefin": 143, "date": 143, "common": 144, "select": 144, "dev_": 144, "link": 144, "selector": 144, "referenc": 144, "camel": 144, "dev_antenna_motor": 144, "latter": 144, "reveal": 144, "littl": [144, 145], "bit": [144, 145], "concret": 144, "uniqu": 144, "twice": 144, "dev_m2_motor": 144, "insensit": 144, "procedur": 144, "alreadi": 144, "skip": 144, "throughout": 144, "abstractmethod": 144, "convent": 144, "_base": 144, "devicetyp": 144, "set_some_paramet": 144, "get_some_paramet": 144, "get_all_data": 144, "some_paramet": 144, "omit": 144, "alphanumer": 144, "charact": 144, "inconsist": 144, "impos": 144, "freeli": 144, "ones": 144, "duplic": 144, "device_type_bas": 144, "devicemodel": 144, "_some_method_to_implement_get_some_paramet": 144, "pai": 145, "attent": 145, "languag": 145, "modif": 145, "break": 145, "whole": 145, "On": 145, "sake": 145, "applic": 145, "develop": 145, "noth": 145, "exact": 145, "singleton": 145, "pattern": 145, "hold": 145, "wa": 145, "In": [145, 146], "immedi": 145, "q": 145, "123": 145, "_instanc": 145, "cl": 145, "super": 145, "instance1": 145, "after": 145, "instance2": 145, "tricki": [145, 146], "variable_nam": 145, "manner": 145, "new_valu": 145, "obscur": 145, "seem": 145, "But": 145, "__dict__": 145, "snippet": 145, "almost": 145, "instance_of_a": 145, "minor": 145, "swap": 145, "instance_of_b": 145, "irrelev": 145, "pursuit": 146, "explan": 146, "neclib": 146, "dunder": 146, "__": 146, "ipython": 147, "intuit": 147, "pip": 147}, "objects": {"": [[0, 0, 0, "-", "neclib"]], "neclib": [[1, 0, 0, "-", "controllers"], [3, 0, 0, "-", "coordinates"], [22, 0, 0, "-", "core"], [58, 0, 0, "-", "data"], [62, 0, 0, "-", "devices"], [124, 0, 0, "-", "recorders"], [130, 0, 0, "-", "safety"], [133, 0, 0, "-", "simulators"], [136, 0, 0, "-", "utils"]], "neclib.controllers": [[2, 0, 0, "-", "antenna_pid"]], "neclib.controllers.antenna_pid": [[2, 1, 1, "", "PIDController"]], "neclib.controllers.antenna_pid.PIDController": [[2, 2, 1, "", "ANGLE_UNIT"], [2, 3, 1, "", "dt"], [2, 3, 1, "", "error_derivative"], [2, 3, 1, "", "error_integral"], [2, 4, 1, "", "get_speed"], [2, 4, 1, "", "params"]], "neclib.coordinates": [[4, 0, 0, "-", "convert"], [5, 0, 0, "-", "frame"], [6, 0, 0, "-", "observations"], [11, 0, 0, "-", "observer"], [12, 0, 0, "-", "optimize"], [13, 0, 0, "-", "path_finder"], [14, 0, 0, "-", "paths"], [18, 0, 0, "-", "pointing_error"]], "neclib.coordinates.convert": [[4, 1, 1, "", "CoordCalculator"], [4, 1, 1, "", "CoordinateDelta"]], "neclib.coordinates.convert.CoordCalculator": [[4, 3, 1, "", "altaz_kwargs"], [4, 3, 1, "", "command_freq"], [4, 2, 1, "", "command_group_duration_sec"], [4, 3, 1, "", "command_offset_sec"], [4, 3, 1, "", "coordinate"], [4, 2, 1, "", "coordinate_delta"], [4, 2, 1, "", "direct_before"], [4, 2, 1, "", "direct_mode"], [4, 2, 1, "", "location"], [4, 3, 1, "", "name_coordinate"], [4, 2, 1, "", "obsfreq"], [4, 2, 1, "", "obswl"], [4, 3, 1, "", "pointing_err"], [4, 2, 1, "", "pointing_err_file"], [4, 2, 1, "", "pressure"], [4, 2, 1, "", "relative_humidity"], [4, 2, 1, "", "temperature"]], "neclib.coordinates.convert.CoordinateDelta": [[4, 3, 1, "", "broadcasted"], [4, 2, 1, "", "d_lat"], [4, 2, 1, "", "d_lon"], [4, 2, 1, "", "frame"], [4, 3, 1, "", "shape"], [4, 3, 1, "", "size"], [4, 2, 1, "", "unit"]], "neclib.coordinates.frame": [[5, 5, 1, "", "describe_frame"], [5, 5, 1, "", "parse_frame"]], "neclib.coordinates.observations": [[7, 0, 0, "-", "observation_spec_base"], [8, 0, 0, "-", "optical_pointing"], [9, 0, 0, "-", "otf"], [10, 0, 0, "-", "radio_pointing"]], "neclib.coordinates.observations.observation_spec_base": [[7, 1, 1, "", "ObservationMode"], [7, 1, 1, "", "ObservationSpec"], [7, 1, 1, "", "TimeKeeper"], [7, 1, 1, "", "Waypoint"]], "neclib.coordinates.observations.observation_spec_base.ObservationMode": [[7, 2, 1, "", "DRIVE"], [7, 2, 1, "", "HOT"], [7, 2, 1, "", "OFF"], [7, 2, 1, "", "ON"], [7, 2, 1, "", "SKY"]], "neclib.coordinates.observations.observation_spec_base.ObservationSpec": [[7, 3, 1, "", "coords"], [7, 3, 1, "", "fig"], [7, 4, 1, "", "hot"], [7, 4, 1, "", "observe"], [7, 4, 1, "", "off"]], "neclib.coordinates.observations.observation_spec_base.TimeKeeper": [[7, 4, 1, "", "increment"], [7, 3, 1, "", "should_observe"], [7, 4, 1, "", "tell_observed"]], "neclib.coordinates.observations.observation_spec_base.Waypoint": [[7, 3, 1, "", "coordinates"], [7, 2, 1, "", "id"], [7, 2, 1, "", "integration"], [7, 3, 1, "", "is_scan"], [7, 2, 1, "", "mode"], [7, 3, 1, "", "name_query"], [7, 2, 1, "", "offset"], [7, 2, 1, "", "reference"], [7, 2, 1, "", "scan_frame"], [7, 2, 1, "", "speed"], [7, 2, 1, "", "start"], [7, 2, 1, "", "stop"], [7, 2, 1, "", "target"], [7, 3, 1, "", "with_offset"]], "neclib.coordinates.observations.optical_pointing": [[8, 1, 1, "", "OpticalPointingSpec"]], "neclib.coordinates.observations.optical_pointing.OpticalPointingSpec": [[8, 4, 1, "", "estimate_time"], [8, 4, 1, "", "readlines_file"], [8, 4, 1, "", "sort"], [8, 4, 1, "", "to_altaz"]], "neclib.coordinates.observations.otf": [[9, 1, 1, "", "OTFSpec"]], "neclib.coordinates.observations.otf.OTFSpec": [[9, 4, 1, "", "observe"]], "neclib.coordinates.observations.radio_pointing": [[10, 1, 1, "", "RadioPointingSpec"]], "neclib.coordinates.observations.radio_pointing.RadioPointingSpec": [[10, 4, 1, "", "observe"]], "neclib.coordinates.observer": [[11, 1, 1, "", "Observer"]], "neclib.coordinates.observer.Observer": [[11, 4, 1, "", "lst"], [11, 4, 1, "", "v_obs"]], "neclib.coordinates.optimize": [[12, 1, 1, "", "DriveLimitChecker"]], "neclib.coordinates.optimize.DriveLimitChecker": [[12, 4, 1, "", "optimize"]], "neclib.coordinates.path_finder": [[13, 1, 1, "", "ApparentAltAzCoordinate"], [13, 1, 1, "", "CoordinateGeneratorManager"], [13, 1, 1, "", "PathFinder"]], "neclib.coordinates.path_finder.ApparentAltAzCoordinate": [[13, 2, 1, "", "az"], [13, 2, 1, "", "context"], [13, 2, 1, "", "el"], [13, 2, 1, "", "time"]], "neclib.coordinates.path_finder.CoordinateGeneratorManager": [[13, 4, 1, "", "attach"], [13, 4, 1, "", "clear"], [13, 4, 1, "", "get"], [13, 4, 1, "", "will_send"]], "neclib.coordinates.path_finder.PathFinder": [[13, 4, 1, "", "from_function"], [13, 4, 1, "", "linear"], [13, 4, 1, "", "sequential"], [13, 4, 1, "", "track"]], "neclib.coordinates.paths": [[15, 0, 0, "-", "linear"], [16, 0, 0, "-", "path_base"], [17, 0, 0, "-", "track"]], "neclib.coordinates.paths.linear": [[15, 1, 1, "", "Accelerate"], [15, 1, 1, "", "Linear"], [15, 1, 1, "", "Standby"]], "neclib.coordinates.paths.linear.Accelerate": [[15, 3, 1, "", "arguments"], [15, 2, 1, "", "infinite"], [15, 3, 1, "", "lonlat_func"], [15, 3, 1, "", "n_cmd"], [15, 2, 1, "", "tight"], [15, 2, 1, "", "waypoint"]], "neclib.coordinates.paths.linear.Linear": [[15, 3, 1, "", "arguments"], [15, 2, 1, "", "infinite"], [15, 3, 1, "", "lonlat_func"], [15, 3, 1, "", "n_cmd"], [15, 3, 1, "", "target_frame"], [15, 2, 1, "", "tight"], [15, 2, 1, "", "waypoint"]], "neclib.coordinates.paths.linear.Standby": [[15, 3, 1, "", "arguments"], [15, 2, 1, "", "infinite"], [15, 3, 1, "", "lonlat_func"], [15, 3, 1, "", "n_cmd"], [15, 2, 1, "", "tight"], [15, 2, 1, "", "waypoint"]], "neclib.coordinates.paths.path_base": [[16, 1, 1, "", "ControlContext"], [16, 1, 1, "", "Index"], [16, 1, 1, "", "Path"]], "neclib.coordinates.paths.path_base.ControlContext": [[16, 2, 1, "", "duration"], [16, 2, 1, "", "infinite"], [16, 4, 1, "", "properties_modified"], [16, 2, 1, "", "start"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "tight"], [16, 4, 1, "", "update"], [16, 2, 1, "", "waypoint"]], "neclib.coordinates.paths.path_base.Index": [[16, 2, 1, "", "index"], [16, 2, 1, "", "time"]], "neclib.coordinates.paths.path_base.Path": [[16, 3, 1, "", "arguments"], [16, 2, 1, "", "infinite"], [16, 3, 1, "", "target_frame"], [16, 2, 1, "", "tight"], [16, 2, 1, "", "waypoint"]], "neclib.coordinates.paths.track": [[17, 1, 1, "", "Track"]], "neclib.coordinates.paths.track.Track": [[17, 3, 1, "", "arguments"], [17, 2, 1, "", "infinite"], [17, 3, 1, "", "lonlat_func"], [17, 3, 1, "", "n_cmd"], [17, 2, 1, "", "tight"], [17, 2, 1, "", "waypoint"]], "neclib.coordinates.pointing_error": [[19, 0, 0, "-", "nanten2"], [20, 0, 0, "-", "omu1p85m"], [21, 0, 0, "-", "pointing_error"]], "neclib.coordinates.pointing_error.nanten2": [[19, 1, 1, "", "NANTEN2"]], "neclib.coordinates.pointing_error.nanten2.NANTEN2": [[19, 4, 1, "", "apply_inverse_offset"], [19, 4, 1, "", "apply_offset"], [19, 4, 1, "", "fit"]], "neclib.coordinates.pointing_error.omu1p85m": [[20, 1, 1, "", "OMU1P85M"]], "neclib.coordinates.pointing_error.omu1p85m.OMU1P85M": [[20, 4, 1, "", "apply_inverse_offset"], [20, 4, 1, "", "apply_offset"], [20, 4, 1, "", "fit"]], "neclib.coordinates.pointing_error.pointing_error": [[21, 1, 1, "", "PointingError"]], "neclib.coordinates.pointing_error.pointing_error.PointingError": [[21, 4, 1, "", "apparent_to_refracted"], [21, 4, 1, "", "apply_inverse_offset"], [21, 4, 1, "", "apply_offset"], [21, 4, 1, "", "fit"], [21, 4, 1, "", "get_dummy"], [21, 4, 1, "", "inverse_atmospheric_refraction"], [21, 4, 1, "", "refracted_to_apparent"]], "neclib.core": [[23, 0, 0, "-", "configuration"], [24, 0, 0, "-", "data_type"], [30, 0, 0, "-", "environ"], [31, 0, 0, "-", "exceptions"], [32, 0, 0, "-", "files"], [35, 0, 0, "-", "formatting"], [39, 0, 0, "-", "inform"], [43, 0, 0, "-", "math"], [48, 0, 0, "-", "normalization"], [52, 0, 0, "-", "security"], [56, 0, 0, "-", "types"], [57, 0, 0, "-", "units"]], "neclib.core.configuration": [[23, 1, 1, "", "Configuration"], [23, 1, 1, "", "ConfigurationView"], [23, 6, 1, "", "config"], [23, 5, 1, "", "configure"], [23, 5, 1, "", "find_config"]], "neclib.core.configuration.Configuration": [[23, 4, 1, "", "configure"], [23, 4, 1, "", "from_file"], [23, 4, 1, "", "items"], [23, 4, 1, "", "keys"], [23, 3, 1, "", "parameters"], [23, 4, 1, "", "reload"], [23, 4, 1, "", "values"]], "neclib.core.configuration.ConfigurationView": [[23, 4, 1, "", "reload"]], "neclib.core.data_type": [[25, 0, 0, "-", "ordinal"], [26, 0, 0, "-", "parameters"], [27, 0, 0, "-", "rich_parameters"], [28, 0, 0, "-", "status_manager"], [29, 0, 0, "-", "value_range"]], "neclib.core.data_type.ordinal": [[25, 1, 1, "", "Ordinal"]], "neclib.core.data_type.parameters": [[26, 1, 1, "", "Parameters"]], "neclib.core.data_type.parameters.Parameters": [[26, 4, 1, "", "attach_aliases"], [26, 4, 1, "", "from_file"], [26, 3, 1, "", "parameters"]], "neclib.core.data_type.rich_parameters": [[27, 1, 1, "", "RichParameters"]], "neclib.core.data_type.rich_parameters.RichParameters": [[27, 4, 1, "", "attach_parsers"], [27, 4, 1, "", "from_file"], [27, 4, 1, "", "get"], [27, 3, 1, "", "parameters"]], "neclib.core.data_type.status_manager": [[28, 1, 1, "", "StatusManager"]], "neclib.core.data_type.status_manager.StatusManager": [[28, 4, 1, "", "get"], [28, 4, 1, "", "set"]], "neclib.core.data_type.value_range": [[29, 1, 1, "", "ValueRange"]], "neclib.core.data_type.value_range.ValueRange": [[29, 4, 1, "", "contain_all"], [29, 4, 1, "", "contain_any"], [29, 4, 1, "", "map"], [29, 3, 1, "", "width"]], "neclib.core.exceptions": [[31, 7, 1, "", "NECSTAccessibilityWarning"], [31, 7, 1, "", "NECSTAuthorityError"], [31, 7, 1, "", "NECSTConfigurationError"], [31, 7, 1, "", "NECSTParameterNameError"], [31, 7, 1, "", "NECSTTimeoutError"]], "neclib.core.files": [[33, 0, 0, "-", "general"], [32, 5, 1, "", "read"], [34, 0, 0, "-", "toml"]], "neclib.core.files.general": [[33, 5, 1, "", "read"]], "neclib.core.files.toml": [[34, 5, 1, "", "flatten"], [34, 5, 1, "", "read"], [34, 5, 1, "", "to_string"]], "neclib.core.formatting": [[36, 0, 0, "-", "dict_to_html"], [37, 0, 0, "-", "observation_to_html"], [38, 0, 0, "-", "status_to_html"]], "neclib.core.formatting.dict_to_html": [[36, 5, 1, "", "html_repr_of_dict"]], "neclib.core.formatting.observation_to_html": [[37, 5, 1, "", "html_repr_of_observation_spec"]], "neclib.core.formatting.status_to_html": [[38, 5, 1, "", "html_repr_of_status"]], "neclib.core.inform": [[40, 0, 0, "-", "console_logger"], [39, 5, 1, "", "deprecated"], [39, 5, 1, "", "deprecated_namespace"], [41, 0, 0, "-", "deprecation"], [42, 0, 0, "-", "disable"], [39, 5, 1, "", "disabled"], [39, 5, 1, "", "get_logger"]], "neclib.core.inform.console_logger": [[40, 1, 1, "", "ColorizeLevelNameFormatter"], [40, 1, 1, "", "Throttle"], [40, 5, 1, "", "get_logger"]], "neclib.core.inform.console_logger.ColorizeLevelNameFormatter": [[40, 2, 1, "", "ColorPrefix"], [40, 4, 1, "", "format"]], "neclib.core.inform.console_logger.Throttle": [[40, 4, 1, "", "filter"]], "neclib.core.inform.deprecation": [[41, 5, 1, "", "deprecated"], [41, 5, 1, "", "deprecated_namespace"]], "neclib.core.inform.disable": [[42, 5, 1, "", "disabled"]], "neclib.core.math": [[44, 0, 0, "-", "clip_impl"], [45, 0, 0, "-", "frange_impl"], [46, 0, 0, "-", "functions"], [47, 0, 0, "-", "random"]], "neclib.core.math.clip_impl": [[44, 5, 1, "", "clip"]], "neclib.core.math.frange_impl": [[45, 5, 1, "", "frange"]], "neclib.core.math.functions": [[46, 1, 1, "", "Functions"]], "neclib.core.math.functions.Functions": [[46, 1, 1, "", "Normal"], [46, 1, 1, "", "Sigmoid"]], "neclib.core.math.random": [[47, 1, 1, "", "Random"]], "neclib.core.math.random.Random": [[47, 4, 1, "", "fluctuation"], [47, 4, 1, "", "walk"]], "neclib.core.normalization": [[49, 0, 0, "-", "array"], [50, 0, 0, "-", "astropy"], [51, 0, 0, "-", "function_defaults"]], "neclib.core.normalization.array": [[49, 1, 1, "", "NPArrayValidator"]], "neclib.core.normalization.astropy": [[50, 1, 1, "", "QuantityValidator"], [50, 5, 1, "", "get_quantity"]], "neclib.core.normalization.function_defaults": [[51, 1, 1, "", "partial"]], "neclib.core.normalization.function_defaults.partial": [[51, 4, 1, "", "create_wrapper"], [51, 4, 1, "", "empty_parameters"], [51, 4, 1, "", "merge_arguments"], [51, 4, 1, "", "parse_arguments"], [51, 3, 1, "", "signature"]], "neclib.core.security": [[53, 0, 0, "-", "busy_impl"], [54, 0, 0, "-", "load_check"], [55, 0, 0, "-", "sanitize_impl"]], "neclib.core.security.busy_impl": [[53, 1, 1, "", "busy"]], "neclib.core.security.busy_impl.busy": [[53, 3, 1, "", "busy"]], "neclib.core.security.load_check": [[54, 1, 1, "", "LoadChecker"]], "neclib.core.security.load_check.LoadChecker": [[54, 2, 1, "", "cpu_count"], [54, 4, 1, "", "cpu_usage"], [54, 4, 1, "", "disk_usage"], [54, 4, 1, "", "loadavg"], [54, 4, 1, "", "memory_available"], [54, 4, 1, "", "network_amount"]], "neclib.core.security.sanitize_impl": [[55, 5, 1, "", "sanitize"]], "neclib.core.types": [[56, 6, 1, "", "AngleUnit"], [56, 1, 1, "", "Array"], [56, 6, 1, "", "CoordFrameType"], [56, 6, 1, "", "CoordinateType"], [56, 6, 1, "", "DimensionLess"], [56, 6, 1, "", "EquivalencyType"], [56, 1, 1, "", "IsDataClass"], [56, 1, 1, "", "SupportsComparison"], [56, 1, 1, "", "TextLike"], [56, 6, 1, "", "UnitType"]], "neclib.core.types.TextLike": [[56, 4, 1, "", "find"], [56, 4, 1, "", "lower"], [56, 4, 1, "", "replace"], [56, 4, 1, "", "upper"]], "neclib.core.units": [[57, 6, 1, "", "dBm"], [57, 6, 1, "", "point"], [57, 6, 1, "", "scan"], [57, 5, 1, "", "scan_to_points"]], "neclib.data": [[59, 0, 0, "-", "extrapolate"], [60, 0, 0, "-", "interpolate"], [61, 0, 0, "-", "resize"]], "neclib.data.extrapolate": [[59, 1, 1, "", "LinearExtrapolate"]], "neclib.data.interpolate": [[60, 1, 1, "", "Interpolator"], [60, 1, 1, "", "LinearInterp"]], "neclib.data.resize": [[61, 1, 1, "", "Resize"]], "neclib.data.resize.Resize": [[61, 4, 1, "", "get"], [61, 4, 1, "", "push"]], "neclib.devices": [[63, 0, 0, "-", "ad_converter"], [67, 0, 0, "-", "attenuator"], [74, 0, 0, "-", "ccd_controller"], [78, 0, 0, "-", "da_converter"], [82, 0, 0, "-", "device_base"], [83, 0, 0, "-", "encoder"], [62, 6, 1, "", "implementations"], [88, 0, 0, "-", "motor"], [62, 6, 1, "", "parsed"], [94, 0, 0, "-", "power_meter"], [62, 5, 1, "", "reload"], [99, 0, 0, "-", "selector"], [100, 0, 0, "-", "signal_generator"], [107, 0, 0, "-", "spectrometer"], [112, 0, 0, "-", "thermometer"], [116, 0, 0, "-", "vacuum_gauge"], [120, 0, 0, "-", "weather_station"]], "neclib.devices.ad_converter": [[64, 0, 0, "-", "ad_converter_base"], [65, 0, 0, "-", "cpz3177"], [66, 0, 0, "-", "simulator"]], "neclib.devices.ad_converter.ad_converter_base": [[64, 1, 1, "", "ADConverter"]], "neclib.devices.ad_converter.ad_converter_base.ADConverter": [[64, 2, 1, "", "Manufacturer"], [64, 2, 1, "", "Model"], [64, 4, 1, "", "finalize"], [64, 4, 1, "", "get_current"], [64, 4, 1, "", "get_voltage"]], "neclib.devices.ad_converter.cpz3177": [[65, 1, 1, "", "CPZ3177"]], "neclib.devices.ad_converter.cpz3177.CPZ3177": [[65, 2, 1, "", "Identifier"], [65, 2, 1, "", "Manufacturer"], [65, 2, 1, "", "Model"], [65, 3, 1, "", "converter"], [65, 4, 1, "", "finalize"], [65, 4, 1, "", "get_current"], [65, 4, 1, "", "get_data"], [65, 4, 1, "", "get_power"], [65, 4, 1, "", "get_voltage"]], "neclib.devices.ad_converter.simulator": [[66, 1, 1, "", "ADConverterSimulator"]], "neclib.devices.ad_converter.simulator.ADConverterSimulator": [[66, 2, 1, "", "Identifier"], [66, 2, 1, "", "Manufacturer"], [66, 2, 1, "", "Model"], [66, 4, 1, "", "finalize"], [66, 4, 1, "", "get_current"], [66, 4, 1, "", "get_voltage"], [66, 2, 1, "", "is_simulator"]], "neclib.devices.attenuator": [[68, 0, 0, "-", "a11713b"], [69, 0, 0, "-", "a11713c"], [70, 0, 0, "-", "attenuator_base"], [71, 0, 0, "-", "cpz340516"], [72, 0, 0, "-", "rhio10"], [73, 0, 0, "-", "simulator"]], "neclib.devices.attenuator.a11713b": [[68, 1, 1, "", "A11713B"]], "neclib.devices.attenuator.a11713b.A11713B": [[68, 2, 1, "", "Identifier"], [68, 2, 1, "", "Manufacturer"], [68, 2, 1, "", "Model"], [68, 4, 1, "", "finalize"], [68, 4, 1, "", "get_loss"], [68, 4, 1, "", "model_check"], [68, 4, 1, "", "set_loss"]], "neclib.devices.attenuator.a11713c": [[69, 1, 1, "", "A11713C"]], "neclib.devices.attenuator.a11713c.A11713C": [[69, 2, 1, "", "Identifier"], [69, 2, 1, "", "Manufacturer"], [69, 2, 1, "", "Model"], [69, 4, 1, "", "finalize"], [69, 4, 1, "", "get_loss"], [69, 4, 1, "", "model_check"], [69, 4, 1, "", "set_loss"]], "neclib.devices.attenuator.attenuator_base": [[70, 1, 1, "", "CurrentAttenuator"], [70, 1, 1, "", "NetworkAttenuator"]], "neclib.devices.attenuator.attenuator_base.CurrentAttenuator": [[70, 4, 1, "", "apply_current"], [70, 4, 1, "", "finalize"], [70, 4, 1, "", "get_outputrange"], [70, 4, 1, "", "set_current"], [70, 4, 1, "", "set_outputrange"]], "neclib.devices.attenuator.attenuator_base.NetworkAttenuator": [[70, 4, 1, "", "get_loss"], [70, 4, 1, "", "set_loss"]], "neclib.devices.attenuator.cpz340516": [[71, 1, 1, "", "CPZ340516"]], "neclib.devices.attenuator.cpz340516.CPZ340516": [[71, 2, 1, "", "Identifier"], [71, 2, 1, "", "Manufacturer"], [71, 2, 1, "", "Model"], [71, 4, 1, "", "apply_current"], [71, 4, 1, "", "finalize"], [71, 4, 1, "", "get_outputrange"], [71, 4, 1, "", "set_current"], [71, 4, 1, "", "set_outputrange"]], "neclib.devices.attenuator.rhio10": [[72, 1, 1, "", "RHIO10"]], "neclib.devices.attenuator.rhio10.RHIO10": [[72, 2, 1, "", "Identifier"], [72, 2, 1, "", "Manufacturer"], [72, 2, 1, "", "Model"], [72, 4, 1, "", "finalize"], [72, 4, 1, "", "get_loss"], [72, 4, 1, "", "set_loss"]], "neclib.devices.attenuator.simulator": [[73, 1, 1, "", "CurrentAttenuatorSimulator"], [73, 1, 1, "", "NetworkAttenuatorSimulator"]], "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator": [[73, 2, 1, "", "Identifier"], [73, 2, 1, "", "Manufacturer"], [73, 2, 1, "", "Model"], [73, 4, 1, "", "finalize"], [73, 4, 1, "", "get_outputrange"], [73, 2, 1, "", "is_simulator"], [73, 4, 1, "", "output_current"], [73, 4, 1, "", "set_outputrange"]], "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator": [[73, 2, 1, "", "Identifier"], [73, 2, 1, "", "Manufacturer"], [73, 2, 1, "", "Model"], [73, 4, 1, "", "finalize"], [73, 4, 1, "", "get_loss"], [73, 2, 1, "", "is_simulator"], [73, 4, 1, "", "set_loss"]], "neclib.devices.ccd_controller": [[75, 0, 0, "-", "ccd_controller_base"], [76, 0, 0, "-", "m100"], [77, 0, 0, "-", "simulator"]], "neclib.devices.ccd_controller.ccd_controller_base": [[75, 1, 1, "", "CCDController"]], "neclib.devices.ccd_controller.ccd_controller_base.CCDController": [[75, 4, 1, "", "capture"], [75, 4, 1, "", "finalize"]], "neclib.devices.ccd_controller.m100": [[76, 1, 1, "", "M100"]], "neclib.devices.ccd_controller.m100.M100": [[76, 2, 1, "", "Identifier"], [76, 2, 1, "", "Manufacturer"], [76, 2, 1, "", "Model"], [76, 4, 1, "", "capture"], [76, 4, 1, "", "finalize"]], "neclib.devices.ccd_controller.simulator": [[77, 1, 1, "", "CCDControllerSimulator"]], "neclib.devices.ccd_controller.simulator.CCDControllerSimulator": [[77, 2, 1, "", "Identifier"], [77, 2, 1, "", "Manufacturer"], [77, 2, 1, "", "Model"], [77, 4, 1, "", "capture"], [77, 4, 1, "", "finalize"], [77, 2, 1, "", "is_simulator"]], "neclib.devices.da_converter": [[79, 0, 0, "-", "cpz340816"], [80, 0, 0, "-", "da_converter_base"], [81, 0, 0, "-", "simulator"]], "neclib.devices.da_converter.cpz340816": [[79, 1, 1, "", "CPZ340816"]], "neclib.devices.da_converter.cpz340816.CPZ340816": [[79, 2, 1, "", "Identifier"], [79, 2, 1, "", "Manufacturer"], [79, 2, 1, "", "Model"], [79, 4, 1, "", "apply_voltage"], [79, 3, 1, "", "converter"], [79, 4, 1, "", "finalize"], [79, 4, 1, "", "set_voltage"]], "neclib.devices.da_converter.da_converter_base": [[80, 1, 1, "", "DAConverter"]], "neclib.devices.da_converter.da_converter_base.DAConverter": [[80, 2, 1, "", "Manufacturer"], [80, 2, 1, "", "Model"], [80, 4, 1, "", "apply_voltage"], [80, 4, 1, "", "finalize"], [80, 4, 1, "", "set_voltage"]], "neclib.devices.da_converter.simulator": [[81, 1, 1, "", "DAConverterSimulator"]], "neclib.devices.da_converter.simulator.DAConverterSimulator": [[81, 2, 1, "", "Identifier"], [81, 2, 1, "", "Manufacturer"], [81, 2, 1, "", "Model"], [81, 4, 1, "", "apply_voltage"], [81, 4, 1, "", "finalize"], [81, 2, 1, "", "is_simulator"], [81, 4, 1, "", "set_voltage"]], "neclib.devices.device_base": [[82, 1, 1, "", "DeviceBase"], [82, 1, 1, "", "Devices"], [82, 5, 1, "", "get_device_configuration"]], "neclib.devices.device_base.DeviceBase": [[82, 2, 1, "", "Config"], [82, 2, 1, "", "Identifier"], [82, 2, 1, "", "Manufacturer"], [82, 2, 1, "", "Model"], [82, 4, 1, "", "bind"], [82, 4, 1, "", "finalize"], [82, 4, 1, "", "get_simulator_class"], [82, 2, 1, "", "is_simulator"]], "neclib.devices.encoder": [[84, 0, 0, "-", "cpz6204"], [85, 0, 0, "-", "encoder_base"], [86, 0, 0, "-", "nd287"], [87, 0, 0, "-", "simulator"]], "neclib.devices.encoder.cpz6204": [[84, 1, 1, "", "CPZ6204"]], "neclib.devices.encoder.cpz6204.CPZ6204": [[84, 2, 1, "", "Identifier"], [84, 2, 1, "", "Manufacturer"], [84, 2, 1, "", "Model"], [84, 4, 1, "", "board_setting"], [84, 4, 1, "", "dome_set_counter"], [84, 4, 1, "", "finalize"], [84, 4, 1, "", "get_dome_reading"], [84, 4, 1, "", "get_reading"]], "neclib.devices.encoder.encoder_base": [[85, 1, 1, "", "Encoder"]], "neclib.devices.encoder.encoder_base.Encoder": [[85, 2, 1, "", "Manufacturer"], [85, 2, 1, "", "Model"], [85, 4, 1, "", "finalize"], [85, 4, 1, "", "get_reading"]], "neclib.devices.encoder.nd287": [[86, 1, 1, "", "ND287"]], "neclib.devices.encoder.nd287.ND287": [[86, 2, 1, "", "Identifier"], [86, 2, 1, "", "Manufacturer"], [86, 2, 1, "", "Model"], [86, 4, 1, "", "finalize"], [86, 4, 1, "", "get_reading"]], "neclib.devices.encoder.simulator": [[87, 1, 1, "", "EncoderSimulator"]], "neclib.devices.encoder.simulator.EncoderSimulator": [[87, 2, 1, "", "Identifier"], [87, 2, 1, "", "Manufacturer"], [87, 2, 1, "", "Model"], [87, 4, 1, "", "finalize"], [87, 4, 1, "", "get_reading"], [87, 2, 1, "", "is_simulator"]], "neclib.devices.motor": [[89, 0, 0, "-", "cpz2724"], [90, 0, 0, "-", "cpz7204"], [91, 0, 0, "-", "cpz7415v"], [92, 0, 0, "-", "motor_base"], [93, 0, 0, "-", "simulator"]], "neclib.devices.motor.cpz2724": [[89, 1, 1, "", "CPZ2724"]], "neclib.devices.motor.cpz2724.CPZ2724": [[89, 2, 1, "", "Identifier"], [89, 2, 1, "", "Manufacturer"], [89, 2, 1, "", "Model"], [89, 4, 1, "", "MoveIndexFF"], [89, 4, 1, "", "Strobe"], [89, 4, 1, "", "antenna_move"], [89, 4, 1, "", "antenna_status"], [89, 4, 1, "", "antenna_stop"], [89, 4, 1, "", "contactor_move"], [89, 4, 1, "", "dome_fan"], [89, 4, 1, "", "dome_limit_check"], [89, 4, 1, "", "dome_move"], [89, 4, 1, "", "dome_oc"], [89, 4, 1, "", "dome_pose"], [89, 4, 1, "", "dome_status"], [89, 4, 1, "", "dome_stop"], [89, 4, 1, "", "drive_contactor_status"], [89, 4, 1, "", "drive_move"], [89, 4, 1, "", "finalize"], [89, 4, 1, "", "get_speed"], [89, 4, 1, "", "get_step"], [89, 4, 1, "", "m2_move"], [89, 4, 1, "", "m2_status"], [89, 4, 1, "", "memb_oc"], [89, 4, 1, "", "memb_pose"], [89, 4, 1, "", "memb_status"], [89, 4, 1, "", "set_speed"], [89, 4, 1, "", "set_step"], [89, 4, 1, "", "um_to_puls"]], "neclib.devices.motor.cpz7204": [[90, 1, 1, "", "CPZ7204"]], "neclib.devices.motor.cpz7204.CPZ7204": [[90, 2, 1, "", "Identifier"], [90, 2, 1, "", "Manufacturer"], [90, 2, 1, "", "Model"], [90, 4, 1, "", "finalize"], [90, 4, 1, "", "get_speed"], [90, 4, 1, "", "get_step"], [90, 4, 1, "", "move"], [90, 4, 1, "", "set_speed"], [90, 4, 1, "", "set_step"], [90, 4, 1, "", "stop"]], "neclib.devices.motor.cpz7415v": [[91, 1, 1, "", "CPZ7415V"]], "neclib.devices.motor.cpz7415v.CPZ7415V": [[91, 2, 1, "", "Identifier"], [91, 2, 1, "", "Manufacturer"], [91, 2, 1, "", "Model"], [91, 3, 1, "", "current_motion"], [91, 4, 1, "", "finalize"], [91, 4, 1, "", "get_speed"], [91, 4, 1, "", "get_step"], [91, 4, 1, "", "set_speed"], [91, 4, 1, "", "set_step"]], "neclib.devices.motor.motor_base": [[92, 1, 1, "", "Motor"]], "neclib.devices.motor.motor_base.Motor": [[92, 2, 1, "", "Manufacturer"], [92, 2, 1, "", "Model"], [92, 4, 1, "", "finalize"], [92, 4, 1, "", "get_speed"], [92, 4, 1, "", "get_step"], [92, 4, 1, "", "set_speed"], [92, 4, 1, "", "set_step"]], "neclib.devices.motor.simulator": [[93, 1, 1, "", "MotorSimulator"]], "neclib.devices.motor.simulator.MotorSimulator": [[93, 2, 1, "", "Identifier"], [93, 2, 1, "", "Manufacturer"], [93, 2, 1, "", "Model"], [93, 4, 1, "", "finalize"], [93, 4, 1, "", "get_speed"], [93, 4, 1, "", "get_step"], [93, 2, 1, "", "is_simulator"], [93, 4, 1, "", "set_speed"], [93, 4, 1, "", "set_step"]], "neclib.devices.power_meter": [[95, 0, 0, "-", "ma24126a"], [96, 0, 0, "-", "ml2437a"], [97, 0, 0, "-", "power_meter_base"], [98, 0, 0, "-", "simulator"]], "neclib.devices.power_meter.ma24126a": [[95, 1, 1, "", "MA24126A"]], "neclib.devices.power_meter.ma24126a.MA24126A": [[95, 2, 1, "", "Identifier"], [95, 2, 1, "", "Manufacturer"], [95, 2, 1, "", "Model"], [95, 4, 1, "", "finalize"], [95, 4, 1, "", "get_power"], [95, 4, 1, "", "zero_set"]], "neclib.devices.power_meter.ml2437a": [[96, 1, 1, "", "ML2437A"]], "neclib.devices.power_meter.ml2437a.ML2437A": [[96, 2, 1, "", "Identifier"], [96, 2, 1, "", "Manufacturer"], [96, 2, 1, "", "Model"], [96, 4, 1, "", "finalize"], [96, 4, 1, "", "get_power"]], "neclib.devices.power_meter.power_meter_base": [[97, 1, 1, "", "PowerMeter"]], "neclib.devices.power_meter.power_meter_base.PowerMeter": [[97, 4, 1, "", "get_power"]], "neclib.devices.power_meter.simulator": [[98, 1, 1, "", "PowerMeterSimulator"]], "neclib.devices.power_meter.simulator.PowerMeterSimulator": [[98, 2, 1, "", "Identifier"], [98, 2, 1, "", "Manufacturer"], [98, 2, 1, "", "Model"], [98, 4, 1, "", "finalize"], [98, 4, 1, "", "get_power"], [98, 2, 1, "", "is_simulator"]], "neclib.devices.selector": [[99, 5, 1, "", "get_device_configuration"], [99, 5, 1, "", "get_device_list"], [99, 5, 1, "", "list_implementations"], [99, 5, 1, "", "parse_device_configuration"]], "neclib.devices.signal_generator": [[101, 0, 0, "-", "e8257d"], [102, 0, 0, "-", "fsw0010"], [103, 0, 0, "-", "fsw0020"], [104, 0, 0, "-", "mg3692c"], [105, 0, 0, "-", "signal_generator_base"], [106, 0, 0, "-", "simulator"]], "neclib.devices.signal_generator.e8257d": [[101, 1, 1, "", "E8257D"]], "neclib.devices.signal_generator.e8257d.E8257D": [[101, 2, 1, "", "Identifier"], [101, 2, 1, "", "Manufacturer"], [101, 2, 1, "", "Model"], [101, 4, 1, "", "finalize"], [101, 4, 1, "", "get_freq"], [101, 4, 1, "", "get_output_status"], [101, 4, 1, "", "get_power"], [101, 4, 1, "", "set_freq"], [101, 4, 1, "", "set_power"], [101, 4, 1, "", "start_output"], [101, 4, 1, "", "stop_output"]], "neclib.devices.signal_generator.fsw0010": [[102, 1, 1, "", "FSW0010"]], "neclib.devices.signal_generator.fsw0010.FSW0010": [[102, 2, 1, "", "Identifier"], [102, 2, 1, "", "Manufacturer"], [102, 2, 1, "", "Model"], [102, 4, 1, "", "finalize"], [102, 4, 1, "", "get_freq"], [102, 4, 1, "", "get_output_status"], [102, 4, 1, "", "get_power"], [102, 4, 1, "", "set_freq"], [102, 4, 1, "", "set_power"], [102, 4, 1, "", "start_output"], [102, 4, 1, "", "stop_output"]], "neclib.devices.signal_generator.fsw0020": [[103, 1, 1, "", "FSW0020"]], "neclib.devices.signal_generator.fsw0020.FSW0020": [[103, 2, 1, "", "Identifier"], [103, 2, 1, "", "Manufacturer"], [103, 2, 1, "", "Model"], [103, 4, 1, "", "finalize"], [103, 4, 1, "", "get_freq"], [103, 4, 1, "", "get_output_status"], [103, 4, 1, "", "get_power"], [103, 4, 1, "", "set_freq"], [103, 4, 1, "", "set_power"], [103, 4, 1, "", "start_output"], [103, 4, 1, "", "stop_output"]], "neclib.devices.signal_generator.mg3692c": [[104, 1, 1, "", "MG3692C"]], "neclib.devices.signal_generator.mg3692c.MG3692C": [[104, 2, 1, "", "Identifier"], [104, 2, 1, "", "Manufacturer"], [104, 2, 1, "", "Model"], [104, 4, 1, "", "finalize"], [104, 4, 1, "", "get_freq"], [104, 4, 1, "", "get_output_status"], [104, 4, 1, "", "get_power"], [104, 4, 1, "", "set_freq"], [104, 4, 1, "", "set_power"], [104, 4, 1, "", "start_output"], [104, 4, 1, "", "stop_output"]], "neclib.devices.signal_generator.signal_generator_base": [[105, 1, 1, "", "SignalGenerator"]], "neclib.devices.signal_generator.signal_generator_base.SignalGenerator": [[105, 2, 1, "", "Manufacturer"], [105, 2, 1, "", "Model"], [105, 4, 1, "", "finalize"], [105, 4, 1, "", "get_freq"], [105, 4, 1, "", "get_output_status"], [105, 4, 1, "", "get_power"], [105, 4, 1, "", "set_freq"], [105, 4, 1, "", "set_power"], [105, 4, 1, "", "start_output"], [105, 4, 1, "", "stop_output"]], "neclib.devices.signal_generator.simulator": [[106, 1, 1, "", "SignalGeneratorSimulator"]], "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator": [[106, 2, 1, "", "Identifier"], [106, 2, 1, "", "Manufacturer"], [106, 2, 1, "", "Model"], [106, 4, 1, "", "finalize"], [106, 4, 1, "", "get_freq"], [106, 4, 1, "", "get_output_status"], [106, 4, 1, "", "get_power"], [106, 2, 1, "", "is_simulator"], [106, 4, 1, "", "set_freq"], [106, 4, 1, "", "set_power"], [106, 4, 1, "", "start_output"], [106, 4, 1, "", "stop_output"]], "neclib.devices.spectrometer": [[108, 0, 0, "-", "ac240"], [109, 0, 0, "-", "simulator"], [110, 0, 0, "-", "spectrometer_base"], [111, 0, 0, "-", "xffts"]], "neclib.devices.spectrometer.ac240": [[108, 1, 1, "", "AC240"]], "neclib.devices.spectrometer.ac240.AC240": [[108, 2, 1, "", "Identifier"], [108, 2, 1, "", "Manufacturer"], [108, 2, 1, "", "Model"], [108, 4, 1, "", "change_spec_ch"], [108, 4, 1, "", "finalize"], [108, 4, 1, "", "get_spectra"], [108, 4, 1, "", "msg_unpack"], [108, 4, 1, "", "receive"], [108, 4, 1, "", "start"], [108, 4, 1, "", "stop"]], "neclib.devices.spectrometer.simulator": [[109, 1, 1, "", "SpectrometerSimulator"]], "neclib.devices.spectrometer.simulator.SpectrometerSimulator": [[109, 2, 1, "", "Identifier"], [109, 2, 1, "", "Manufacturer"], [109, 2, 1, "", "Model"], [109, 4, 1, "", "finalize"], [109, 4, 1, "", "get_spectra"], [109, 2, 1, "", "is_simulator"]], "neclib.devices.spectrometer.spectrometer_base": [[110, 1, 1, "", "Spectrometer"]], "neclib.devices.spectrometer.spectrometer_base.Spectrometer": [[110, 4, 1, "", "get_spectra"]], "neclib.devices.spectrometer.xffts": [[111, 1, 1, "", "XFFTS"]], "neclib.devices.spectrometer.xffts.XFFTS": [[111, 2, 1, "", "Identifier"], [111, 2, 1, "", "Manufacturer"], [111, 2, 1, "", "Model"], [111, 4, 1, "", "change_spec_ch"], [111, 4, 1, "", "finalize"], [111, 4, 1, "", "get_spectra"], [111, 4, 1, "", "initialize"], [111, 4, 1, "", "start"], [111, 4, 1, "", "stop"]], "neclib.devices.thermometer": [[113, 0, 0, "-", "model_218"], [114, 0, 0, "-", "simulator"], [115, 0, 0, "-", "thermometer_base"]], "neclib.devices.thermometer.model_218": [[113, 1, 1, "", "Model218"]], "neclib.devices.thermometer.model_218.Model218": [[113, 2, 1, "", "Identifier"], [113, 2, 1, "", "Manufacturer"], [113, 2, 1, "", "Model"], [113, 4, 1, "", "finalize"], [113, 4, 1, "", "get_temp"]], "neclib.devices.thermometer.simulator": [[114, 1, 1, "", "ThermometerSimulator"]], "neclib.devices.thermometer.simulator.ThermometerSimulator": [[114, 2, 1, "", "Identifier"], [114, 2, 1, "", "Manufacturer"], [114, 2, 1, "", "Model"], [114, 4, 1, "", "finalize"], [114, 4, 1, "", "get_temp"], [114, 2, 1, "", "is_simulator"]], "neclib.devices.thermometer.thermometer_base": [[115, 1, 1, "", "Thermometer"]], "neclib.devices.thermometer.thermometer_base.Thermometer": [[115, 2, 1, "", "Manufacturer"], [115, 2, 1, "", "Model"], [115, 4, 1, "", "finalize"], [115, 4, 1, "", "get_temp"]], "neclib.devices.vacuum_gauge": [[117, 0, 0, "-", "simulator"], [118, 0, 0, "-", "tpg261"], [119, 0, 0, "-", "vacuum_gauge_base"]], "neclib.devices.vacuum_gauge.simulator": [[117, 1, 1, "", "VacuumGaugeSimulator"]], "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator": [[117, 2, 1, "", "Identifier"], [117, 2, 1, "", "Manufacturer"], [117, 2, 1, "", "Model"], [117, 4, 1, "", "finalize"], [117, 4, 1, "", "get_pressure"], [117, 2, 1, "", "is_simulator"]], "neclib.devices.vacuum_gauge.tpg261": [[118, 1, 1, "", "TPG261"]], "neclib.devices.vacuum_gauge.tpg261.TPG261": [[118, 2, 1, "", "Identifier"], [118, 2, 1, "", "Manufacturer"], [118, 2, 1, "", "Model"], [118, 4, 1, "", "finalize"], [118, 4, 1, "", "get_pressure"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base": [[119, 1, 1, "", "VacuumGauge"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge": [[119, 4, 1, "", "get_pressure"]], "neclib.devices.weather_station": [[121, 0, 0, "-", "simulator"], [122, 0, 0, "-", "tr73u"], [123, 0, 0, "-", "weather_station_base"]], "neclib.devices.weather_station.simulator": [[121, 1, 1, "", "WeatherStationSimulator"]], "neclib.devices.weather_station.simulator.WeatherStationSimulator": [[121, 2, 1, "", "Identifier"], [121, 2, 1, "", "Manufacturer"], [121, 2, 1, "", "Model"], [121, 4, 1, "", "finalize"], [121, 4, 1, "", "get_humidity"], [121, 4, 1, "", "get_pressure"], [121, 4, 1, "", "get_temperature"], [121, 2, 1, "", "is_simulator"]], "neclib.devices.weather_station.tr73u": [[122, 1, 1, "", "TR73U"]], "neclib.devices.weather_station.tr73u.TR73U": [[122, 2, 1, "", "Identifier"], [122, 2, 1, "", "Manufacturer"], [122, 2, 1, "", "Model"], [122, 4, 1, "", "finalize"], [122, 4, 1, "", "get_humidity"], [122, 4, 1, "", "get_pressure"], [122, 4, 1, "", "get_temperature"]], "neclib.devices.weather_station.weather_station_base": [[123, 1, 1, "", "WeatherStation"]], "neclib.devices.weather_station.weather_station_base.WeatherStation": [[123, 2, 1, "", "Manufacturer"], [123, 2, 1, "", "Model"], [123, 4, 1, "", "finalize"], [123, 4, 1, "", "get_humidity"], [123, 4, 1, "", "get_pressure"], [123, 4, 1, "", "get_temperature"]], "neclib.recorders": [[125, 0, 0, "-", "console_log_writer"], [126, 0, 0, "-", "file_writer"], [127, 0, 0, "-", "necstdb_writer"], [128, 0, 0, "-", "recorder"], [129, 0, 0, "-", "writer_base"]], "neclib.recorders.console_log_writer": [[125, 1, 1, "", "ConsoleLogWriter"]], "neclib.recorders.console_log_writer.ConsoleLogWriter": [[125, 4, 1, "", "append"], [125, 4, 1, "", "start_recording"], [125, 4, 1, "", "stop_recording"]], "neclib.recorders.file_writer": [[126, 1, 1, "", "FileWriter"]], "neclib.recorders.file_writer.FileWriter": [[126, 4, 1, "", "append"], [126, 4, 1, "", "start_recording"], [126, 4, 1, "", "stop_recording"]], "neclib.recorders.necstdb_writer": [[127, 1, 1, "", "NECSTDBWriter"], [127, 5, 1, "", "parse_str_size"], [127, 5, 1, "", "str_to_bytes"]], "neclib.recorders.necstdb_writer.NECSTDBWriter": [[127, 2, 1, "", "DTypeConverters"], [127, 2, 1, "", "LivelinessDuration"], [127, 2, 1, "", "WarningQueueSize"], [127, 4, 1, "", "add_table"], [127, 4, 1, "", "append"], [127, 4, 1, "", "remove_table"], [127, 4, 1, "", "start_recording"], [127, 4, 1, "", "stop_recording"]], "neclib.recorders.recorder": [[128, 1, 1, "", "Recorder"]], "neclib.recorders.recorder.Recorder": [[128, 4, 1, "", "add_writer"], [128, 4, 1, "", "append"], [128, 4, 1, "", "drop_writer"], [128, 3, 1, "", "is_recording"], [128, 4, 1, "", "start_recording"], [128, 4, 1, "", "stop_recording"], [128, 3, 1, "", "writers"]], "neclib.recorders.writer_base": [[129, 1, 1, "", "Writer"]], "neclib.recorders.writer_base.Writer": [[129, 4, 1, "", "append"], [129, 4, 1, "", "start_recording"], [129, 4, 1, "", "stop_recording"]], "neclib.safety": [[131, 0, 0, "-", "decelerate"], [132, 0, 0, "-", "status"]], "neclib.safety.decelerate": [[131, 1, 1, "", "Decelerate"]], "neclib.safety.status": [[132, 1, 1, "", "Status"]], "neclib.simulators": [[134, 0, 0, "-", "antenna"], [135, 0, 0, "-", "dome"]], "neclib.simulators.antenna": [[134, 1, 1, "", "AntennaEncoderEmulator"]], "neclib.simulators.antenna.AntennaEncoderEmulator": [[134, 2, 1, "", "ANGLE_UNIT"], [134, 3, 1, "", "abs_acceleration"], [134, 4, 1, "", "command"], [134, 3, 1, "", "dt"], [134, 4, 1, "", "read"]], "neclib.simulators.dome": [[135, 1, 1, "", "DomeEncoderEmulator"]], "neclib.simulators.dome.DomeEncoderEmulator": [[135, 2, 1, "", "ANGLE_UNIT"], [135, 3, 1, "", "abs_acceleration"], [135, 4, 1, "", "command"], [135, 3, 1, "", "dt"], [135, 4, 1, "", "read"]], "neclib.utils": [[137, 0, 0, "-", "array_utils"], [138, 0, 0, "-", "data_utils"], [139, 0, 0, "-", "math_utils"], [140, 0, 0, "-", "quantity_utils"], [141, 0, 0, "-", "simulator_utils"]], "neclib.utils.array_utils": [[137, 5, 1, "", "linear_sequence"]], "neclib.utils.data_utils": [[138, 1, 1, "", "AliasedDict"], [138, 1, 1, "", "AzElData"], [138, 1, 1, "", "ParameterList"], [138, 1, 1, "", "ParameterMapping"], [138, 5, 1, "", "toCamelCase"], [138, 5, 1, "", "to_snake_case"]], "neclib.utils.data_utils.AliasedDict": [[138, 4, 1, "", "alias"]], "neclib.utils.data_utils.AzElData": [[138, 2, 1, "", "az"], [138, 2, 1, "", "el"]], "neclib.utils.data_utils.ParameterList": [[138, 4, 1, "", "copy"], [138, 4, 1, "", "map"], [138, 4, 1, "", "new"], [138, 4, 1, "", "push"]], "neclib.utils.data_utils.ParameterMapping": [[138, 4, 1, "", "copy"]], "neclib.utils.math_utils": [[139, 1, 1, "", "ConditionChecker"], [139, 5, 1, "", "counter"], [139, 5, 1, "", "discretize"]], "neclib.utils.math_utils.ConditionChecker": [[139, 4, 1, "", "check"]], "neclib.utils.quantity_utils": [[140, 5, 1, "", "angle_conversion_factor"], [140, 5, 1, "", "dAz2dx"], [140, 5, 1, "", "dx2dAz"], [140, 5, 1, "", "force_data_type"], [140, 5, 1, "", "get_quantity"], [140, 5, 1, "", "parse_quantity"], [140, 5, 1, "", "partially_convert_unit"], [140, 5, 1, "", "quantity2builtin"]], "neclib.utils.simulator_utils": [[141, 5, 1, "", "skip_on_simulator"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"neclib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147], "alias": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 32, 34, 35, 37, 38, 39, 43, 44, 47, 48, 50, 51, 52, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136], "subpackag": [0, 3, 22, 62], "control": [1, 2], "submodul": [1, 3, 6, 14, 18, 22, 24, 32, 35, 39, 43, 48, 52, 58, 62, 63, 67, 74, 78, 83, 88, 94, 100, 107, 112, 116, 120, 124, 130, 133, 136], "antenna_pid": 2, "note": [2, 7, 14, 21, 26, 34, 57, 65, 68, 69, 71, 72, 76, 79, 84, 86, 89, 90, 91, 95, 96, 101, 102, 103, 104, 111, 113, 118, 122, 126, 129, 133, 134, 135, 140], "coordin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "convert": 4, "frame": 5, "observ": [6, 7, 8, 9, 10, 11], "observation_spec_bas": 7, "optical_point": 8, "otf": 9, "radio_point": 10, "optim": 12, "path_find": 13, "path": [14, 15, 16, 17], "linear": 15, "path_bas": 16, "track": 17, "pointing_error": [18, 19, 20, 21], "nanten2": 19, "omu1p85m": 20, "core": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "configur": 23, "data_typ": [24, 25, 26, 27, 28, 29], "ordin": 25, "paramet": [26, 61, 142, 143], "rich_paramet": 27, "status_manag": 28, "value_rang": 29, "environ": 30, "except": 31, "file": [32, 33, 34, 143], "gener": 33, "toml": 34, "format": [35, 36, 37, 38], "dict_to_html": 36, "observation_to_html": 37, "status_to_html": 38, "inform": [39, 40, 41, 42], "console_logg": 40, "deprec": 41, "disabl": 42, "math": [43, 44, 45, 46, 47], "clip_impl": 44, "frange_impl": 45, "function": 46, "random": 47, "normal": [48, 49, 50, 51], "arrai": 49, "astropi": 50, "function_default": 51, "secur": [52, 53, 54, 55], "busy_impl": 53, "load_check": 54, "sanitize_impl": 55, "type": 56, "unit": 57, "data": [58, 59, 60, 61], "extrapol": 59, "interpol": 60, "resiz": 61, "devic": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 144], "ad_convert": [63, 64, 65, 66], "ad_converter_bas": 64, "cpz3177": 65, "simul": [66, 73, 77, 81, 87, 93, 98, 106, 109, 114, 117, 121, 133, 134, 135], "attenu": [67, 68, 69, 70, 71, 72, 73], "a11713b": 68, "a11713c": 69, "attenuator_bas": 70, "cpz340516": 71, "rhio10": 72, "ccd_control": [74, 75, 76, 77], "ccd_controller_bas": 75, "m100": 76, "da_convert": [78, 79, 80, 81], "cpz340816": 79, "da_converter_bas": 80, "device_bas": 82, "encod": [83, 84, 85, 86, 87], "cpz6204": 84, "encoder_bas": 85, "nd287": 86, "motor": [88, 89, 90, 91, 92, 93], "cpz2724": 89, "cpz7204": 90, "cpz7415v": 91, "motor_bas": 92, "power_met": [94, 95, 96, 97, 98], "ma24126a": 95, "ml2437a": 96, "power_meter_bas": 97, "selector": 99, "signal_gener": [100, 101, 102, 103, 104, 105, 106], "e8257d": 101, "fsw0010": 102, "fsw0020": 103, "mg3692c": 104, "signal_generator_bas": 105, "spectromet": [107, 108, 109, 110, 111], "ac240": 108, "spectrometer_bas": 110, "xfft": 111, "thermomet": [112, 113, 114, 115], "model_218": 113, "thermometer_bas": 115, "vacuum_gaug": [116, 117, 118, 119], "tpg261": 118, "vacuum_gauge_bas": 119, "weather_st": [120, 121, 122, 123], "tr73u": 122, "weather_station_bas": 123, "record": [124, 125, 126, 127, 128, 129], "console_log_writ": 125, "file_writ": 126, "necstdb_writ": 127, "writer_bas": 129, "safeti": [130, 131, 132], "deceler": 131, "statu": 132, "antenna": 134, "dome": 135, "util": [136, 137, 138, 139, 140, 141], "array_util": 137, "data_util": 138, "math_util": 139, "quantity_util": 140, "simulator_util": 141, "necst": 142, "config": 143, "The": 143, "locat": 143, "how": [143, 144], "defin": [143, 145], "attach": 143, "parser": 143, "us": 143, "specifi": 144, "name": [144, 145], "model": 144, "add": 144, "i": 144, "o": 144, "class": 144, "definit": 144, "abstract": 144, "specif": 144, "implement": 144, "dunder": 145, "object": 145, "ani": 145, "__": 145, "method": 145, "user": 145, "__init__": 145, "exampl": 145, "__init_subclass__": 145, "__new__": 145, "__set__": 145, "__get__": 145, "__set_name__": 145, "__del__": 145, "__getattr__": 145, "__getitem__": 145, "__call__": 145, "built": 145, "__subclasses__": 145, "variabl": 145, "__class__": 145, "__name__": 145, "tutori": 146, "develop": 146, "featur": 147, "instal": 147, "usag": 147}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"neclib": [[0, "module-neclib"], [147, "neclib"]], "Aliases": [[0, "aliases"], [1, "aliases"], [2, "aliases"], [3, "aliases"], [4, "aliases"], [6, "aliases"], [7, "aliases"], [8, "aliases"], [9, "aliases"], [10, "aliases"], [12, "aliases"], [13, "aliases"], [14, "aliases"], [15, "aliases"], [16, "aliases"], [17, "aliases"], [18, "aliases"], [19, "aliases"], [20, "aliases"], [21, "aliases"], [22, "aliases"], [23, "aliases"], [24, "aliases"], [26, "aliases"], [27, "aliases"], [28, "aliases"], [29, "aliases"], [32, "aliases"], [34, "aliases"], [35, "aliases"], [37, "aliases"], [38, "aliases"], [39, "aliases"], [43, "aliases"], [44, "aliases"], [47, "aliases"], [48, "aliases"], [50, "aliases"], [51, "aliases"], [52, "aliases"], [58, "aliases"], [59, "aliases"], [62, "aliases"], [63, "aliases"], [64, "aliases"], [65, "aliases"], [66, "aliases"], [67, "aliases"], [68, "aliases"], [69, "aliases"], [70, "aliases"], [71, "aliases"], [72, "aliases"], [73, "aliases"], [74, "aliases"], [75, "aliases"], [76, "aliases"], [77, "aliases"], [78, "aliases"], [79, "aliases"], [80, "aliases"], [81, "aliases"], [82, "aliases"], [83, "aliases"], [84, "aliases"], [85, "aliases"], [86, "aliases"], [87, "aliases"], [88, "aliases"], [89, "aliases"], [90, "aliases"], [91, "aliases"], [92, "aliases"], [93, "aliases"], [94, "aliases"], [95, "aliases"], [96, "aliases"], [97, "aliases"], [98, "aliases"], [99, "aliases"], [100, "aliases"], [101, "aliases"], [102, "aliases"], [103, "aliases"], [104, "aliases"], [105, "aliases"], [106, "aliases"], [107, "aliases"], [108, "aliases"], [109, "aliases"], [110, "aliases"], [111, "aliases"], [112, "aliases"], [113, "aliases"], [114, "aliases"], [115, "aliases"], [116, "aliases"], [117, "aliases"], [118, "aliases"], [119, "aliases"], [120, "aliases"], [121, "aliases"], [122, "aliases"], [123, "aliases"], [124, "aliases"], [125, "aliases"], [126, "aliases"], [127, "aliases"], [128, "aliases"], [130, "aliases"], [131, "aliases"], [133, "aliases"], [134, "aliases"], [135, "aliases"], [136, "aliases"]], "Subpackages": [[0, "subpackages"], [3, "subpackages"], [22, "subpackages"], [62, "subpackages"]], "neclib.controllers": [[1, "module-neclib.controllers"]], "Submodules": [[1, "submodules"], [3, "submodules"], [6, "submodules"], [14, "submodules"], [18, "submodules"], [22, "submodules"], [24, "submodules"], [32, "submodules"], [35, "submodules"], [39, "submodules"], [43, "submodules"], [48, "submodules"], [52, "submodules"], [58, "submodules"], [62, "submodules"], [63, "submodules"], [67, "submodules"], [74, "submodules"], [78, "submodules"], [83, "submodules"], [88, "submodules"], [94, "submodules"], [100, "submodules"], [107, "submodules"], [112, "submodules"], [116, "submodules"], [120, "submodules"], [124, "submodules"], [130, "submodules"], [133, "submodules"], [136, "submodules"]], "neclib.controllers.antenna_pid": [[2, "module-neclib.controllers.antenna_pid"]], "Notes": [[2, null], [7, null], [14, null], [21, null], [26, null], [34, null], [57, null], [65, null], [68, null], [69, null], [71, null], [72, null], [76, null], [79, null], [84, null], [86, null], [89, null], [90, null], [91, null], [95, null], [96, null], [101, null], [102, null], [103, null], [104, null], [111, null], [113, null], [118, null], [122, null], [126, null], [129, null], [133, null], [134, null], [134, null], [135, null], [135, null], [140, null], [140, null], [140, null]], "neclib.coordinates": [[3, "module-neclib.coordinates"]], "neclib.coordinates.convert": [[4, "module-neclib.coordinates.convert"]], "neclib.coordinates.frame": [[5, "module-neclib.coordinates.frame"]], "neclib.coordinates.observations": [[6, "module-neclib.coordinates.observations"]], "neclib.coordinates.observations.observation_spec_base": [[7, "module-neclib.coordinates.observations.observation_spec_base"]], "neclib.coordinates.observations.optical_pointing": [[8, "module-neclib.coordinates.observations.optical_pointing"]], "neclib.coordinates.observations.otf": [[9, "module-neclib.coordinates.observations.otf"]], "neclib.coordinates.observations.radio_pointing": [[10, "module-neclib.coordinates.observations.radio_pointing"]], "neclib.coordinates.observer": [[11, "module-neclib.coordinates.observer"]], "neclib.coordinates.optimize": [[12, "module-neclib.coordinates.optimize"]], "neclib.coordinates.path_finder": [[13, "module-neclib.coordinates.path_finder"]], "neclib.coordinates.paths": [[14, "module-neclib.coordinates.paths"]], "neclib.coordinates.paths.linear": [[15, "module-neclib.coordinates.paths.linear"]], "neclib.coordinates.paths.path_base": [[16, "module-neclib.coordinates.paths.path_base"]], "neclib.coordinates.paths.track": [[17, "module-neclib.coordinates.paths.track"]], "neclib.coordinates.pointing_error": [[18, "module-neclib.coordinates.pointing_error"]], "neclib.coordinates.pointing_error.nanten2": [[19, "module-neclib.coordinates.pointing_error.nanten2"]], "neclib.coordinates.pointing_error.omu1p85m": [[20, "module-neclib.coordinates.pointing_error.omu1p85m"]], "neclib.coordinates.pointing_error.pointing_error": [[21, "module-neclib.coordinates.pointing_error.pointing_error"]], "neclib.core": [[22, "module-neclib.core"]], "neclib.core.configuration": [[23, "module-neclib.core.configuration"]], "neclib.core.data_type": [[24, "module-neclib.core.data_type"]], "neclib.core.data_type.ordinal": [[25, "module-neclib.core.data_type.ordinal"]], "neclib.core.data_type.parameters": [[26, "module-neclib.core.data_type.parameters"]], "neclib.core.data_type.rich_parameters": [[27, "module-neclib.core.data_type.rich_parameters"]], "neclib.core.data_type.status_manager": [[28, "module-neclib.core.data_type.status_manager"]], "neclib.core.data_type.value_range": [[29, "module-neclib.core.data_type.value_range"]], "neclib.core.environ": [[30, "module-neclib.core.environ"]], "neclib.core.exceptions": [[31, "module-neclib.core.exceptions"]], "neclib.core.files": [[32, "module-neclib.core.files"]], "neclib.core.files.general": [[33, "module-neclib.core.files.general"]], "neclib.core.files.toml": [[34, "module-neclib.core.files.toml"]], "neclib.core.formatting": [[35, "module-neclib.core.formatting"]], "neclib.core.formatting.dict_to_html": [[36, "module-neclib.core.formatting.dict_to_html"]], "neclib.core.formatting.observation_to_html": [[37, "module-neclib.core.formatting.observation_to_html"]], "neclib.core.formatting.status_to_html": [[38, "module-neclib.core.formatting.status_to_html"]], "neclib.core.inform": [[39, "module-neclib.core.inform"]], "neclib.core.inform.console_logger": [[40, "module-neclib.core.inform.console_logger"]], "neclib.core.inform.deprecation": [[41, "module-neclib.core.inform.deprecation"]], "neclib.core.inform.disable": [[42, "module-neclib.core.inform.disable"]], "neclib.core.math": [[43, "module-neclib.core.math"]], "neclib.core.math.clip_impl": [[44, "module-neclib.core.math.clip_impl"]], "neclib.core.math.frange_impl": [[45, "module-neclib.core.math.frange_impl"]], "neclib.core.math.functions": [[46, "module-neclib.core.math.functions"]], "neclib.core.math.random": [[47, "module-neclib.core.math.random"]], "neclib.core.normalization": [[48, "module-neclib.core.normalization"]], "neclib.core.normalization.array": [[49, "module-neclib.core.normalization.array"]], "neclib.core.normalization.astropy": [[50, "module-neclib.core.normalization.astropy"]], "neclib.core.normalization.function_defaults": [[51, "module-neclib.core.normalization.function_defaults"]], "neclib.core.security": [[52, "module-neclib.core.security"]], "neclib.core.security.busy_impl": [[53, "module-neclib.core.security.busy_impl"]], "neclib.core.security.load_check": [[54, "module-neclib.core.security.load_check"]], "neclib.core.security.sanitize_impl": [[55, "module-neclib.core.security.sanitize_impl"]], "neclib.core.types": [[56, "module-neclib.core.types"]], "neclib.core.units": [[57, "module-neclib.core.units"]], "neclib.data": [[58, "module-neclib.data"]], "neclib.data.extrapolate": [[59, "module-neclib.data.extrapolate"]], "neclib.data.interpolate": [[60, "module-neclib.data.interpolate"]], "neclib.data.resize": [[61, "module-neclib.data.resize"]], "Parameter": [[61, "parameter"]], "neclib.devices": [[62, "module-neclib.devices"], [144, "neclib-devices"]], "neclib.devices.ad_converter": [[63, "module-neclib.devices.ad_converter"]], "neclib.devices.ad_converter.ad_converter_base": [[64, "module-neclib.devices.ad_converter.ad_converter_base"]], "neclib.devices.ad_converter.cpz3177": [[65, "module-neclib.devices.ad_converter.cpz3177"]], "neclib.devices.ad_converter.simulator": [[66, "module-neclib.devices.ad_converter.simulator"]], "neclib.devices.attenuator": [[67, "module-neclib.devices.attenuator"]], "neclib.devices.attenuator.a11713b": [[68, "module-neclib.devices.attenuator.a11713b"]], "neclib.devices.attenuator.a11713c": [[69, "module-neclib.devices.attenuator.a11713c"]], "neclib.devices.attenuator.attenuator_base": [[70, "module-neclib.devices.attenuator.attenuator_base"]], "neclib.devices.attenuator.cpz340516": [[71, "module-neclib.devices.attenuator.cpz340516"]], "neclib.devices.attenuator.rhio10": [[72, "module-neclib.devices.attenuator.rhio10"]], "neclib.devices.attenuator.simulator": [[73, "module-neclib.devices.attenuator.simulator"]], "neclib.devices.ccd_controller": [[74, "module-neclib.devices.ccd_controller"]], "neclib.devices.ccd_controller.ccd_controller_base": [[75, "module-neclib.devices.ccd_controller.ccd_controller_base"]], "neclib.devices.ccd_controller.m100": [[76, "module-neclib.devices.ccd_controller.m100"]], "neclib.devices.ccd_controller.simulator": [[77, "module-neclib.devices.ccd_controller.simulator"]], "neclib.devices.da_converter": [[78, "module-neclib.devices.da_converter"]], "neclib.devices.da_converter.cpz340816": [[79, "module-neclib.devices.da_converter.cpz340816"]], "neclib.devices.da_converter.da_converter_base": [[80, "module-neclib.devices.da_converter.da_converter_base"]], "neclib.devices.da_converter.simulator": [[81, "module-neclib.devices.da_converter.simulator"]], "neclib.devices.device_base": [[82, "module-neclib.devices.device_base"]], "neclib.devices.encoder": [[83, "module-neclib.devices.encoder"]], "neclib.devices.encoder.cpz6204": [[84, "module-neclib.devices.encoder.cpz6204"]], "neclib.devices.encoder.encoder_base": [[85, "module-neclib.devices.encoder.encoder_base"]], "neclib.devices.encoder.nd287": [[86, "module-neclib.devices.encoder.nd287"]], "neclib.devices.encoder.simulator": [[87, "module-neclib.devices.encoder.simulator"]], "neclib.devices.motor": [[88, "module-neclib.devices.motor"]], "neclib.devices.motor.cpz2724": [[89, "module-neclib.devices.motor.cpz2724"]], "neclib.devices.motor.cpz7204": [[90, "module-neclib.devices.motor.cpz7204"]], "neclib.devices.motor.cpz7415v": [[91, "module-neclib.devices.motor.cpz7415v"]], "neclib.devices.motor.motor_base": [[92, "module-neclib.devices.motor.motor_base"]], "neclib.devices.motor.simulator": [[93, "module-neclib.devices.motor.simulator"]], "neclib.devices.power_meter": [[94, "module-neclib.devices.power_meter"]], "neclib.devices.power_meter.ma24126a": [[95, "module-neclib.devices.power_meter.ma24126a"]], "neclib.devices.power_meter.ml2437a": [[96, "module-neclib.devices.power_meter.ml2437a"]], "neclib.devices.power_meter.power_meter_base": [[97, "module-neclib.devices.power_meter.power_meter_base"]], "neclib.devices.power_meter.simulator": [[98, "module-neclib.devices.power_meter.simulator"]], "neclib.devices.selector": [[99, "module-neclib.devices.selector"]], "neclib.devices.signal_generator": [[100, "module-neclib.devices.signal_generator"]], "neclib.devices.signal_generator.e8257d": [[101, "module-neclib.devices.signal_generator.e8257d"]], "neclib.devices.signal_generator.fsw0010": [[102, "module-neclib.devices.signal_generator.fsw0010"]], "neclib.devices.signal_generator.fsw0020": [[103, "module-neclib.devices.signal_generator.fsw0020"]], "neclib.devices.signal_generator.mg3692c": [[104, "module-neclib.devices.signal_generator.mg3692c"]], "neclib.devices.signal_generator.signal_generator_base": [[105, "module-neclib.devices.signal_generator.signal_generator_base"]], "neclib.devices.signal_generator.simulator": [[106, "module-neclib.devices.signal_generator.simulator"]], "neclib.devices.spectrometer": [[107, "module-neclib.devices.spectrometer"]], "neclib.devices.spectrometer.ac240": [[108, "module-neclib.devices.spectrometer.ac240"]], "neclib.devices.spectrometer.simulator": [[109, "module-neclib.devices.spectrometer.simulator"]], "neclib.devices.spectrometer.spectrometer_base": [[110, "module-neclib.devices.spectrometer.spectrometer_base"]], "neclib.devices.spectrometer.xffts": [[111, "module-neclib.devices.spectrometer.xffts"]], "neclib.devices.thermometer": [[112, "module-neclib.devices.thermometer"]], "neclib.devices.thermometer.model_218": [[113, "module-neclib.devices.thermometer.model_218"]], "neclib.devices.thermometer.simulator": [[114, "module-neclib.devices.thermometer.simulator"]], "neclib.devices.thermometer.thermometer_base": [[115, "module-neclib.devices.thermometer.thermometer_base"]], "neclib.devices.vacuum_gauge": [[116, "module-neclib.devices.vacuum_gauge"]], "neclib.devices.vacuum_gauge.simulator": [[117, "module-neclib.devices.vacuum_gauge.simulator"]], "neclib.devices.vacuum_gauge.tpg261": [[118, "module-neclib.devices.vacuum_gauge.tpg261"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base": [[119, "module-neclib.devices.vacuum_gauge.vacuum_gauge_base"]], "neclib.devices.weather_station": [[120, "module-neclib.devices.weather_station"]], "neclib.devices.weather_station.simulator": [[121, "module-neclib.devices.weather_station.simulator"]], "neclib.devices.weather_station.tr73u": [[122, "module-neclib.devices.weather_station.tr73u"]], "neclib.devices.weather_station.weather_station_base": [[123, "module-neclib.devices.weather_station.weather_station_base"]], "neclib.recorders": [[124, "module-neclib.recorders"]], "neclib.recorders.console_log_writer": [[125, "module-neclib.recorders.console_log_writer"]], "neclib.recorders.file_writer": [[126, "module-neclib.recorders.file_writer"]], "neclib.recorders.necstdb_writer": [[127, "module-neclib.recorders.necstdb_writer"]], "neclib.recorders.recorder": [[128, "module-neclib.recorders.recorder"]], "neclib.recorders.writer_base": [[129, "module-neclib.recorders.writer_base"]], "neclib.safety": [[130, "module-neclib.safety"]], "neclib.safety.decelerate": [[131, "module-neclib.safety.decelerate"]], "neclib.safety.status": [[132, "module-neclib.safety.status"]], "neclib.simulators": [[133, "module-neclib.simulators"]], "neclib.simulators.antenna": [[134, "module-neclib.simulators.antenna"]], "neclib.simulators.dome": [[135, "module-neclib.simulators.dome"]], "neclib.utils": [[136, "module-neclib.utils"]], "neclib.utils.array_utils": [[137, "module-neclib.utils.array_utils"]], "neclib.utils.data_utils": [[138, "module-neclib.utils.data_utils"]], "neclib.utils.math_utils": [[139, "module-neclib.utils.math_utils"]], "neclib.utils.quantity_utils": [[140, "module-neclib.utils.quantity_utils"]], "neclib.utils.simulator_utils": [[141, "module-neclib.utils.simulator_utils"]], "NECST Parameters": [[142, "necst-parameters"]], "neclib.config": [[143, "neclib-config"]], "The config file": [[143, "the-config-file"]], "Location of the file": [[143, "location-of-the-file"]], "How to define parameters": [[143, "how-to-define-parameters"]], "Attach parsers": [[143, "attach-parsers"]], "How to use the parameters": [[143, "how-to-use-the-parameters"]], "How to specify the devices": [[144, "how-to-specify-the-devices"]], "Device name": [[144, "device-name"]], "Device model": [[144, "device-model"]], "How to add device I/O class": [[144, "how-to-add-device-i-o-class"]], "Definition of abstract device": [[144, "definition-of-abstract-device"]], "Device-specific implementation": [[144, "device-specific-implementation"]], "Dunder objects (any object with name __***__)": [[145, "dunder-objects-any-object-with-name"]], "Methods to be defined by user": [[145, "methods-to-be-defined-by-user"]], "__init__": [[145, "init"]], "Example": [[145, null], [145, null]], "__init_subclass__": [[145, "init-subclass"]], "__new__": [[145, "new"]], "__set__, __get__, __set_name__, __del__": [[145, "set-get-set-name-del"]], "__getattr__": [[145, "getattr"]], "__getitem__": [[145, "getitem"]], "__call__": [[145, "call"]], "Built-in methods": [[145, "built-in-methods"]], "__subclasses__": [[145, "subclasses"]], "Variables": [[145, "variables"]], "__class__": [[145, "class"]], "__name__": [[145, "name"]], "Tutorials for developers": [[146, "tutorials-for-developers"]], "Features": [[147, "features"]], "Installation": [[147, "installation"]], "Usage": [[147, "usage"]]}, "indexentries": {"module": [[0, "module-neclib"], [1, "module-neclib.controllers"], [2, "module-neclib.controllers.antenna_pid"], [3, "module-neclib.coordinates"], [4, "module-neclib.coordinates.convert"], [5, "module-neclib.coordinates.frame"], [6, "module-neclib.coordinates.observations"], [7, "module-neclib.coordinates.observations.observation_spec_base"], [8, "module-neclib.coordinates.observations.optical_pointing"], [9, "module-neclib.coordinates.observations.otf"], [10, "module-neclib.coordinates.observations.radio_pointing"], [11, "module-neclib.coordinates.observer"], [12, "module-neclib.coordinates.optimize"], [13, "module-neclib.coordinates.path_finder"], [14, "module-neclib.coordinates.paths"], [15, "module-neclib.coordinates.paths.linear"], [16, "module-neclib.coordinates.paths.path_base"], [17, "module-neclib.coordinates.paths.track"], [18, "module-neclib.coordinates.pointing_error"], [19, "module-neclib.coordinates.pointing_error.nanten2"], [20, "module-neclib.coordinates.pointing_error.omu1p85m"], [21, "module-neclib.coordinates.pointing_error.pointing_error"], [22, "module-neclib.core"], [23, "module-neclib.core.configuration"], [24, "module-neclib.core.data_type"], [25, "module-neclib.core.data_type.ordinal"], [26, "module-neclib.core.data_type.parameters"], [27, "module-neclib.core.data_type.rich_parameters"], [28, "module-neclib.core.data_type.status_manager"], [29, "module-neclib.core.data_type.value_range"], [30, "module-neclib.core.environ"], [31, "module-neclib.core.exceptions"], [32, "module-neclib.core.files"], [33, "module-neclib.core.files.general"], [34, "module-neclib.core.files.toml"], [35, "module-neclib.core.formatting"], [36, "module-neclib.core.formatting.dict_to_html"], [37, "module-neclib.core.formatting.observation_to_html"], [38, "module-neclib.core.formatting.status_to_html"], [39, "module-neclib.core.inform"], [40, "module-neclib.core.inform.console_logger"], [41, "module-neclib.core.inform.deprecation"], [42, "module-neclib.core.inform.disable"], [43, "module-neclib.core.math"], [44, "module-neclib.core.math.clip_impl"], [45, "module-neclib.core.math.frange_impl"], [46, "module-neclib.core.math.functions"], [47, "module-neclib.core.math.random"], [48, "module-neclib.core.normalization"], [49, "module-neclib.core.normalization.array"], [50, "module-neclib.core.normalization.astropy"], [51, "module-neclib.core.normalization.function_defaults"], [52, "module-neclib.core.security"], [53, "module-neclib.core.security.busy_impl"], [54, "module-neclib.core.security.load_check"], [55, "module-neclib.core.security.sanitize_impl"], [56, "module-neclib.core.types"], [57, "module-neclib.core.units"], [58, "module-neclib.data"], [59, "module-neclib.data.extrapolate"], [60, "module-neclib.data.interpolate"], [61, "module-neclib.data.resize"], [62, "module-neclib.devices"], [63, "module-neclib.devices.ad_converter"], [64, "module-neclib.devices.ad_converter.ad_converter_base"], [65, "module-neclib.devices.ad_converter.cpz3177"], [66, "module-neclib.devices.ad_converter.simulator"], [67, "module-neclib.devices.attenuator"], [68, "module-neclib.devices.attenuator.a11713b"], [69, "module-neclib.devices.attenuator.a11713c"], [70, "module-neclib.devices.attenuator.attenuator_base"], [71, "module-neclib.devices.attenuator.cpz340516"], [72, "module-neclib.devices.attenuator.rhio10"], [73, "module-neclib.devices.attenuator.simulator"], [74, "module-neclib.devices.ccd_controller"], [75, "module-neclib.devices.ccd_controller.ccd_controller_base"], [76, "module-neclib.devices.ccd_controller.m100"], [77, "module-neclib.devices.ccd_controller.simulator"], [78, "module-neclib.devices.da_converter"], [79, "module-neclib.devices.da_converter.cpz340816"], [80, "module-neclib.devices.da_converter.da_converter_base"], [81, "module-neclib.devices.da_converter.simulator"], [82, "module-neclib.devices.device_base"], [83, "module-neclib.devices.encoder"], [84, "module-neclib.devices.encoder.cpz6204"], [85, "module-neclib.devices.encoder.encoder_base"], [86, "module-neclib.devices.encoder.nd287"], [87, "module-neclib.devices.encoder.simulator"], [88, "module-neclib.devices.motor"], [89, "module-neclib.devices.motor.cpz2724"], [90, "module-neclib.devices.motor.cpz7204"], [91, "module-neclib.devices.motor.cpz7415v"], [92, "module-neclib.devices.motor.motor_base"], [93, "module-neclib.devices.motor.simulator"], [94, "module-neclib.devices.power_meter"], [95, "module-neclib.devices.power_meter.ma24126a"], [96, "module-neclib.devices.power_meter.ml2437a"], [97, "module-neclib.devices.power_meter.power_meter_base"], [98, "module-neclib.devices.power_meter.simulator"], [99, "module-neclib.devices.selector"], [100, "module-neclib.devices.signal_generator"], [101, "module-neclib.devices.signal_generator.e8257d"], [102, "module-neclib.devices.signal_generator.fsw0010"], [103, "module-neclib.devices.signal_generator.fsw0020"], [104, "module-neclib.devices.signal_generator.mg3692c"], [105, "module-neclib.devices.signal_generator.signal_generator_base"], [106, "module-neclib.devices.signal_generator.simulator"], [107, "module-neclib.devices.spectrometer"], [108, "module-neclib.devices.spectrometer.ac240"], [109, "module-neclib.devices.spectrometer.simulator"], [110, "module-neclib.devices.spectrometer.spectrometer_base"], [111, "module-neclib.devices.spectrometer.xffts"], [112, "module-neclib.devices.thermometer"], [113, "module-neclib.devices.thermometer.model_218"], [114, "module-neclib.devices.thermometer.simulator"], [115, "module-neclib.devices.thermometer.thermometer_base"], [116, "module-neclib.devices.vacuum_gauge"], [117, "module-neclib.devices.vacuum_gauge.simulator"], [118, "module-neclib.devices.vacuum_gauge.tpg261"], [119, "module-neclib.devices.vacuum_gauge.vacuum_gauge_base"], [120, "module-neclib.devices.weather_station"], [121, "module-neclib.devices.weather_station.simulator"], [122, "module-neclib.devices.weather_station.tr73u"], [123, "module-neclib.devices.weather_station.weather_station_base"], [124, "module-neclib.recorders"], [125, "module-neclib.recorders.console_log_writer"], [126, "module-neclib.recorders.file_writer"], [127, "module-neclib.recorders.necstdb_writer"], [128, "module-neclib.recorders.recorder"], [129, "module-neclib.recorders.writer_base"], [130, "module-neclib.safety"], [131, "module-neclib.safety.decelerate"], [132, "module-neclib.safety.status"], [133, "module-neclib.simulators"], [134, "module-neclib.simulators.antenna"], [135, "module-neclib.simulators.dome"], [136, "module-neclib.utils"], [137, "module-neclib.utils.array_utils"], [138, "module-neclib.utils.data_utils"], [139, "module-neclib.utils.math_utils"], [140, "module-neclib.utils.quantity_utils"], [141, "module-neclib.utils.simulator_utils"]], "neclib": [[0, "module-neclib"]], "neclib.controllers": [[1, "module-neclib.controllers"]], "angle_unit (pidcontroller attribute)": [[2, "neclib.controllers.antenna_pid.PIDController.ANGLE_UNIT"]], "pidcontroller (class in neclib.controllers.antenna_pid)": [[2, "neclib.controllers.antenna_pid.PIDController"]], "dt (pidcontroller property)": [[2, "neclib.controllers.antenna_pid.PIDController.dt"]], "error_derivative (pidcontroller property)": [[2, "neclib.controllers.antenna_pid.PIDController.error_derivative"]], "error_integral (pidcontroller property)": [[2, "neclib.controllers.antenna_pid.PIDController.error_integral"]], "get_speed() (pidcontroller method)": [[2, "neclib.controllers.antenna_pid.PIDController.get_speed"]], "neclib.controllers.antenna_pid": [[2, "module-neclib.controllers.antenna_pid"]], "params() (pidcontroller method)": [[2, "neclib.controllers.antenna_pid.PIDController.params"]], "neclib.coordinates": [[3, "module-neclib.coordinates"]], "coordcalculator (class in neclib.coordinates.convert)": [[4, "neclib.coordinates.convert.CoordCalculator"]], "coordinatedelta (class in neclib.coordinates.convert)": [[4, "neclib.coordinates.convert.CoordinateDelta"]], "altaz_kwargs (coordcalculator property)": [[4, "neclib.coordinates.convert.CoordCalculator.altaz_kwargs"]], "broadcasted (coordinatedelta property)": [[4, "neclib.coordinates.convert.CoordinateDelta.broadcasted"]], "command_freq (coordcalculator property)": [[4, "neclib.coordinates.convert.CoordCalculator.command_freq"]], "command_group_duration_sec (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.command_group_duration_sec"]], "command_offset_sec (coordcalculator property)": [[4, "neclib.coordinates.convert.CoordCalculator.command_offset_sec"]], "coordinate (coordcalculator property)": [[4, "neclib.coordinates.convert.CoordCalculator.coordinate"]], "coordinate_delta (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.coordinate_delta"]], "d_lat (coordinatedelta attribute)": [[4, "neclib.coordinates.convert.CoordinateDelta.d_lat"]], "d_lon (coordinatedelta attribute)": [[4, "neclib.coordinates.convert.CoordinateDelta.d_lon"]], "direct_before (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.direct_before"]], "direct_mode (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.direct_mode"]], "frame (coordinatedelta attribute)": [[4, "neclib.coordinates.convert.CoordinateDelta.frame"]], "location (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.location"]], "name_coordinate (coordcalculator property)": [[4, "neclib.coordinates.convert.CoordCalculator.name_coordinate"]], "neclib.coordinates.convert": [[4, "module-neclib.coordinates.convert"]], "obsfreq (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.obsfreq"]], "obswl (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.obswl"]], "pointing_err (coordcalculator property)": [[4, "neclib.coordinates.convert.CoordCalculator.pointing_err"]], "pointing_err_file (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.pointing_err_file"]], "pressure (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.pressure"]], "relative_humidity (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.relative_humidity"]], "shape (coordinatedelta property)": [[4, "neclib.coordinates.convert.CoordinateDelta.shape"]], "size (coordinatedelta property)": [[4, "neclib.coordinates.convert.CoordinateDelta.size"]], "temperature (coordcalculator attribute)": [[4, "neclib.coordinates.convert.CoordCalculator.temperature"]], "unit (coordinatedelta attribute)": [[4, "neclib.coordinates.convert.CoordinateDelta.unit"]], "describe_frame() (in module neclib.coordinates.frame)": [[5, "neclib.coordinates.frame.describe_frame"]], "neclib.coordinates.frame": [[5, "module-neclib.coordinates.frame"]], "parse_frame() (in module neclib.coordinates.frame)": [[5, "neclib.coordinates.frame.parse_frame"]], "neclib.coordinates.observations": [[6, "module-neclib.coordinates.observations"]], "drive (observationmode attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationMode.DRIVE"]], "hot (observationmode attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationMode.HOT"]], "off (observationmode attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationMode.OFF"]], "on (observationmode attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationMode.ON"]], "observationmode (class in neclib.coordinates.observations.observation_spec_base)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationMode"]], "observationspec (class in neclib.coordinates.observations.observation_spec_base)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationSpec"]], "sky (observationmode attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationMode.SKY"]], "timekeeper (class in neclib.coordinates.observations.observation_spec_base)": [[7, "neclib.coordinates.observations.observation_spec_base.TimeKeeper"]], "waypoint (class in neclib.coordinates.observations.observation_spec_base)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint"]], "coordinates (waypoint property)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.coordinates"]], "coords (observationspec property)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationSpec.coords"]], "fig (observationspec property)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationSpec.fig"]], "hot() (observationspec method)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationSpec.hot"]], "id (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.id"]], "increment() (timekeeper method)": [[7, "neclib.coordinates.observations.observation_spec_base.TimeKeeper.increment"]], "integration (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.integration"]], "is_scan (waypoint property)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.is_scan"]], "mode (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.mode"]], "name_query (waypoint property)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.name_query"]], "neclib.coordinates.observations.observation_spec_base": [[7, "module-neclib.coordinates.observations.observation_spec_base"]], "observe() (observationspec method)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationSpec.observe"]], "off() (observationspec method)": [[7, "neclib.coordinates.observations.observation_spec_base.ObservationSpec.off"]], "offset (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.offset"]], "reference (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.reference"]], "scan_frame (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.scan_frame"]], "should_observe (timekeeper property)": [[7, "neclib.coordinates.observations.observation_spec_base.TimeKeeper.should_observe"]], "speed (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.speed"]], "start (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.start"]], "stop (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.stop"]], "target (waypoint attribute)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.target"]], "tell_observed() (timekeeper method)": [[7, "neclib.coordinates.observations.observation_spec_base.TimeKeeper.tell_observed"]], "with_offset (waypoint property)": [[7, "neclib.coordinates.observations.observation_spec_base.Waypoint.with_offset"]], "opticalpointingspec (class in neclib.coordinates.observations.optical_pointing)": [[8, "neclib.coordinates.observations.optical_pointing.OpticalPointingSpec"]], "estimate_time() (opticalpointingspec method)": [[8, "neclib.coordinates.observations.optical_pointing.OpticalPointingSpec.estimate_time"]], "neclib.coordinates.observations.optical_pointing": [[8, "module-neclib.coordinates.observations.optical_pointing"]], "readlines_file() (opticalpointingspec method)": [[8, "neclib.coordinates.observations.optical_pointing.OpticalPointingSpec.readlines_file"]], "sort() (opticalpointingspec method)": [[8, "neclib.coordinates.observations.optical_pointing.OpticalPointingSpec.sort"]], "to_altaz() (opticalpointingspec method)": [[8, "neclib.coordinates.observations.optical_pointing.OpticalPointingSpec.to_altaz"]], "otfspec (class in neclib.coordinates.observations.otf)": [[9, "neclib.coordinates.observations.otf.OTFSpec"]], "neclib.coordinates.observations.otf": [[9, "module-neclib.coordinates.observations.otf"]], "observe() (otfspec method)": [[9, "neclib.coordinates.observations.otf.OTFSpec.observe"]], "radiopointingspec (class in neclib.coordinates.observations.radio_pointing)": [[10, "neclib.coordinates.observations.radio_pointing.RadioPointingSpec"]], "neclib.coordinates.observations.radio_pointing": [[10, "module-neclib.coordinates.observations.radio_pointing"]], "observe() (radiopointingspec method)": [[10, "neclib.coordinates.observations.radio_pointing.RadioPointingSpec.observe"]], "observer (class in neclib.coordinates.observer)": [[11, "neclib.coordinates.observer.Observer"]], "lst() (observer method)": [[11, "neclib.coordinates.observer.Observer.lst"]], "neclib.coordinates.observer": [[11, "module-neclib.coordinates.observer"]], "v_obs() (observer method)": [[11, "neclib.coordinates.observer.Observer.v_obs"]], "drivelimitchecker (class in neclib.coordinates.optimize)": [[12, "neclib.coordinates.optimize.DriveLimitChecker"]], "neclib.coordinates.optimize": [[12, "module-neclib.coordinates.optimize"]], "optimize() (drivelimitchecker method)": [[12, "neclib.coordinates.optimize.DriveLimitChecker.optimize"]], "apparentaltazcoordinate (class in neclib.coordinates.path_finder)": [[13, "neclib.coordinates.path_finder.ApparentAltAzCoordinate"]], "coordinategeneratormanager (class in neclib.coordinates.path_finder)": [[13, "neclib.coordinates.path_finder.CoordinateGeneratorManager"]], "pathfinder (class in neclib.coordinates.path_finder)": [[13, "neclib.coordinates.path_finder.PathFinder"]], "attach() (coordinategeneratormanager method)": [[13, "neclib.coordinates.path_finder.CoordinateGeneratorManager.attach"]], "az (apparentaltazcoordinate attribute)": [[13, "neclib.coordinates.path_finder.ApparentAltAzCoordinate.az"]], "clear() (coordinategeneratormanager method)": [[13, "neclib.coordinates.path_finder.CoordinateGeneratorManager.clear"]], "context (apparentaltazcoordinate attribute)": [[13, "neclib.coordinates.path_finder.ApparentAltAzCoordinate.context"]], "el (apparentaltazcoordinate attribute)": [[13, "neclib.coordinates.path_finder.ApparentAltAzCoordinate.el"]], "from_function() (pathfinder method)": [[13, "neclib.coordinates.path_finder.PathFinder.from_function"]], "get() (coordinategeneratormanager method)": [[13, "neclib.coordinates.path_finder.CoordinateGeneratorManager.get"]], "linear() (pathfinder method)": [[13, "neclib.coordinates.path_finder.PathFinder.linear"]], "neclib.coordinates.path_finder": [[13, "module-neclib.coordinates.path_finder"]], "sequential() (pathfinder method)": [[13, "neclib.coordinates.path_finder.PathFinder.sequential"]], "time (apparentaltazcoordinate attribute)": [[13, "neclib.coordinates.path_finder.ApparentAltAzCoordinate.time"]], "track() (pathfinder method)": [[13, "neclib.coordinates.path_finder.PathFinder.track"]], "will_send() (coordinategeneratormanager method)": [[13, "neclib.coordinates.path_finder.CoordinateGeneratorManager.will_send"]], "neclib.coordinates.paths": [[14, "module-neclib.coordinates.paths"]], "accelerate (class in neclib.coordinates.paths.linear)": [[15, "neclib.coordinates.paths.linear.Accelerate"]], "linear (class in neclib.coordinates.paths.linear)": [[15, "neclib.coordinates.paths.linear.Linear"]], "standby (class in neclib.coordinates.paths.linear)": [[15, "neclib.coordinates.paths.linear.Standby"]], "arguments (accelerate property)": [[15, "neclib.coordinates.paths.linear.Accelerate.arguments"]], "arguments (linear property)": [[15, "neclib.coordinates.paths.linear.Linear.arguments"]], "arguments (standby property)": [[15, "neclib.coordinates.paths.linear.Standby.arguments"]], "infinite (accelerate attribute)": [[15, "neclib.coordinates.paths.linear.Accelerate.infinite"]], "infinite (linear attribute)": [[15, "neclib.coordinates.paths.linear.Linear.infinite"]], "infinite (standby attribute)": [[15, "neclib.coordinates.paths.linear.Standby.infinite"]], "lonlat_func (accelerate property)": [[15, "neclib.coordinates.paths.linear.Accelerate.lonlat_func"]], "lonlat_func (linear property)": [[15, "neclib.coordinates.paths.linear.Linear.lonlat_func"]], "lonlat_func (standby property)": [[15, "neclib.coordinates.paths.linear.Standby.lonlat_func"]], "n_cmd (accelerate property)": [[15, "neclib.coordinates.paths.linear.Accelerate.n_cmd"]], "n_cmd (linear property)": [[15, "neclib.coordinates.paths.linear.Linear.n_cmd"]], "n_cmd (standby property)": [[15, "neclib.coordinates.paths.linear.Standby.n_cmd"]], "neclib.coordinates.paths.linear": [[15, "module-neclib.coordinates.paths.linear"]], "target_frame (linear property)": [[15, "neclib.coordinates.paths.linear.Linear.target_frame"]], "tight (accelerate attribute)": [[15, "neclib.coordinates.paths.linear.Accelerate.tight"]], "tight (linear attribute)": [[15, "neclib.coordinates.paths.linear.Linear.tight"]], "tight (standby attribute)": [[15, "neclib.coordinates.paths.linear.Standby.tight"]], "waypoint (accelerate attribute)": [[15, "neclib.coordinates.paths.linear.Accelerate.waypoint"]], "waypoint (linear attribute)": [[15, "neclib.coordinates.paths.linear.Linear.waypoint"]], "waypoint (standby attribute)": [[15, "neclib.coordinates.paths.linear.Standby.waypoint"]], "controlcontext (class in neclib.coordinates.paths.path_base)": [[16, "neclib.coordinates.paths.path_base.ControlContext"]], "index (class in neclib.coordinates.paths.path_base)": [[16, "neclib.coordinates.paths.path_base.Index"]], "path (class in neclib.coordinates.paths.path_base)": [[16, "neclib.coordinates.paths.path_base.Path"]], "arguments (path property)": [[16, "neclib.coordinates.paths.path_base.Path.arguments"]], "duration (controlcontext attribute)": [[16, "neclib.coordinates.paths.path_base.ControlContext.duration"]], "index (index attribute)": [[16, "neclib.coordinates.paths.path_base.Index.index"]], "infinite (controlcontext attribute)": [[16, "neclib.coordinates.paths.path_base.ControlContext.infinite"]], "infinite (path attribute)": [[16, "neclib.coordinates.paths.path_base.Path.infinite"]], "neclib.coordinates.paths.path_base": [[16, "module-neclib.coordinates.paths.path_base"]], "properties_modified() (controlcontext method)": [[16, "neclib.coordinates.paths.path_base.ControlContext.properties_modified"]], "start (controlcontext attribute)": [[16, "neclib.coordinates.paths.path_base.ControlContext.start"]], "stop (controlcontext attribute)": [[16, "neclib.coordinates.paths.path_base.ControlContext.stop"]], "target_frame (path property)": [[16, "neclib.coordinates.paths.path_base.Path.target_frame"]], "tight (controlcontext attribute)": [[16, "neclib.coordinates.paths.path_base.ControlContext.tight"]], "tight (path attribute)": [[16, "neclib.coordinates.paths.path_base.Path.tight"]], "time (index attribute)": [[16, "neclib.coordinates.paths.path_base.Index.time"]], "update() (controlcontext method)": [[16, "neclib.coordinates.paths.path_base.ControlContext.update"]], "waypoint (controlcontext attribute)": [[16, "neclib.coordinates.paths.path_base.ControlContext.waypoint"]], "waypoint (path attribute)": [[16, "neclib.coordinates.paths.path_base.Path.waypoint"]], "track (class in neclib.coordinates.paths.track)": [[17, "neclib.coordinates.paths.track.Track"]], "arguments (track property)": [[17, "neclib.coordinates.paths.track.Track.arguments"]], "infinite (track attribute)": [[17, "neclib.coordinates.paths.track.Track.infinite"]], "lonlat_func (track property)": [[17, "neclib.coordinates.paths.track.Track.lonlat_func"]], "n_cmd (track property)": [[17, "neclib.coordinates.paths.track.Track.n_cmd"]], "neclib.coordinates.paths.track": [[17, "module-neclib.coordinates.paths.track"]], "tight (track attribute)": [[17, "neclib.coordinates.paths.track.Track.tight"]], "waypoint (track attribute)": [[17, "neclib.coordinates.paths.track.Track.waypoint"]], "neclib.coordinates.pointing_error": [[18, "module-neclib.coordinates.pointing_error"]], "nanten2 (class in neclib.coordinates.pointing_error.nanten2)": [[19, "neclib.coordinates.pointing_error.nanten2.NANTEN2"]], "apply_inverse_offset() (nanten2 method)": [[19, "neclib.coordinates.pointing_error.nanten2.NANTEN2.apply_inverse_offset"]], "apply_offset() (nanten2 method)": [[19, "neclib.coordinates.pointing_error.nanten2.NANTEN2.apply_offset"]], "fit() (nanten2 method)": [[19, "neclib.coordinates.pointing_error.nanten2.NANTEN2.fit"]], "neclib.coordinates.pointing_error.nanten2": [[19, "module-neclib.coordinates.pointing_error.nanten2"]], "omu1p85m (class in neclib.coordinates.pointing_error.omu1p85m)": [[20, "neclib.coordinates.pointing_error.omu1p85m.OMU1P85M"]], "apply_inverse_offset() (omu1p85m method)": [[20, "neclib.coordinates.pointing_error.omu1p85m.OMU1P85M.apply_inverse_offset"]], "apply_offset() (omu1p85m method)": [[20, "neclib.coordinates.pointing_error.omu1p85m.OMU1P85M.apply_offset"]], "fit() (omu1p85m method)": [[20, "neclib.coordinates.pointing_error.omu1p85m.OMU1P85M.fit"]], "neclib.coordinates.pointing_error.omu1p85m": [[20, "module-neclib.coordinates.pointing_error.omu1p85m"]], "pointingerror (class in neclib.coordinates.pointing_error.pointing_error)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError"]], "apparent_to_refracted() (pointingerror method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.apparent_to_refracted"]], "apply_inverse_offset() (pointingerror method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.apply_inverse_offset"]], "apply_offset() (pointingerror method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.apply_offset"]], "fit() (pointingerror method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.fit"]], "get_dummy() (pointingerror class method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.get_dummy"]], "inverse_atmospheric_refraction() (pointingerror method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.inverse_atmospheric_refraction"]], "neclib.coordinates.pointing_error.pointing_error": [[21, "module-neclib.coordinates.pointing_error.pointing_error"]], "refracted_to_apparent() (pointingerror method)": [[21, "neclib.coordinates.pointing_error.pointing_error.PointingError.refracted_to_apparent"]], "neclib.core": [[22, "module-neclib.core"]], "configuration (class in neclib.core.configuration)": [[23, "neclib.core.configuration.Configuration"]], "configurationview (class in neclib.core.configuration)": [[23, "neclib.core.configuration.ConfigurationView"]], "config (in module neclib.core.configuration)": [[23, "neclib.core.configuration.config"]], "configure() (configuration class method)": [[23, "neclib.core.configuration.Configuration.configure"]], "configure() (in module neclib.core.configuration)": [[23, "neclib.core.configuration.configure"]], "find_config() (in module neclib.core.configuration)": [[23, "neclib.core.configuration.find_config"]], "from_file() (configuration class method)": [[23, "neclib.core.configuration.Configuration.from_file"]], "items() (configuration method)": [[23, "neclib.core.configuration.Configuration.items"]], "keys() (configuration method)": [[23, "neclib.core.configuration.Configuration.keys"]], "neclib.core.configuration": [[23, "module-neclib.core.configuration"]], "parameters (configuration property)": [[23, "neclib.core.configuration.Configuration.parameters"]], "reload() (configuration method)": [[23, "neclib.core.configuration.Configuration.reload"]], "reload() (configurationview method)": [[23, "neclib.core.configuration.ConfigurationView.reload"]], "values() (configuration method)": [[23, "neclib.core.configuration.Configuration.values"]], "neclib.core.data_type": [[24, "module-neclib.core.data_type"]], "ordinal (class in neclib.core.data_type.ordinal)": [[25, "neclib.core.data_type.ordinal.Ordinal"]], "neclib.core.data_type.ordinal": [[25, "module-neclib.core.data_type.ordinal"]], "parameters (class in neclib.core.data_type.parameters)": [[26, "neclib.core.data_type.parameters.Parameters"]], "attach_aliases() (parameters method)": [[26, "neclib.core.data_type.parameters.Parameters.attach_aliases"]], "from_file() (parameters class method)": [[26, "neclib.core.data_type.parameters.Parameters.from_file"]], "neclib.core.data_type.parameters": [[26, "module-neclib.core.data_type.parameters"]], "parameters (parameters property)": [[26, "neclib.core.data_type.parameters.Parameters.parameters"]], "richparameters (class in neclib.core.data_type.rich_parameters)": [[27, "neclib.core.data_type.rich_parameters.RichParameters"]], "attach_parsers() (richparameters method)": [[27, "neclib.core.data_type.rich_parameters.RichParameters.attach_parsers"]], "from_file() (richparameters class method)": [[27, "neclib.core.data_type.rich_parameters.RichParameters.from_file"]], "get() (richparameters method)": [[27, "neclib.core.data_type.rich_parameters.RichParameters.get"]], "neclib.core.data_type.rich_parameters": [[27, "module-neclib.core.data_type.rich_parameters"]], "parameters (richparameters property)": [[27, "neclib.core.data_type.rich_parameters.RichParameters.parameters"]], "statusmanager (class in neclib.core.data_type.status_manager)": [[28, "neclib.core.data_type.status_manager.StatusManager"]], "get() (statusmanager method)": [[28, "neclib.core.data_type.status_manager.StatusManager.get"]], "neclib.core.data_type.status_manager": [[28, "module-neclib.core.data_type.status_manager"]], "set() (statusmanager method)": [[28, "neclib.core.data_type.status_manager.StatusManager.set"]], "valuerange (class in neclib.core.data_type.value_range)": [[29, "neclib.core.data_type.value_range.ValueRange"]], "contain_all() (valuerange method)": [[29, "neclib.core.data_type.value_range.ValueRange.contain_all"]], "contain_any() (valuerange method)": [[29, "neclib.core.data_type.value_range.ValueRange.contain_any"]], "map() (valuerange method)": [[29, "neclib.core.data_type.value_range.ValueRange.map"]], "neclib.core.data_type.value_range": [[29, "module-neclib.core.data_type.value_range"]], "width (valuerange property)": [[29, "neclib.core.data_type.value_range.ValueRange.width"]], "neclib.core.environ": [[30, "module-neclib.core.environ"]], "necstaccessibilitywarning": [[31, "neclib.core.exceptions.NECSTAccessibilityWarning"]], "necstauthorityerror": [[31, "neclib.core.exceptions.NECSTAuthorityError"]], "necstconfigurationerror": [[31, "neclib.core.exceptions.NECSTConfigurationError"]], "necstparameternameerror": [[31, "neclib.core.exceptions.NECSTParameterNameError"]], "necsttimeouterror": [[31, "neclib.core.exceptions.NECSTTimeoutError"]], "neclib.core.exceptions": [[31, "module-neclib.core.exceptions"]], "neclib.core.files": [[32, "module-neclib.core.files"]], "read() (in module neclib.core.files)": [[32, "neclib.core.files.read"]], "neclib.core.files.general": [[33, "module-neclib.core.files.general"]], "read() (in module neclib.core.files.general)": [[33, "neclib.core.files.general.read"]], "flatten() (in module neclib.core.files.toml)": [[34, "neclib.core.files.toml.flatten"]], "neclib.core.files.toml": [[34, "module-neclib.core.files.toml"]], "read() (in module neclib.core.files.toml)": [[34, "neclib.core.files.toml.read"]], "to_string() (in module neclib.core.files.toml)": [[34, "neclib.core.files.toml.to_string"]], "neclib.core.formatting": [[35, "module-neclib.core.formatting"]], "html_repr_of_dict() (in module neclib.core.formatting.dict_to_html)": [[36, "neclib.core.formatting.dict_to_html.html_repr_of_dict"]], "neclib.core.formatting.dict_to_html": [[36, "module-neclib.core.formatting.dict_to_html"]], "html_repr_of_observation_spec() (in module neclib.core.formatting.observation_to_html)": [[37, "neclib.core.formatting.observation_to_html.html_repr_of_observation_spec"]], "neclib.core.formatting.observation_to_html": [[37, "module-neclib.core.formatting.observation_to_html"]], "html_repr_of_status() (in module neclib.core.formatting.status_to_html)": [[38, "neclib.core.formatting.status_to_html.html_repr_of_status"]], "neclib.core.formatting.status_to_html": [[38, "module-neclib.core.formatting.status_to_html"]], "deprecated() (in module neclib.core.inform)": [[39, "neclib.core.inform.deprecated"]], "deprecated_namespace() (in module neclib.core.inform)": [[39, "neclib.core.inform.deprecated_namespace"]], "disabled() (in module neclib.core.inform)": [[39, "neclib.core.inform.disabled"]], "get_logger() (in module neclib.core.inform)": [[39, "neclib.core.inform.get_logger"]], "neclib.core.inform": [[39, "module-neclib.core.inform"]], "colorprefix (colorizelevelnameformatter attribute)": [[40, "neclib.core.inform.console_logger.ColorizeLevelNameFormatter.ColorPrefix"]], "colorizelevelnameformatter (class in neclib.core.inform.console_logger)": [[40, "neclib.core.inform.console_logger.ColorizeLevelNameFormatter"]], "throttle (class in neclib.core.inform.console_logger)": [[40, "neclib.core.inform.console_logger.Throttle"]], "filter() (throttle method)": [[40, "neclib.core.inform.console_logger.Throttle.filter"]], "format() (colorizelevelnameformatter method)": [[40, "neclib.core.inform.console_logger.ColorizeLevelNameFormatter.format"]], "get_logger() (in module neclib.core.inform.console_logger)": [[40, "neclib.core.inform.console_logger.get_logger"]], "neclib.core.inform.console_logger": [[40, "module-neclib.core.inform.console_logger"]], "deprecated() (in module neclib.core.inform.deprecation)": [[41, "neclib.core.inform.deprecation.deprecated"]], "deprecated_namespace() (in module neclib.core.inform.deprecation)": [[41, "neclib.core.inform.deprecation.deprecated_namespace"]], "neclib.core.inform.deprecation": [[41, "module-neclib.core.inform.deprecation"]], "disabled() (in module neclib.core.inform.disable)": [[42, "neclib.core.inform.disable.disabled"]], "neclib.core.inform.disable": [[42, "module-neclib.core.inform.disable"]], "neclib.core.math": [[43, "module-neclib.core.math"]], "clip() (in module neclib.core.math.clip_impl)": [[44, "neclib.core.math.clip_impl.clip"]], "neclib.core.math.clip_impl": [[44, "module-neclib.core.math.clip_impl"]], "frange() (in module neclib.core.math.frange_impl)": [[45, "neclib.core.math.frange_impl.frange"]], "neclib.core.math.frange_impl": [[45, "module-neclib.core.math.frange_impl"]], "functions (class in neclib.core.math.functions)": [[46, "neclib.core.math.functions.Functions"]], "functions.normal (class in neclib.core.math.functions)": [[46, "neclib.core.math.functions.Functions.Normal"]], "functions.sigmoid (class in neclib.core.math.functions)": [[46, "neclib.core.math.functions.Functions.Sigmoid"]], "neclib.core.math.functions": [[46, "module-neclib.core.math.functions"]], "random (class in neclib.core.math.random)": [[47, "neclib.core.math.random.Random"]], "fluctuation() (random method)": [[47, "neclib.core.math.random.Random.fluctuation"]], "neclib.core.math.random": [[47, "module-neclib.core.math.random"]], "walk() (random method)": [[47, "neclib.core.math.random.Random.walk"]], "neclib.core.normalization": [[48, "module-neclib.core.normalization"]], "nparrayvalidator (class in neclib.core.normalization.array)": [[49, "neclib.core.normalization.array.NPArrayValidator"]], "neclib.core.normalization.array": [[49, "module-neclib.core.normalization.array"]], "quantityvalidator (class in neclib.core.normalization.astropy)": [[50, "neclib.core.normalization.astropy.QuantityValidator"]], "get_quantity() (in module neclib.core.normalization.astropy)": [[50, "neclib.core.normalization.astropy.get_quantity"]], "neclib.core.normalization.astropy": [[50, "module-neclib.core.normalization.astropy"]], "create_wrapper() (partial method)": [[51, "neclib.core.normalization.function_defaults.partial.create_wrapper"]], "empty_parameters() (partial method)": [[51, "neclib.core.normalization.function_defaults.partial.empty_parameters"]], "merge_arguments() (partial method)": [[51, "neclib.core.normalization.function_defaults.partial.merge_arguments"]], "neclib.core.normalization.function_defaults": [[51, "module-neclib.core.normalization.function_defaults"]], "parse_arguments() (partial method)": [[51, "neclib.core.normalization.function_defaults.partial.parse_arguments"]], "partial (class in neclib.core.normalization.function_defaults)": [[51, "neclib.core.normalization.function_defaults.partial"]], "signature (partial property)": [[51, "neclib.core.normalization.function_defaults.partial.signature"]], "neclib.core.security": [[52, "module-neclib.core.security"]], "busy (busy property)": [[53, "neclib.core.security.busy_impl.busy.busy"]], "busy (class in neclib.core.security.busy_impl)": [[53, "neclib.core.security.busy_impl.busy"]], "neclib.core.security.busy_impl": [[53, "module-neclib.core.security.busy_impl"]], "loadchecker (class in neclib.core.security.load_check)": [[54, "neclib.core.security.load_check.LoadChecker"]], "cpu_count (loadchecker attribute)": [[54, "neclib.core.security.load_check.LoadChecker.cpu_count"]], "cpu_usage() (loadchecker method)": [[54, "neclib.core.security.load_check.LoadChecker.cpu_usage"]], "disk_usage() (loadchecker method)": [[54, "neclib.core.security.load_check.LoadChecker.disk_usage"]], "loadavg() (loadchecker method)": [[54, "neclib.core.security.load_check.LoadChecker.loadavg"]], "memory_available() (loadchecker method)": [[54, "neclib.core.security.load_check.LoadChecker.memory_available"]], "neclib.core.security.load_check": [[54, "module-neclib.core.security.load_check"]], "network_amount() (loadchecker method)": [[54, "neclib.core.security.load_check.LoadChecker.network_amount"]], "neclib.core.security.sanitize_impl": [[55, "module-neclib.core.security.sanitize_impl"]], "sanitize() (in module neclib.core.security.sanitize_impl)": [[55, "neclib.core.security.sanitize_impl.sanitize"]], "angleunit (in module neclib.core.types)": [[56, "neclib.core.types.AngleUnit"]], "array (class in neclib.core.types)": [[56, "neclib.core.types.Array"]], "coordframetype (in module neclib.core.types)": [[56, "neclib.core.types.CoordFrameType"]], "coordinatetype (in module neclib.core.types)": [[56, "neclib.core.types.CoordinateType"]], "dimensionless (in module neclib.core.types)": [[56, "neclib.core.types.DimensionLess"]], "equivalencytype (in module neclib.core.types)": [[56, "neclib.core.types.EquivalencyType"]], "isdataclass (class in neclib.core.types)": [[56, "neclib.core.types.IsDataClass"]], "supportscomparison (class in neclib.core.types)": [[56, "neclib.core.types.SupportsComparison"]], "textlike (class in neclib.core.types)": [[56, "neclib.core.types.TextLike"]], "unittype (in module neclib.core.types)": [[56, "neclib.core.types.UnitType"]], "find() (textlike method)": [[56, "neclib.core.types.TextLike.find"]], "lower() (textlike method)": [[56, "neclib.core.types.TextLike.lower"]], "neclib.core.types": [[56, "module-neclib.core.types"]], "replace() (textlike method)": [[56, "neclib.core.types.TextLike.replace"]], "upper() (textlike method)": [[56, "neclib.core.types.TextLike.upper"]], "dbm (in module neclib.core.units)": [[57, "neclib.core.units.dBm"]], "neclib.core.units": [[57, "module-neclib.core.units"]], "point (in module neclib.core.units)": [[57, "neclib.core.units.point"]], "scan (in module neclib.core.units)": [[57, "neclib.core.units.scan"]], "scan_to_points() (in module neclib.core.units)": [[57, "neclib.core.units.scan_to_points"]], "neclib.data": [[58, "module-neclib.data"]], "linearextrapolate (class in neclib.data.extrapolate)": [[59, "neclib.data.extrapolate.LinearExtrapolate"]], "neclib.data.extrapolate": [[59, "module-neclib.data.extrapolate"]], "interpolator (class in neclib.data.interpolate)": [[60, "neclib.data.interpolate.Interpolator"]], "linearinterp (class in neclib.data.interpolate)": [[60, "neclib.data.interpolate.LinearInterp"]], "neclib.data.interpolate": [[60, "module-neclib.data.interpolate"]], "resize (class in neclib.data.resize)": [[61, "neclib.data.resize.Resize"]], "get() (resize method)": [[61, "neclib.data.resize.Resize.get"]], "neclib.data.resize": [[61, "module-neclib.data.resize"]], "push() (resize method)": [[61, "neclib.data.resize.Resize.push"]], "implementations (in module neclib.devices)": [[62, "neclib.devices.implementations"]], "neclib.devices": [[62, "module-neclib.devices"]], "parsed (in module neclib.devices)": [[62, "neclib.devices.parsed"]], "reload() (in module neclib.devices)": [[62, "neclib.devices.reload"]], "neclib.devices.ad_converter": [[63, "module-neclib.devices.ad_converter"]], "adconverter (class in neclib.devices.ad_converter.ad_converter_base)": [[64, "neclib.devices.ad_converter.ad_converter_base.ADConverter"]], "manufacturer (adconverter attribute)": [[64, "neclib.devices.ad_converter.ad_converter_base.ADConverter.Manufacturer"]], "model (adconverter attribute)": [[64, "neclib.devices.ad_converter.ad_converter_base.ADConverter.Model"]], "finalize() (adconverter method)": [[64, "neclib.devices.ad_converter.ad_converter_base.ADConverter.finalize"]], "get_current() (adconverter method)": [[64, "neclib.devices.ad_converter.ad_converter_base.ADConverter.get_current"]], "get_voltage() (adconverter method)": [[64, "neclib.devices.ad_converter.ad_converter_base.ADConverter.get_voltage"]], "neclib.devices.ad_converter.ad_converter_base": [[64, "module-neclib.devices.ad_converter.ad_converter_base"]], "cpz3177 (class in neclib.devices.ad_converter.cpz3177)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177"]], "identifier (cpz3177 attribute)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.Identifier"]], "manufacturer (cpz3177 attribute)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.Manufacturer"]], "model (cpz3177 attribute)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.Model"]], "converter (cpz3177 property)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.converter"]], "finalize() (cpz3177 method)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.finalize"]], "get_current() (cpz3177 method)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.get_current"]], "get_data() (cpz3177 method)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.get_data"]], "get_power() (cpz3177 method)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.get_power"]], "get_voltage() (cpz3177 method)": [[65, "neclib.devices.ad_converter.cpz3177.CPZ3177.get_voltage"]], "neclib.devices.ad_converter.cpz3177": [[65, "module-neclib.devices.ad_converter.cpz3177"]], "adconvertersimulator (class in neclib.devices.ad_converter.simulator)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator"]], "identifier (adconvertersimulator attribute)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.Identifier"]], "manufacturer (adconvertersimulator attribute)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.Manufacturer"]], "model (adconvertersimulator attribute)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.Model"]], "finalize() (adconvertersimulator method)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.finalize"]], "get_current() (adconvertersimulator method)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.get_current"]], "get_voltage() (adconvertersimulator method)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.get_voltage"]], "is_simulator (adconvertersimulator attribute)": [[66, "neclib.devices.ad_converter.simulator.ADConverterSimulator.is_simulator"]], "neclib.devices.ad_converter.simulator": [[66, "module-neclib.devices.ad_converter.simulator"]], "neclib.devices.attenuator": [[67, "module-neclib.devices.attenuator"]], "a11713b (class in neclib.devices.attenuator.a11713b)": [[68, "neclib.devices.attenuator.a11713b.A11713B"]], "identifier (a11713b attribute)": [[68, "neclib.devices.attenuator.a11713b.A11713B.Identifier"]], "manufacturer (a11713b attribute)": [[68, "neclib.devices.attenuator.a11713b.A11713B.Manufacturer"]], "model (a11713b attribute)": [[68, "neclib.devices.attenuator.a11713b.A11713B.Model"]], "finalize() (a11713b method)": [[68, "neclib.devices.attenuator.a11713b.A11713B.finalize"]], "get_loss() (a11713b method)": [[68, "neclib.devices.attenuator.a11713b.A11713B.get_loss"]], "model_check() (a11713b method)": [[68, "neclib.devices.attenuator.a11713b.A11713B.model_check"]], "neclib.devices.attenuator.a11713b": [[68, "module-neclib.devices.attenuator.a11713b"]], "set_loss() (a11713b method)": [[68, "neclib.devices.attenuator.a11713b.A11713B.set_loss"]], "a11713c (class in neclib.devices.attenuator.a11713c)": [[69, "neclib.devices.attenuator.a11713c.A11713C"]], "identifier (a11713c attribute)": [[69, "neclib.devices.attenuator.a11713c.A11713C.Identifier"]], "manufacturer (a11713c attribute)": [[69, "neclib.devices.attenuator.a11713c.A11713C.Manufacturer"]], "model (a11713c attribute)": [[69, "neclib.devices.attenuator.a11713c.A11713C.Model"]], "finalize() (a11713c method)": [[69, "neclib.devices.attenuator.a11713c.A11713C.finalize"]], "get_loss() (a11713c method)": [[69, "neclib.devices.attenuator.a11713c.A11713C.get_loss"]], "model_check() (a11713c method)": [[69, "neclib.devices.attenuator.a11713c.A11713C.model_check"]], "neclib.devices.attenuator.a11713c": [[69, "module-neclib.devices.attenuator.a11713c"]], "set_loss() (a11713c method)": [[69, "neclib.devices.attenuator.a11713c.A11713C.set_loss"]], "currentattenuator (class in neclib.devices.attenuator.attenuator_base)": [[70, "neclib.devices.attenuator.attenuator_base.CurrentAttenuator"]], "networkattenuator (class in neclib.devices.attenuator.attenuator_base)": [[70, "neclib.devices.attenuator.attenuator_base.NetworkAttenuator"]], "apply_current() (currentattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.CurrentAttenuator.apply_current"]], "finalize() (currentattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.CurrentAttenuator.finalize"]], "get_loss() (networkattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.NetworkAttenuator.get_loss"]], "get_outputrange() (currentattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.CurrentAttenuator.get_outputrange"]], "neclib.devices.attenuator.attenuator_base": [[70, "module-neclib.devices.attenuator.attenuator_base"]], "set_current() (currentattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.CurrentAttenuator.set_current"]], "set_loss() (networkattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.NetworkAttenuator.set_loss"]], "set_outputrange() (currentattenuator method)": [[70, "neclib.devices.attenuator.attenuator_base.CurrentAttenuator.set_outputrange"]], "cpz340516 (class in neclib.devices.attenuator.cpz340516)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516"]], "identifier (cpz340516 attribute)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.Identifier"]], "manufacturer (cpz340516 attribute)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.Manufacturer"]], "model (cpz340516 attribute)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.Model"]], "apply_current() (cpz340516 method)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.apply_current"]], "finalize() (cpz340516 method)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.finalize"]], "get_outputrange() (cpz340516 method)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.get_outputrange"]], "neclib.devices.attenuator.cpz340516": [[71, "module-neclib.devices.attenuator.cpz340516"]], "set_current() (cpz340516 method)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.set_current"]], "set_outputrange() (cpz340516 method)": [[71, "neclib.devices.attenuator.cpz340516.CPZ340516.set_outputrange"]], "identifier (rhio10 attribute)": [[72, "neclib.devices.attenuator.rhio10.RHIO10.Identifier"]], "manufacturer (rhio10 attribute)": [[72, "neclib.devices.attenuator.rhio10.RHIO10.Manufacturer"]], "model (rhio10 attribute)": [[72, "neclib.devices.attenuator.rhio10.RHIO10.Model"]], "rhio10 (class in neclib.devices.attenuator.rhio10)": [[72, "neclib.devices.attenuator.rhio10.RHIO10"]], "finalize() (rhio10 method)": [[72, "neclib.devices.attenuator.rhio10.RHIO10.finalize"]], "get_loss() (rhio10 method)": [[72, "neclib.devices.attenuator.rhio10.RHIO10.get_loss"]], "neclib.devices.attenuator.rhio10": [[72, "module-neclib.devices.attenuator.rhio10"]], "set_loss() (rhio10 method)": [[72, "neclib.devices.attenuator.rhio10.RHIO10.set_loss"]], "currentattenuatorsimulator (class in neclib.devices.attenuator.simulator)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator"]], "identifier (currentattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.Identifier"]], "identifier (networkattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.Identifier"]], "manufacturer (currentattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.Manufacturer"]], "manufacturer (networkattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.Manufacturer"]], "model (currentattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.Model"]], "model (networkattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.Model"]], "networkattenuatorsimulator (class in neclib.devices.attenuator.simulator)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator"]], "finalize() (currentattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.finalize"]], "finalize() (networkattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.finalize"]], "get_loss() (networkattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.get_loss"]], "get_outputrange() (currentattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.get_outputrange"]], "is_simulator (currentattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.is_simulator"]], "is_simulator (networkattenuatorsimulator attribute)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.is_simulator"]], "neclib.devices.attenuator.simulator": [[73, "module-neclib.devices.attenuator.simulator"]], "output_current() (currentattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.output_current"]], "set_loss() (networkattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.NetworkAttenuatorSimulator.set_loss"]], "set_outputrange() (currentattenuatorsimulator method)": [[73, "neclib.devices.attenuator.simulator.CurrentAttenuatorSimulator.set_outputrange"]], "neclib.devices.ccd_controller": [[74, "module-neclib.devices.ccd_controller"]], "ccdcontroller (class in neclib.devices.ccd_controller.ccd_controller_base)": [[75, "neclib.devices.ccd_controller.ccd_controller_base.CCDController"]], "capture() (ccdcontroller method)": [[75, "neclib.devices.ccd_controller.ccd_controller_base.CCDController.capture"]], "finalize() (ccdcontroller method)": [[75, "neclib.devices.ccd_controller.ccd_controller_base.CCDController.finalize"]], "neclib.devices.ccd_controller.ccd_controller_base": [[75, "module-neclib.devices.ccd_controller.ccd_controller_base"]], "identifier (m100 attribute)": [[76, "neclib.devices.ccd_controller.m100.M100.Identifier"]], "m100 (class in neclib.devices.ccd_controller.m100)": [[76, "neclib.devices.ccd_controller.m100.M100"]], "manufacturer (m100 attribute)": [[76, "neclib.devices.ccd_controller.m100.M100.Manufacturer"]], "model (m100 attribute)": [[76, "neclib.devices.ccd_controller.m100.M100.Model"]], "capture() (m100 method)": [[76, "neclib.devices.ccd_controller.m100.M100.capture"]], "finalize() (m100 method)": [[76, "neclib.devices.ccd_controller.m100.M100.finalize"]], "neclib.devices.ccd_controller.m100": [[76, "module-neclib.devices.ccd_controller.m100"]], "ccdcontrollersimulator (class in neclib.devices.ccd_controller.simulator)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator"]], "identifier (ccdcontrollersimulator attribute)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator.Identifier"]], "manufacturer (ccdcontrollersimulator attribute)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator.Manufacturer"]], "model (ccdcontrollersimulator attribute)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator.Model"]], "capture() (ccdcontrollersimulator method)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator.capture"]], "finalize() (ccdcontrollersimulator method)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator.finalize"]], "is_simulator (ccdcontrollersimulator attribute)": [[77, "neclib.devices.ccd_controller.simulator.CCDControllerSimulator.is_simulator"]], "neclib.devices.ccd_controller.simulator": [[77, "module-neclib.devices.ccd_controller.simulator"]], "neclib.devices.da_converter": [[78, "module-neclib.devices.da_converter"]], "cpz340816 (class in neclib.devices.da_converter.cpz340816)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816"]], "identifier (cpz340816 attribute)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.Identifier"]], "manufacturer (cpz340816 attribute)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.Manufacturer"]], "model (cpz340816 attribute)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.Model"]], "apply_voltage() (cpz340816 method)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.apply_voltage"]], "converter (cpz340816 property)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.converter"]], "finalize() (cpz340816 method)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.finalize"]], "neclib.devices.da_converter.cpz340816": [[79, "module-neclib.devices.da_converter.cpz340816"]], "set_voltage() (cpz340816 method)": [[79, "neclib.devices.da_converter.cpz340816.CPZ340816.set_voltage"]], "daconverter (class in neclib.devices.da_converter.da_converter_base)": [[80, "neclib.devices.da_converter.da_converter_base.DAConverter"]], "manufacturer (daconverter attribute)": [[80, "neclib.devices.da_converter.da_converter_base.DAConverter.Manufacturer"]], "model (daconverter attribute)": [[80, "neclib.devices.da_converter.da_converter_base.DAConverter.Model"]], "apply_voltage() (daconverter method)": [[80, "neclib.devices.da_converter.da_converter_base.DAConverter.apply_voltage"]], "finalize() (daconverter method)": [[80, "neclib.devices.da_converter.da_converter_base.DAConverter.finalize"]], "neclib.devices.da_converter.da_converter_base": [[80, "module-neclib.devices.da_converter.da_converter_base"]], "set_voltage() (daconverter method)": [[80, "neclib.devices.da_converter.da_converter_base.DAConverter.set_voltage"]], "daconvertersimulator (class in neclib.devices.da_converter.simulator)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator"]], "identifier (daconvertersimulator attribute)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.Identifier"]], "manufacturer (daconvertersimulator attribute)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.Manufacturer"]], "model (daconvertersimulator attribute)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.Model"]], "apply_voltage() (daconvertersimulator method)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.apply_voltage"]], "finalize() (daconvertersimulator method)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.finalize"]], "is_simulator (daconvertersimulator attribute)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.is_simulator"]], "neclib.devices.da_converter.simulator": [[81, "module-neclib.devices.da_converter.simulator"]], "set_voltage() (daconvertersimulator method)": [[81, "neclib.devices.da_converter.simulator.DAConverterSimulator.set_voltage"]], "config (devicebase attribute)": [[82, "neclib.devices.device_base.DeviceBase.Config"]], "devicebase (class in neclib.devices.device_base)": [[82, "neclib.devices.device_base.DeviceBase"]], "devices (class in neclib.devices.device_base)": [[82, "neclib.devices.device_base.Devices"]], "identifier (devicebase attribute)": [[82, "neclib.devices.device_base.DeviceBase.Identifier"]], "manufacturer (devicebase attribute)": [[82, "neclib.devices.device_base.DeviceBase.Manufacturer"]], "model (devicebase attribute)": [[82, "neclib.devices.device_base.DeviceBase.Model"]], "bind() (devicebase class method)": [[82, "neclib.devices.device_base.DeviceBase.bind"]], "finalize() (devicebase method)": [[82, "neclib.devices.device_base.DeviceBase.finalize"]], "get_device_configuration() (in module neclib.devices.device_base)": [[82, "neclib.devices.device_base.get_device_configuration"]], "get_simulator_class() (devicebase class method)": [[82, "neclib.devices.device_base.DeviceBase.get_simulator_class"]], "is_simulator (devicebase attribute)": [[82, "neclib.devices.device_base.DeviceBase.is_simulator"]], "neclib.devices.device_base": [[82, "module-neclib.devices.device_base"]], "neclib.devices.encoder": [[83, "module-neclib.devices.encoder"]], "cpz6204 (class in neclib.devices.encoder.cpz6204)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204"]], "identifier (cpz6204 attribute)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.Identifier"]], "manufacturer (cpz6204 attribute)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.Manufacturer"]], "model (cpz6204 attribute)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.Model"]], "board_setting() (cpz6204 method)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.board_setting"]], "dome_set_counter() (cpz6204 method)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.dome_set_counter"]], "finalize() (cpz6204 method)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.finalize"]], "get_dome_reading() (cpz6204 method)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.get_dome_reading"]], "get_reading() (cpz6204 method)": [[84, "neclib.devices.encoder.cpz6204.CPZ6204.get_reading"]], "neclib.devices.encoder.cpz6204": [[84, "module-neclib.devices.encoder.cpz6204"]], "encoder (class in neclib.devices.encoder.encoder_base)": [[85, "neclib.devices.encoder.encoder_base.Encoder"]], "manufacturer (encoder attribute)": [[85, "neclib.devices.encoder.encoder_base.Encoder.Manufacturer"]], "model (encoder attribute)": [[85, "neclib.devices.encoder.encoder_base.Encoder.Model"]], "finalize() (encoder method)": [[85, "neclib.devices.encoder.encoder_base.Encoder.finalize"]], "get_reading() (encoder method)": [[85, "neclib.devices.encoder.encoder_base.Encoder.get_reading"]], "neclib.devices.encoder.encoder_base": [[85, "module-neclib.devices.encoder.encoder_base"]], "identifier (nd287 attribute)": [[86, "neclib.devices.encoder.nd287.ND287.Identifier"]], "manufacturer (nd287 attribute)": [[86, "neclib.devices.encoder.nd287.ND287.Manufacturer"]], "model (nd287 attribute)": [[86, "neclib.devices.encoder.nd287.ND287.Model"]], "nd287 (class in neclib.devices.encoder.nd287)": [[86, "neclib.devices.encoder.nd287.ND287"]], "finalize() (nd287 method)": [[86, "neclib.devices.encoder.nd287.ND287.finalize"]], "get_reading() (nd287 method)": [[86, "neclib.devices.encoder.nd287.ND287.get_reading"]], "neclib.devices.encoder.nd287": [[86, "module-neclib.devices.encoder.nd287"]], "encodersimulator (class in neclib.devices.encoder.simulator)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator"]], "identifier (encodersimulator attribute)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator.Identifier"]], "manufacturer (encodersimulator attribute)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator.Manufacturer"]], "model (encodersimulator attribute)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator.Model"]], "finalize() (encodersimulator method)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator.finalize"]], "get_reading() (encodersimulator method)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator.get_reading"]], "is_simulator (encodersimulator attribute)": [[87, "neclib.devices.encoder.simulator.EncoderSimulator.is_simulator"]], "neclib.devices.encoder.simulator": [[87, "module-neclib.devices.encoder.simulator"]], "neclib.devices.motor": [[88, "module-neclib.devices.motor"]], "cpz2724 (class in neclib.devices.motor.cpz2724)": [[89, "neclib.devices.motor.cpz2724.CPZ2724"]], "identifier (cpz2724 attribute)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.Identifier"]], "manufacturer (cpz2724 attribute)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.Manufacturer"]], "model (cpz2724 attribute)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.Model"]], "moveindexff() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.MoveIndexFF"]], "strobe() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.Strobe"]], "antenna_move() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.antenna_move"]], "antenna_status() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.antenna_status"]], "antenna_stop() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.antenna_stop"]], "contactor_move() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.contactor_move"]], "dome_fan() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_fan"]], "dome_limit_check() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_limit_check"]], "dome_move() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_move"]], "dome_oc() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_oc"]], "dome_pose() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_pose"]], "dome_status() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_status"]], "dome_stop() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.dome_stop"]], "drive_contactor_status() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.drive_contactor_status"]], "drive_move() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.drive_move"]], "finalize() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.finalize"]], "get_speed() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.get_speed"]], "get_step() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.get_step"]], "m2_move() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.m2_move"]], "m2_status() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.m2_status"]], "memb_oc() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.memb_oc"]], "memb_pose() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.memb_pose"]], "memb_status() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.memb_status"]], "neclib.devices.motor.cpz2724": [[89, "module-neclib.devices.motor.cpz2724"]], "set_speed() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.set_speed"]], "set_step() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.set_step"]], "um_to_puls() (cpz2724 method)": [[89, "neclib.devices.motor.cpz2724.CPZ2724.um_to_puls"]], "cpz7204 (class in neclib.devices.motor.cpz7204)": [[90, "neclib.devices.motor.cpz7204.CPZ7204"]], "identifier (cpz7204 attribute)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.Identifier"]], "manufacturer (cpz7204 attribute)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.Manufacturer"]], "model (cpz7204 attribute)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.Model"]], "finalize() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.finalize"]], "get_speed() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.get_speed"]], "get_step() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.get_step"]], "move() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.move"]], "neclib.devices.motor.cpz7204": [[90, "module-neclib.devices.motor.cpz7204"]], "set_speed() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.set_speed"]], "set_step() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.set_step"]], "stop() (cpz7204 method)": [[90, "neclib.devices.motor.cpz7204.CPZ7204.stop"]], "cpz7415v (class in neclib.devices.motor.cpz7415v)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V"]], "identifier (cpz7415v attribute)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.Identifier"]], "manufacturer (cpz7415v attribute)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.Manufacturer"]], "model (cpz7415v attribute)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.Model"]], "current_motion (cpz7415v property)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.current_motion"]], "finalize() (cpz7415v method)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.finalize"]], "get_speed() (cpz7415v method)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.get_speed"]], "get_step() (cpz7415v method)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.get_step"]], "neclib.devices.motor.cpz7415v": [[91, "module-neclib.devices.motor.cpz7415v"]], "set_speed() (cpz7415v method)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.set_speed"]], "set_step() (cpz7415v method)": [[91, "neclib.devices.motor.cpz7415v.CPZ7415V.set_step"]], "manufacturer (motor attribute)": [[92, "neclib.devices.motor.motor_base.Motor.Manufacturer"]], "model (motor attribute)": [[92, "neclib.devices.motor.motor_base.Motor.Model"]], "motor (class in neclib.devices.motor.motor_base)": [[92, "neclib.devices.motor.motor_base.Motor"]], "finalize() (motor method)": [[92, "neclib.devices.motor.motor_base.Motor.finalize"]], "get_speed() (motor method)": [[92, "neclib.devices.motor.motor_base.Motor.get_speed"]], "get_step() (motor method)": [[92, "neclib.devices.motor.motor_base.Motor.get_step"]], "neclib.devices.motor.motor_base": [[92, "module-neclib.devices.motor.motor_base"]], "set_speed() (motor method)": [[92, "neclib.devices.motor.motor_base.Motor.set_speed"]], "set_step() (motor method)": [[92, "neclib.devices.motor.motor_base.Motor.set_step"]], "identifier (motorsimulator attribute)": [[93, "neclib.devices.motor.simulator.MotorSimulator.Identifier"]], "manufacturer (motorsimulator attribute)": [[93, "neclib.devices.motor.simulator.MotorSimulator.Manufacturer"]], "model (motorsimulator attribute)": [[93, "neclib.devices.motor.simulator.MotorSimulator.Model"]], "motorsimulator (class in neclib.devices.motor.simulator)": [[93, "neclib.devices.motor.simulator.MotorSimulator"]], "finalize() (motorsimulator method)": [[93, "neclib.devices.motor.simulator.MotorSimulator.finalize"]], "get_speed() (motorsimulator method)": [[93, "neclib.devices.motor.simulator.MotorSimulator.get_speed"]], "get_step() (motorsimulator method)": [[93, "neclib.devices.motor.simulator.MotorSimulator.get_step"]], "is_simulator (motorsimulator attribute)": [[93, "neclib.devices.motor.simulator.MotorSimulator.is_simulator"]], "neclib.devices.motor.simulator": [[93, "module-neclib.devices.motor.simulator"]], "set_speed() (motorsimulator method)": [[93, "neclib.devices.motor.simulator.MotorSimulator.set_speed"]], "set_step() (motorsimulator method)": [[93, "neclib.devices.motor.simulator.MotorSimulator.set_step"]], "neclib.devices.power_meter": [[94, "module-neclib.devices.power_meter"]], "identifier (ma24126a attribute)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A.Identifier"]], "ma24126a (class in neclib.devices.power_meter.ma24126a)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A"]], "manufacturer (ma24126a attribute)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A.Manufacturer"]], "model (ma24126a attribute)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A.Model"]], "finalize() (ma24126a method)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A.finalize"]], "get_power() (ma24126a method)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A.get_power"]], "neclib.devices.power_meter.ma24126a": [[95, "module-neclib.devices.power_meter.ma24126a"]], "zero_set() (ma24126a method)": [[95, "neclib.devices.power_meter.ma24126a.MA24126A.zero_set"]], "identifier (ml2437a attribute)": [[96, "neclib.devices.power_meter.ml2437a.ML2437A.Identifier"]], "ml2437a (class in neclib.devices.power_meter.ml2437a)": [[96, "neclib.devices.power_meter.ml2437a.ML2437A"]], "manufacturer (ml2437a attribute)": [[96, "neclib.devices.power_meter.ml2437a.ML2437A.Manufacturer"]], "model (ml2437a attribute)": [[96, "neclib.devices.power_meter.ml2437a.ML2437A.Model"]], "finalize() (ml2437a method)": [[96, "neclib.devices.power_meter.ml2437a.ML2437A.finalize"]], "get_power() (ml2437a method)": [[96, "neclib.devices.power_meter.ml2437a.ML2437A.get_power"]], "neclib.devices.power_meter.ml2437a": [[96, "module-neclib.devices.power_meter.ml2437a"]], "powermeter (class in neclib.devices.power_meter.power_meter_base)": [[97, "neclib.devices.power_meter.power_meter_base.PowerMeter"]], "get_power() (powermeter method)": [[97, "neclib.devices.power_meter.power_meter_base.PowerMeter.get_power"]], "neclib.devices.power_meter.power_meter_base": [[97, "module-neclib.devices.power_meter.power_meter_base"]], "identifier (powermetersimulator attribute)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator.Identifier"]], "manufacturer (powermetersimulator attribute)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator.Manufacturer"]], "model (powermetersimulator attribute)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator.Model"]], "powermetersimulator (class in neclib.devices.power_meter.simulator)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator"]], "finalize() (powermetersimulator method)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator.finalize"]], "get_power() (powermetersimulator method)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator.get_power"]], "is_simulator (powermetersimulator attribute)": [[98, "neclib.devices.power_meter.simulator.PowerMeterSimulator.is_simulator"]], "neclib.devices.power_meter.simulator": [[98, "module-neclib.devices.power_meter.simulator"]], "get_device_configuration() (in module neclib.devices.selector)": [[99, "neclib.devices.selector.get_device_configuration"]], "get_device_list() (in module neclib.devices.selector)": [[99, "neclib.devices.selector.get_device_list"]], "list_implementations() (in module neclib.devices.selector)": [[99, "neclib.devices.selector.list_implementations"]], "neclib.devices.selector": [[99, "module-neclib.devices.selector"]], "parse_device_configuration() (in module neclib.devices.selector)": [[99, "neclib.devices.selector.parse_device_configuration"]], "neclib.devices.signal_generator": [[100, "module-neclib.devices.signal_generator"]], "e8257d (class in neclib.devices.signal_generator.e8257d)": [[101, "neclib.devices.signal_generator.e8257d.E8257D"]], "identifier (e8257d attribute)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.Identifier"]], "manufacturer (e8257d attribute)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.Manufacturer"]], "model (e8257d attribute)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.Model"]], "finalize() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.finalize"]], "get_freq() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.get_freq"]], "get_output_status() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.get_output_status"]], "get_power() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.get_power"]], "neclib.devices.signal_generator.e8257d": [[101, "module-neclib.devices.signal_generator.e8257d"]], "set_freq() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.set_freq"]], "set_power() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.set_power"]], "start_output() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.start_output"]], "stop_output() (e8257d method)": [[101, "neclib.devices.signal_generator.e8257d.E8257D.stop_output"]], "fsw0010 (class in neclib.devices.signal_generator.fsw0010)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010"]], "identifier (fsw0010 attribute)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.Identifier"]], "manufacturer (fsw0010 attribute)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.Manufacturer"]], "model (fsw0010 attribute)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.Model"]], "finalize() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.finalize"]], "get_freq() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.get_freq"]], "get_output_status() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.get_output_status"]], "get_power() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.get_power"]], "neclib.devices.signal_generator.fsw0010": [[102, "module-neclib.devices.signal_generator.fsw0010"]], "set_freq() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.set_freq"]], "set_power() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.set_power"]], "start_output() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.start_output"]], "stop_output() (fsw0010 method)": [[102, "neclib.devices.signal_generator.fsw0010.FSW0010.stop_output"]], "fsw0020 (class in neclib.devices.signal_generator.fsw0020)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020"]], "identifier (fsw0020 attribute)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.Identifier"]], "manufacturer (fsw0020 attribute)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.Manufacturer"]], "model (fsw0020 attribute)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.Model"]], "finalize() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.finalize"]], "get_freq() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.get_freq"]], "get_output_status() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.get_output_status"]], "get_power() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.get_power"]], "neclib.devices.signal_generator.fsw0020": [[103, "module-neclib.devices.signal_generator.fsw0020"]], "set_freq() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.set_freq"]], "set_power() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.set_power"]], "start_output() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.start_output"]], "stop_output() (fsw0020 method)": [[103, "neclib.devices.signal_generator.fsw0020.FSW0020.stop_output"]], "identifier (mg3692c attribute)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.Identifier"]], "mg3692c (class in neclib.devices.signal_generator.mg3692c)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C"]], "manufacturer (mg3692c attribute)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.Manufacturer"]], "model (mg3692c attribute)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.Model"]], "finalize() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.finalize"]], "get_freq() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.get_freq"]], "get_output_status() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.get_output_status"]], "get_power() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.get_power"]], "neclib.devices.signal_generator.mg3692c": [[104, "module-neclib.devices.signal_generator.mg3692c"]], "set_freq() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.set_freq"]], "set_power() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.set_power"]], "start_output() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.start_output"]], "stop_output() (mg3692c method)": [[104, "neclib.devices.signal_generator.mg3692c.MG3692C.stop_output"]], "manufacturer (signalgenerator attribute)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.Manufacturer"]], "model (signalgenerator attribute)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.Model"]], "signalgenerator (class in neclib.devices.signal_generator.signal_generator_base)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator"]], "finalize() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.finalize"]], "get_freq() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_freq"]], "get_output_status() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_output_status"]], "get_power() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.get_power"]], "neclib.devices.signal_generator.signal_generator_base": [[105, "module-neclib.devices.signal_generator.signal_generator_base"]], "set_freq() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.set_freq"]], "set_power() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.set_power"]], "start_output() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.start_output"]], "stop_output() (signalgenerator method)": [[105, "neclib.devices.signal_generator.signal_generator_base.SignalGenerator.stop_output"]], "identifier (signalgeneratorsimulator attribute)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.Identifier"]], "manufacturer (signalgeneratorsimulator attribute)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.Manufacturer"]], "model (signalgeneratorsimulator attribute)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.Model"]], "signalgeneratorsimulator (class in neclib.devices.signal_generator.simulator)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator"]], "finalize() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.finalize"]], "get_freq() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.get_freq"]], "get_output_status() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.get_output_status"]], "get_power() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.get_power"]], "is_simulator (signalgeneratorsimulator attribute)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.is_simulator"]], "neclib.devices.signal_generator.simulator": [[106, "module-neclib.devices.signal_generator.simulator"]], "set_freq() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.set_freq"]], "set_power() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.set_power"]], "start_output() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.start_output"]], "stop_output() (signalgeneratorsimulator method)": [[106, "neclib.devices.signal_generator.simulator.SignalGeneratorSimulator.stop_output"]], "neclib.devices.spectrometer": [[107, "module-neclib.devices.spectrometer"]], "ac240 (class in neclib.devices.spectrometer.ac240)": [[108, "neclib.devices.spectrometer.ac240.AC240"]], "identifier (ac240 attribute)": [[108, "neclib.devices.spectrometer.ac240.AC240.Identifier"]], "manufacturer (ac240 attribute)": [[108, "neclib.devices.spectrometer.ac240.AC240.Manufacturer"]], "model (ac240 attribute)": [[108, "neclib.devices.spectrometer.ac240.AC240.Model"]], "change_spec_ch() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.change_spec_ch"]], "finalize() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.finalize"]], "get_spectra() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.get_spectra"]], "msg_unpack() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.msg_unpack"]], "neclib.devices.spectrometer.ac240": [[108, "module-neclib.devices.spectrometer.ac240"]], "receive() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.receive"]], "start() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.start"]], "stop() (ac240 method)": [[108, "neclib.devices.spectrometer.ac240.AC240.stop"]], "identifier (spectrometersimulator attribute)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator.Identifier"]], "manufacturer (spectrometersimulator attribute)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator.Manufacturer"]], "model (spectrometersimulator attribute)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator.Model"]], "spectrometersimulator (class in neclib.devices.spectrometer.simulator)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator"]], "finalize() (spectrometersimulator method)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator.finalize"]], "get_spectra() (spectrometersimulator method)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator.get_spectra"]], "is_simulator (spectrometersimulator attribute)": [[109, "neclib.devices.spectrometer.simulator.SpectrometerSimulator.is_simulator"]], "neclib.devices.spectrometer.simulator": [[109, "module-neclib.devices.spectrometer.simulator"]], "spectrometer (class in neclib.devices.spectrometer.spectrometer_base)": [[110, "neclib.devices.spectrometer.spectrometer_base.Spectrometer"]], "get_spectra() (spectrometer method)": [[110, "neclib.devices.spectrometer.spectrometer_base.Spectrometer.get_spectra"]], "neclib.devices.spectrometer.spectrometer_base": [[110, "module-neclib.devices.spectrometer.spectrometer_base"]], "identifier (xffts attribute)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.Identifier"]], "manufacturer (xffts attribute)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.Manufacturer"]], "model (xffts attribute)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.Model"]], "xffts (class in neclib.devices.spectrometer.xffts)": [[111, "neclib.devices.spectrometer.xffts.XFFTS"]], "change_spec_ch() (xffts method)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.change_spec_ch"]], "finalize() (xffts method)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.finalize"]], "get_spectra() (xffts method)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.get_spectra"]], "initialize() (xffts method)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.initialize"]], "neclib.devices.spectrometer.xffts": [[111, "module-neclib.devices.spectrometer.xffts"]], "start() (xffts method)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.start"]], "stop() (xffts method)": [[111, "neclib.devices.spectrometer.xffts.XFFTS.stop"]], "neclib.devices.thermometer": [[112, "module-neclib.devices.thermometer"]], "identifier (model218 attribute)": [[113, "neclib.devices.thermometer.model_218.Model218.Identifier"]], "manufacturer (model218 attribute)": [[113, "neclib.devices.thermometer.model_218.Model218.Manufacturer"]], "model (model218 attribute)": [[113, "neclib.devices.thermometer.model_218.Model218.Model"]], "model218 (class in neclib.devices.thermometer.model_218)": [[113, "neclib.devices.thermometer.model_218.Model218"]], "finalize() (model218 method)": [[113, "neclib.devices.thermometer.model_218.Model218.finalize"]], "get_temp() (model218 method)": [[113, "neclib.devices.thermometer.model_218.Model218.get_temp"]], "neclib.devices.thermometer.model_218": [[113, "module-neclib.devices.thermometer.model_218"]], "identifier (thermometersimulator attribute)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator.Identifier"]], "manufacturer (thermometersimulator attribute)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator.Manufacturer"]], "model (thermometersimulator attribute)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator.Model"]], "thermometersimulator (class in neclib.devices.thermometer.simulator)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator"]], "finalize() (thermometersimulator method)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator.finalize"]], "get_temp() (thermometersimulator method)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator.get_temp"]], "is_simulator (thermometersimulator attribute)": [[114, "neclib.devices.thermometer.simulator.ThermometerSimulator.is_simulator"]], "neclib.devices.thermometer.simulator": [[114, "module-neclib.devices.thermometer.simulator"]], "manufacturer (thermometer attribute)": [[115, "neclib.devices.thermometer.thermometer_base.Thermometer.Manufacturer"]], "model (thermometer attribute)": [[115, "neclib.devices.thermometer.thermometer_base.Thermometer.Model"]], "thermometer (class in neclib.devices.thermometer.thermometer_base)": [[115, "neclib.devices.thermometer.thermometer_base.Thermometer"]], "finalize() (thermometer method)": [[115, "neclib.devices.thermometer.thermometer_base.Thermometer.finalize"]], "get_temp() (thermometer method)": [[115, "neclib.devices.thermometer.thermometer_base.Thermometer.get_temp"]], "neclib.devices.thermometer.thermometer_base": [[115, "module-neclib.devices.thermometer.thermometer_base"]], "neclib.devices.vacuum_gauge": [[116, "module-neclib.devices.vacuum_gauge"]], "identifier (vacuumgaugesimulator attribute)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator.Identifier"]], "manufacturer (vacuumgaugesimulator attribute)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator.Manufacturer"]], "model (vacuumgaugesimulator attribute)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator.Model"]], "vacuumgaugesimulator (class in neclib.devices.vacuum_gauge.simulator)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator"]], "finalize() (vacuumgaugesimulator method)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator.finalize"]], "get_pressure() (vacuumgaugesimulator method)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator.get_pressure"]], "is_simulator (vacuumgaugesimulator attribute)": [[117, "neclib.devices.vacuum_gauge.simulator.VacuumGaugeSimulator.is_simulator"]], "neclib.devices.vacuum_gauge.simulator": [[117, "module-neclib.devices.vacuum_gauge.simulator"]], "identifier (tpg261 attribute)": [[118, "neclib.devices.vacuum_gauge.tpg261.TPG261.Identifier"]], "manufacturer (tpg261 attribute)": [[118, "neclib.devices.vacuum_gauge.tpg261.TPG261.Manufacturer"]], "model (tpg261 attribute)": [[118, "neclib.devices.vacuum_gauge.tpg261.TPG261.Model"]], "tpg261 (class in neclib.devices.vacuum_gauge.tpg261)": [[118, "neclib.devices.vacuum_gauge.tpg261.TPG261"]], "finalize() (tpg261 method)": [[118, "neclib.devices.vacuum_gauge.tpg261.TPG261.finalize"]], "get_pressure() (tpg261 method)": [[118, "neclib.devices.vacuum_gauge.tpg261.TPG261.get_pressure"]], "neclib.devices.vacuum_gauge.tpg261": [[118, "module-neclib.devices.vacuum_gauge.tpg261"]], "vacuumgauge (class in neclib.devices.vacuum_gauge.vacuum_gauge_base)": [[119, "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge"]], "get_pressure() (vacuumgauge method)": [[119, "neclib.devices.vacuum_gauge.vacuum_gauge_base.VacuumGauge.get_pressure"]], "neclib.devices.vacuum_gauge.vacuum_gauge_base": [[119, "module-neclib.devices.vacuum_gauge.vacuum_gauge_base"]], "neclib.devices.weather_station": [[120, "module-neclib.devices.weather_station"]], "identifier (weatherstationsimulator attribute)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.Identifier"]], "manufacturer (weatherstationsimulator attribute)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.Manufacturer"]], "model (weatherstationsimulator attribute)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.Model"]], "weatherstationsimulator (class in neclib.devices.weather_station.simulator)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator"]], "finalize() (weatherstationsimulator method)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.finalize"]], "get_humidity() (weatherstationsimulator method)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.get_humidity"]], "get_pressure() (weatherstationsimulator method)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.get_pressure"]], "get_temperature() (weatherstationsimulator method)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.get_temperature"]], "is_simulator (weatherstationsimulator attribute)": [[121, "neclib.devices.weather_station.simulator.WeatherStationSimulator.is_simulator"]], "neclib.devices.weather_station.simulator": [[121, "module-neclib.devices.weather_station.simulator"]], "identifier (tr73u attribute)": [[122, "neclib.devices.weather_station.tr73u.TR73U.Identifier"]], "manufacturer (tr73u attribute)": [[122, "neclib.devices.weather_station.tr73u.TR73U.Manufacturer"]], "model (tr73u attribute)": [[122, "neclib.devices.weather_station.tr73u.TR73U.Model"]], "tr73u (class in neclib.devices.weather_station.tr73u)": [[122, "neclib.devices.weather_station.tr73u.TR73U"]], "finalize() (tr73u method)": [[122, "neclib.devices.weather_station.tr73u.TR73U.finalize"]], "get_humidity() (tr73u method)": [[122, "neclib.devices.weather_station.tr73u.TR73U.get_humidity"]], "get_pressure() (tr73u method)": [[122, "neclib.devices.weather_station.tr73u.TR73U.get_pressure"]], "get_temperature() (tr73u method)": [[122, "neclib.devices.weather_station.tr73u.TR73U.get_temperature"]], "neclib.devices.weather_station.tr73u": [[122, "module-neclib.devices.weather_station.tr73u"]], "manufacturer (weatherstation attribute)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation.Manufacturer"]], "model (weatherstation attribute)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation.Model"]], "weatherstation (class in neclib.devices.weather_station.weather_station_base)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation"]], "finalize() (weatherstation method)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation.finalize"]], "get_humidity() (weatherstation method)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_humidity"]], "get_pressure() (weatherstation method)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_pressure"]], "get_temperature() (weatherstation method)": [[123, "neclib.devices.weather_station.weather_station_base.WeatherStation.get_temperature"]], "neclib.devices.weather_station.weather_station_base": [[123, "module-neclib.devices.weather_station.weather_station_base"]], "neclib.recorders": [[124, "module-neclib.recorders"]], "consolelogwriter (class in neclib.recorders.console_log_writer)": [[125, "neclib.recorders.console_log_writer.ConsoleLogWriter"]], "append() (consolelogwriter method)": [[125, "neclib.recorders.console_log_writer.ConsoleLogWriter.append"]], "neclib.recorders.console_log_writer": [[125, "module-neclib.recorders.console_log_writer"]], "start_recording() (consolelogwriter method)": [[125, "neclib.recorders.console_log_writer.ConsoleLogWriter.start_recording"]], "stop_recording() (consolelogwriter method)": [[125, "neclib.recorders.console_log_writer.ConsoleLogWriter.stop_recording"]], "filewriter (class in neclib.recorders.file_writer)": [[126, "neclib.recorders.file_writer.FileWriter"]], "append() (filewriter method)": [[126, "neclib.recorders.file_writer.FileWriter.append"]], "neclib.recorders.file_writer": [[126, "module-neclib.recorders.file_writer"]], "start_recording() (filewriter method)": [[126, "neclib.recorders.file_writer.FileWriter.start_recording"]], "stop_recording() (filewriter method)": [[126, "neclib.recorders.file_writer.FileWriter.stop_recording"]], "dtypeconverters (necstdbwriter attribute)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.DTypeConverters"]], "livelinessduration (necstdbwriter attribute)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.LivelinessDuration"]], "necstdbwriter (class in neclib.recorders.necstdb_writer)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter"]], "warningqueuesize (necstdbwriter attribute)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.WarningQueueSize"]], "add_table() (necstdbwriter method)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.add_table"]], "append() (necstdbwriter method)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.append"]], "neclib.recorders.necstdb_writer": [[127, "module-neclib.recorders.necstdb_writer"]], "parse_str_size() (in module neclib.recorders.necstdb_writer)": [[127, "neclib.recorders.necstdb_writer.parse_str_size"]], "remove_table() (necstdbwriter method)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.remove_table"]], "start_recording() (necstdbwriter method)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.start_recording"]], "stop_recording() (necstdbwriter method)": [[127, "neclib.recorders.necstdb_writer.NECSTDBWriter.stop_recording"]], "str_to_bytes() (in module neclib.recorders.necstdb_writer)": [[127, "neclib.recorders.necstdb_writer.str_to_bytes"]], "recorder (class in neclib.recorders.recorder)": [[128, "neclib.recorders.recorder.Recorder"]], "add_writer() (recorder method)": [[128, "neclib.recorders.recorder.Recorder.add_writer"]], "append() (recorder method)": [[128, "neclib.recorders.recorder.Recorder.append"]], "drop_writer() (recorder method)": [[128, "neclib.recorders.recorder.Recorder.drop_writer"]], "is_recording (recorder property)": [[128, "neclib.recorders.recorder.Recorder.is_recording"]], "neclib.recorders.recorder": [[128, "module-neclib.recorders.recorder"]], "start_recording() (recorder method)": [[128, "neclib.recorders.recorder.Recorder.start_recording"]], "stop_recording() (recorder method)": [[128, "neclib.recorders.recorder.Recorder.stop_recording"]], "writers (recorder property)": [[128, "neclib.recorders.recorder.Recorder.writers"]], "writer (class in neclib.recorders.writer_base)": [[129, "neclib.recorders.writer_base.Writer"]], "append() (writer method)": [[129, "neclib.recorders.writer_base.Writer.append"]], "neclib.recorders.writer_base": [[129, "module-neclib.recorders.writer_base"]], "start_recording() (writer method)": [[129, "neclib.recorders.writer_base.Writer.start_recording"]], "stop_recording() (writer method)": [[129, "neclib.recorders.writer_base.Writer.stop_recording"]], "neclib.safety": [[130, "module-neclib.safety"]], "decelerate (class in neclib.safety.decelerate)": [[131, "neclib.safety.decelerate.Decelerate"]], "neclib.safety.decelerate": [[131, "module-neclib.safety.decelerate"]], "status (class in neclib.safety.status)": [[132, "neclib.safety.status.Status"]], "neclib.safety.status": [[132, "module-neclib.safety.status"]], "neclib.simulators": [[133, "module-neclib.simulators"]], "angle_unit (antennaencoderemulator attribute)": [[134, "neclib.simulators.antenna.AntennaEncoderEmulator.ANGLE_UNIT"]], "antennaencoderemulator (class in neclib.simulators.antenna)": [[134, "neclib.simulators.antenna.AntennaEncoderEmulator"]], "abs_acceleration (antennaencoderemulator property)": [[134, "neclib.simulators.antenna.AntennaEncoderEmulator.abs_acceleration"]], "command() (antennaencoderemulator method)": [[134, "neclib.simulators.antenna.AntennaEncoderEmulator.command"]], "dt (antennaencoderemulator property)": [[134, "neclib.simulators.antenna.AntennaEncoderEmulator.dt"]], "neclib.simulators.antenna": [[134, "module-neclib.simulators.antenna"]], "read() (antennaencoderemulator method)": [[134, "neclib.simulators.antenna.AntennaEncoderEmulator.read"]], "angle_unit (domeencoderemulator attribute)": [[135, "neclib.simulators.dome.DomeEncoderEmulator.ANGLE_UNIT"]], "domeencoderemulator (class in neclib.simulators.dome)": [[135, "neclib.simulators.dome.DomeEncoderEmulator"]], "abs_acceleration (domeencoderemulator property)": [[135, "neclib.simulators.dome.DomeEncoderEmulator.abs_acceleration"]], "command() (domeencoderemulator method)": [[135, "neclib.simulators.dome.DomeEncoderEmulator.command"]], "dt (domeencoderemulator property)": [[135, "neclib.simulators.dome.DomeEncoderEmulator.dt"]], "neclib.simulators.dome": [[135, "module-neclib.simulators.dome"]], "read() (domeencoderemulator method)": [[135, "neclib.simulators.dome.DomeEncoderEmulator.read"]], "neclib.utils": [[136, "module-neclib.utils"]], "linear_sequence() (in module neclib.utils.array_utils)": [[137, "neclib.utils.array_utils.linear_sequence"]], "neclib.utils.array_utils": [[137, "module-neclib.utils.array_utils"]], "aliaseddict (class in neclib.utils.data_utils)": [[138, "neclib.utils.data_utils.AliasedDict"]], "azeldata (class in neclib.utils.data_utils)": [[138, "neclib.utils.data_utils.AzElData"]], "parameterlist (class in neclib.utils.data_utils)": [[138, "neclib.utils.data_utils.ParameterList"]], "parametermapping (class in neclib.utils.data_utils)": [[138, "neclib.utils.data_utils.ParameterMapping"]], "alias() (aliaseddict method)": [[138, "neclib.utils.data_utils.AliasedDict.alias"]], "az (azeldata attribute)": [[138, "neclib.utils.data_utils.AzElData.az"]], "copy() (parameterlist method)": [[138, "neclib.utils.data_utils.ParameterList.copy"]], "copy() (parametermapping method)": [[138, "neclib.utils.data_utils.ParameterMapping.copy"]], "el (azeldata attribute)": [[138, "neclib.utils.data_utils.AzElData.el"]], "map() (parameterlist method)": [[138, "neclib.utils.data_utils.ParameterList.map"]], "neclib.utils.data_utils": [[138, "module-neclib.utils.data_utils"]], "new() (parameterlist class method)": [[138, "neclib.utils.data_utils.ParameterList.new"]], "push() (parameterlist method)": [[138, "neclib.utils.data_utils.ParameterList.push"]], "tocamelcase() (in module neclib.utils.data_utils)": [[138, "neclib.utils.data_utils.toCamelCase"]], "to_snake_case() (in module neclib.utils.data_utils)": [[138, "neclib.utils.data_utils.to_snake_case"]], "conditionchecker (class in neclib.utils.math_utils)": [[139, "neclib.utils.math_utils.ConditionChecker"]], "check() (conditionchecker method)": [[139, "neclib.utils.math_utils.ConditionChecker.check"]], "counter() (in module neclib.utils.math_utils)": [[139, "neclib.utils.math_utils.counter"]], "discretize() (in module neclib.utils.math_utils)": [[139, "neclib.utils.math_utils.discretize"]], "neclib.utils.math_utils": [[139, "module-neclib.utils.math_utils"]], "angle_conversion_factor() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.angle_conversion_factor"]], "daz2dx() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.dAz2dx"]], "dx2daz() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.dx2dAz"]], "force_data_type() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.force_data_type"]], "get_quantity() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.get_quantity"]], "neclib.utils.quantity_utils": [[140, "module-neclib.utils.quantity_utils"]], "parse_quantity() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.parse_quantity"]], "partially_convert_unit() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.partially_convert_unit"]], "quantity2builtin() (in module neclib.utils.quantity_utils)": [[140, "neclib.utils.quantity_utils.quantity2builtin"]], "neclib.utils.simulator_utils": [[141, "module-neclib.utils.simulator_utils"]], "skip_on_simulator() (in module neclib.utils.simulator_utils)": [[141, "neclib.utils.simulator_utils.skip_on_simulator"]]}})